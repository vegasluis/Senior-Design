
V01.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000010a  00800200  00001dcc  00001e60  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001dcc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000023  0080030a  0080030a  00001f6a  2**0
                  ALLOC
  3 .noinit       00000003  0080032d  0080032d  00001f6a  2**0
                  ALLOC
  4 .comment      0000005c  00000000  00000000  00001f6a  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001fc8  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 000001c8  00000000  00000000  00002008  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002530  00000000  00000000  000021d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000011b4  00000000  00000000  00004700  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000012f9  00000000  00000000  000058b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  0000062c  00000000  00000000  00006bb0  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000009ab  00000000  00000000  000071dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000184b  00000000  00000000  00007b87  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000001f8  00000000  00000000  000093d2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	f2 c0       	rjmp	.+484    	; 0x1e6 <__ctors_end>
       2:	00 00       	nop
       4:	5c c1       	rjmp	.+696    	; 0x2be <__bad_interrupt>
       6:	00 00       	nop
       8:	5a c1       	rjmp	.+692    	; 0x2be <__bad_interrupt>
       a:	00 00       	nop
       c:	58 c1       	rjmp	.+688    	; 0x2be <__bad_interrupt>
       e:	00 00       	nop
      10:	56 c1       	rjmp	.+684    	; 0x2be <__bad_interrupt>
      12:	00 00       	nop
      14:	54 c1       	rjmp	.+680    	; 0x2be <__bad_interrupt>
      16:	00 00       	nop
      18:	52 c1       	rjmp	.+676    	; 0x2be <__bad_interrupt>
      1a:	00 00       	nop
      1c:	50 c1       	rjmp	.+672    	; 0x2be <__bad_interrupt>
      1e:	00 00       	nop
      20:	4e c1       	rjmp	.+668    	; 0x2be <__bad_interrupt>
      22:	00 00       	nop
      24:	4c c1       	rjmp	.+664    	; 0x2be <__bad_interrupt>
      26:	00 00       	nop
      28:	4a c1       	rjmp	.+660    	; 0x2be <__bad_interrupt>
      2a:	00 00       	nop
      2c:	48 c1       	rjmp	.+656    	; 0x2be <__bad_interrupt>
      2e:	00 00       	nop
      30:	91 c3       	rjmp	.+1826   	; 0x754 <__vector_12>
      32:	00 00       	nop
      34:	44 c1       	rjmp	.+648    	; 0x2be <__bad_interrupt>
      36:	00 00       	nop
      38:	42 c1       	rjmp	.+644    	; 0x2be <__bad_interrupt>
      3a:	00 00       	nop
      3c:	40 c1       	rjmp	.+640    	; 0x2be <__bad_interrupt>
      3e:	00 00       	nop
      40:	3e c1       	rjmp	.+636    	; 0x2be <__bad_interrupt>
      42:	00 00       	nop
      44:	3c c1       	rjmp	.+632    	; 0x2be <__bad_interrupt>
      46:	00 00       	nop
      48:	3a c1       	rjmp	.+628    	; 0x2be <__bad_interrupt>
      4a:	00 00       	nop
      4c:	38 c1       	rjmp	.+624    	; 0x2be <__bad_interrupt>
      4e:	00 00       	nop
      50:	86 c5       	rjmp	.+2828   	; 0xb5e <__vector_20>
      52:	00 00       	nop
      54:	34 c1       	rjmp	.+616    	; 0x2be <__bad_interrupt>
      56:	00 00       	nop
      58:	32 c1       	rjmp	.+612    	; 0x2be <__bad_interrupt>
      5a:	00 00       	nop
      5c:	30 c1       	rjmp	.+608    	; 0x2be <__bad_interrupt>
      5e:	00 00       	nop
      60:	2e c1       	rjmp	.+604    	; 0x2be <__bad_interrupt>
      62:	00 00       	nop
      64:	cc c6       	rjmp	.+3480   	; 0xdfe <__vector_25>
      66:	00 00       	nop
      68:	2a c1       	rjmp	.+596    	; 0x2be <__bad_interrupt>
      6a:	00 00       	nop
      6c:	28 c1       	rjmp	.+592    	; 0x2be <__bad_interrupt>
      6e:	00 00       	nop
      70:	26 c1       	rjmp	.+588    	; 0x2be <__bad_interrupt>
      72:	00 00       	nop
      74:	24 c1       	rjmp	.+584    	; 0x2be <__bad_interrupt>
      76:	00 00       	nop
      78:	22 c1       	rjmp	.+580    	; 0x2be <__bad_interrupt>
      7a:	00 00       	nop
      7c:	20 c1       	rjmp	.+576    	; 0x2be <__bad_interrupt>
      7e:	00 00       	nop
      80:	1e c1       	rjmp	.+572    	; 0x2be <__bad_interrupt>
      82:	00 00       	nop
      84:	1c c1       	rjmp	.+568    	; 0x2be <__bad_interrupt>
      86:	00 00       	nop
      88:	1a c1       	rjmp	.+564    	; 0x2be <__bad_interrupt>
      8a:	00 00       	nop
      8c:	18 c1       	rjmp	.+560    	; 0x2be <__bad_interrupt>
      8e:	00 00       	nop
      90:	16 c1       	rjmp	.+556    	; 0x2be <__bad_interrupt>
      92:	00 00       	nop
      94:	14 c1       	rjmp	.+552    	; 0x2be <__bad_interrupt>
      96:	00 00       	nop
      98:	12 c1       	rjmp	.+548    	; 0x2be <__bad_interrupt>
      9a:	00 00       	nop
      9c:	10 c1       	rjmp	.+544    	; 0x2be <__bad_interrupt>
      9e:	00 00       	nop
      a0:	0e c1       	rjmp	.+540    	; 0x2be <__bad_interrupt>
      a2:	00 00       	nop
      a4:	0c c1       	rjmp	.+536    	; 0x2be <__bad_interrupt>
      a6:	00 00       	nop
      a8:	0a c1       	rjmp	.+532    	; 0x2be <__bad_interrupt>
      aa:	00 00       	nop
      ac:	08 c1       	rjmp	.+528    	; 0x2be <__bad_interrupt>
      ae:	00 00       	nop
      b0:	06 c1       	rjmp	.+524    	; 0x2be <__bad_interrupt>
      b2:	00 00       	nop
      b4:	04 c1       	rjmp	.+520    	; 0x2be <__bad_interrupt>
      b6:	00 00       	nop
      b8:	02 c1       	rjmp	.+516    	; 0x2be <__bad_interrupt>
      ba:	00 00       	nop
      bc:	00 c1       	rjmp	.+512    	; 0x2be <__bad_interrupt>
      be:	00 00       	nop
      c0:	fe c0       	rjmp	.+508    	; 0x2be <__bad_interrupt>
      c2:	00 00       	nop
      c4:	fc c0       	rjmp	.+504    	; 0x2be <__bad_interrupt>
      c6:	00 00       	nop
      c8:	fa c0       	rjmp	.+500    	; 0x2be <__bad_interrupt>
      ca:	00 00       	nop
      cc:	f8 c0       	rjmp	.+496    	; 0x2be <__bad_interrupt>
      ce:	00 00       	nop
      d0:	f6 c0       	rjmp	.+492    	; 0x2be <__bad_interrupt>
      d2:	00 00       	nop
      d4:	f4 c0       	rjmp	.+488    	; 0x2be <__bad_interrupt>
      d6:	00 00       	nop
      d8:	f2 c0       	rjmp	.+484    	; 0x2be <__bad_interrupt>
      da:	00 00       	nop
      dc:	f0 c0       	rjmp	.+480    	; 0x2be <__bad_interrupt>
      de:	00 00       	nop
      e0:	ee c0       	rjmp	.+476    	; 0x2be <__bad_interrupt>
	...

000000e4 <__trampolines_end>:
      e4:	6e 61       	ori	r22, 0x1E	; 30
      e6:	6e 00       	.word	0x006e	; ????

000000e8 <__c.2332>:
      e8:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      f8:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     108:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     118:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     128:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     138:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     148:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     158:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     168:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     178:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     188:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     198:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     1a8:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     1b8:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     1c8:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     1d8:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

000001e6 <__ctors_end>:
     1e6:	11 24       	eor	r1, r1
     1e8:	1f be       	out	0x3f, r1	; 63
     1ea:	cf ef       	ldi	r28, 0xFF	; 255
     1ec:	d1 e2       	ldi	r29, 0x21	; 33
     1ee:	de bf       	out	0x3e, r29	; 62
     1f0:	cd bf       	out	0x3d, r28	; 61
     1f2:	00 e0       	ldi	r16, 0x00	; 0
     1f4:	0c bf       	out	0x3c, r16	; 60

000001f6 <startUp>:
			break;
		putChar_0(buffer[i]);
		i++;
	}
	buffer[i] = '\0';
}
     1f6:	84 b7       	in	r24, 0x34	; 52
     1f8:	80 93 2f 03 	sts	0x032F, r24	; 0x80032f <mcusr_mirror>
     1fc:	14 be       	out	0x34, r1	; 52
     1fe:	0f b6       	in	r0, 0x3f	; 63
     200:	f8 94       	cli
     202:	a8 95       	wdr
     204:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x700060>
     208:	88 61       	ori	r24, 0x18	; 24
     20a:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x700060>
     20e:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x700060>
     212:	0f be       	out	0x3f, r0	; 63
     214:	ad d1       	rcall	.+858    	; 0x570 <uart0_int>
     216:	80 91 2f 03 	lds	r24, 0x032F	; 0x80032f <mcusr_mirror>
     21a:	88 23       	and	r24, r24
     21c:	19 f0       	breq	.+6      	; 0x224 <startUp+0x2e>
     21e:	88 e0       	ldi	r24, 0x08	; 8
     220:	92 e0       	ldi	r25, 0x02	; 2
     222:	d5 d1       	rcall	.+938    	; 0x5ce <printm_0>
     224:	e1 ec       	ldi	r30, 0xC1	; 193
     226:	f0 e0       	ldi	r31, 0x00	; 0
     228:	80 81       	ld	r24, Z
     22a:	80 68       	ori	r24, 0x80	; 128
     22c:	80 83       	st	Z, r24
     22e:	ea e7       	ldi	r30, 0x7A	; 122
     230:	f0 e0       	ldi	r31, 0x00	; 0
     232:	80 81       	ld	r24, Z
     234:	87 68       	ori	r24, 0x87	; 135
     236:	80 83       	st	Z, r24
     238:	ec e7       	ldi	r30, 0x7C	; 124
     23a:	f0 e0       	ldi	r31, 0x00	; 0
     23c:	80 81       	ld	r24, Z
     23e:	80 64       	ori	r24, 0x40	; 64
     240:	80 83       	st	Z, r24
     242:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x70007b>
     246:	69 d1       	rcall	.+722    	; 0x51a <initateTimer1>
     248:	ef e6       	ldi	r30, 0x6F	; 111
     24a:	f0 e0       	ldi	r31, 0x00	; 0
     24c:	80 81       	ld	r24, Z
     24e:	81 60       	ori	r24, 0x01	; 1
     250:	80 83       	st	Z, r24
     252:	86 e9       	ldi	r24, 0x96	; 150
     254:	90 e0       	ldi	r25, 0x00	; 0
     256:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
     25a:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
     25e:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x70008b>
     262:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x70008a>
     266:	90 93 8d 00 	sts	0x008D, r25	; 0x80008d <__TEXT_REGION_LENGTH__+0x70008d>
     26a:	80 93 8c 00 	sts	0x008C, r24	; 0x80008c <__TEXT_REGION_LENGTH__+0x70008c>
     26e:	81 b1       	in	r24, 0x01	; 1
     270:	87 60       	ori	r24, 0x07	; 7
     272:	81 b9       	out	0x01, r24	; 1
     274:	25 d0       	rcall	.+74     	; 0x2c0 <i2c_init>
     276:	8a b1       	in	r24, 0x0a	; 10
     278:	1a b8       	out	0x0a, r1	; 10
     27a:	8b b1       	in	r24, 0x0b	; 11
     27c:	83 60       	ori	r24, 0x03	; 3
     27e:	8b b9       	out	0x0b, r24	; 11
     280:	80 ed       	ldi	r24, 0xD0	; 208
     282:	24 d0       	rcall	.+72     	; 0x2cc <i2c_start>
     284:	d1 d0       	rcall	.+418    	; 0x428 <mpu6050_init>
     286:	10 92 2e 03 	sts	0x032E, r1	; 0x80032e <__bss_end+0x1>
     28a:	10 92 2d 03 	sts	0x032D, r1	; 0x80032d <__bss_end>

0000028e <__do_copy_data>:
     28e:	13 e0       	ldi	r17, 0x03	; 3
     290:	a0 e0       	ldi	r26, 0x00	; 0
     292:	b2 e0       	ldi	r27, 0x02	; 2
     294:	ec ec       	ldi	r30, 0xCC	; 204
     296:	fd e1       	ldi	r31, 0x1D	; 29
     298:	00 e0       	ldi	r16, 0x00	; 0
     29a:	0b bf       	out	0x3b, r16	; 59
     29c:	02 c0       	rjmp	.+4      	; 0x2a2 <__do_copy_data+0x14>
     29e:	07 90       	elpm	r0, Z+
     2a0:	0d 92       	st	X+, r0
     2a2:	aa 30       	cpi	r26, 0x0A	; 10
     2a4:	b1 07       	cpc	r27, r17
     2a6:	d9 f7       	brne	.-10     	; 0x29e <__do_copy_data+0x10>

000002a8 <__do_clear_bss>:
     2a8:	23 e0       	ldi	r18, 0x03	; 3
     2aa:	aa e0       	ldi	r26, 0x0A	; 10
     2ac:	b3 e0       	ldi	r27, 0x03	; 3
     2ae:	01 c0       	rjmp	.+2      	; 0x2b2 <.do_clear_bss_start>

000002b0 <.do_clear_bss_loop>:
     2b0:	1d 92       	st	X+, r1

000002b2 <.do_clear_bss_start>:
     2b2:	ad 32       	cpi	r26, 0x2D	; 45
     2b4:	b2 07       	cpc	r27, r18
     2b6:	e1 f7       	brne	.-8      	; 0x2b0 <.do_clear_bss_loop>
     2b8:	48 d2       	rcall	.+1168   	; 0x74a <main>
     2ba:	0c 94 e4 0e 	jmp	0x1dc8	; 0x1dc8 <_exit>

000002be <__bad_interrupt>:
     2be:	a0 ce       	rjmp	.-704    	; 0x0 <__vectors>

000002c0 <i2c_init>:

	i2c_stop();

	//NO ERROR
	return 0;
}
     2c0:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     2c4:	88 e4       	ldi	r24, 0x48	; 72
     2c6:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
     2ca:	08 95       	ret

000002cc <i2c_start>:
     2cc:	ec eb       	ldi	r30, 0xBC	; 188
     2ce:	f0 e0       	ldi	r31, 0x00	; 0
     2d0:	10 82       	st	Z, r1
     2d2:	94 ee       	ldi	r25, 0xE4	; 228
     2d4:	90 83       	st	Z, r25
     2d6:	90 81       	ld	r25, Z
     2d8:	99 23       	and	r25, r25
     2da:	ec f7       	brge	.-6      	; 0x2d6 <i2c_start+0xa>
     2dc:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     2e0:	98 7f       	andi	r25, 0xF8	; 248
     2e2:	98 30       	cpi	r25, 0x08	; 8
     2e4:	a1 f4       	brne	.+40     	; 0x30e <i2c_start+0x42>
     2e6:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     2ea:	84 e8       	ldi	r24, 0x84	; 132
     2ec:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     2f0:	ec eb       	ldi	r30, 0xBC	; 188
     2f2:	f0 e0       	ldi	r31, 0x00	; 0
     2f4:	80 81       	ld	r24, Z
     2f6:	88 23       	and	r24, r24
     2f8:	ec f7       	brge	.-6      	; 0x2f4 <i2c_start+0x28>
     2fa:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     2fe:	98 7f       	andi	r25, 0xF8	; 248
     300:	98 31       	cpi	r25, 0x18	; 24
     302:	39 f0       	breq	.+14     	; 0x312 <i2c_start+0x46>
     304:	81 e0       	ldi	r24, 0x01	; 1
     306:	90 34       	cpi	r25, 0x40	; 64
     308:	29 f4       	brne	.+10     	; 0x314 <i2c_start+0x48>
     30a:	80 e0       	ldi	r24, 0x00	; 0
     30c:	08 95       	ret
     30e:	81 e0       	ldi	r24, 0x01	; 1
     310:	08 95       	ret
     312:	80 e0       	ldi	r24, 0x00	; 0
     314:	08 95       	ret

00000316 <i2c_start_wait>:
     316:	cf 93       	push	r28
     318:	df 93       	push	r29
     31a:	ec eb       	ldi	r30, 0xBC	; 188
     31c:	f0 e0       	ldi	r31, 0x00	; 0
     31e:	24 ea       	ldi	r18, 0xA4	; 164
     320:	a9 eb       	ldi	r26, 0xB9	; 185
     322:	b0 e0       	ldi	r27, 0x00	; 0
     324:	cb eb       	ldi	r28, 0xBB	; 187
     326:	d0 e0       	ldi	r29, 0x00	; 0
     328:	34 e8       	ldi	r19, 0x84	; 132
     32a:	44 e9       	ldi	r20, 0x94	; 148
     32c:	20 83       	st	Z, r18
     32e:	90 81       	ld	r25, Z
     330:	99 23       	and	r25, r25
     332:	ec f7       	brge	.-6      	; 0x32e <i2c_start_wait+0x18>
     334:	9c 91       	ld	r25, X
     336:	98 7f       	andi	r25, 0xF8	; 248
     338:	98 30       	cpi	r25, 0x08	; 8
     33a:	11 f0       	breq	.+4      	; 0x340 <i2c_start_wait+0x2a>
     33c:	90 31       	cpi	r25, 0x10	; 16
     33e:	b1 f7       	brne	.-20     	; 0x32c <i2c_start_wait+0x16>
     340:	88 83       	st	Y, r24
     342:	30 83       	st	Z, r19
     344:	90 81       	ld	r25, Z
     346:	99 23       	and	r25, r25
     348:	ec f7       	brge	.-6      	; 0x344 <i2c_start_wait+0x2e>
     34a:	9c 91       	ld	r25, X
     34c:	98 7f       	andi	r25, 0xF8	; 248
     34e:	90 32       	cpi	r25, 0x20	; 32
     350:	11 f0       	breq	.+4      	; 0x356 <i2c_start_wait+0x40>
     352:	98 35       	cpi	r25, 0x58	; 88
     354:	29 f4       	brne	.+10     	; 0x360 <i2c_start_wait+0x4a>
     356:	40 83       	st	Z, r20
     358:	90 81       	ld	r25, Z
     35a:	94 fd       	sbrc	r25, 4
     35c:	fd cf       	rjmp	.-6      	; 0x358 <i2c_start_wait+0x42>
     35e:	e6 cf       	rjmp	.-52     	; 0x32c <i2c_start_wait+0x16>
     360:	df 91       	pop	r29
     362:	cf 91       	pop	r28
     364:	08 95       	ret

00000366 <i2c_write>:
     366:	51 9a       	sbi	0x0a, 1	; 10
     368:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     36c:	84 e8       	ldi	r24, 0x84	; 132
     36e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     372:	ec eb       	ldi	r30, 0xBC	; 188
     374:	f0 e0       	ldi	r31, 0x00	; 0
     376:	80 81       	ld	r24, Z
     378:	88 23       	and	r24, r24
     37a:	ec f7       	brge	.-6      	; 0x376 <i2c_write+0x10>
     37c:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     380:	98 7f       	andi	r25, 0xF8	; 248
     382:	81 e0       	ldi	r24, 0x01	; 1
     384:	98 32       	cpi	r25, 0x28	; 40
     386:	09 f4       	brne	.+2      	; 0x38a <i2c_write+0x24>
     388:	80 e0       	ldi	r24, 0x00	; 0
     38a:	08 95       	ret

0000038c <i2c_read_nack>:
     38c:	8a b1       	in	r24, 0x0a	; 10
     38e:	1a b8       	out	0x0a, r1	; 10
     390:	59 9a       	sbi	0x0b, 1	; 11
     392:	84 e8       	ldi	r24, 0x84	; 132
     394:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     398:	ec eb       	ldi	r30, 0xBC	; 188
     39a:	f0 e0       	ldi	r31, 0x00	; 0
     39c:	80 81       	ld	r24, Z
     39e:	88 23       	and	r24, r24
     3a0:	ec f7       	brge	.-6      	; 0x39c <i2c_read_nack+0x10>
     3a2:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     3a6:	08 95       	ret

000003a8 <i2c_stop>:
     3a8:	84 e9       	ldi	r24, 0x94	; 148
     3aa:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     3ae:	ec eb       	ldi	r30, 0xBC	; 188
     3b0:	f0 e0       	ldi	r31, 0x00	; 0
     3b2:	80 81       	ld	r24, Z
     3b4:	84 fd       	sbrc	r24, 4
     3b6:	fd cf       	rjmp	.-6      	; 0x3b2 <i2c_stop+0xa>
     3b8:	08 95       	ret

000003ba <i2c_writeRegByte>:
     3ba:	cf 93       	push	r28
     3bc:	df 93       	push	r29
     3be:	c6 2f       	mov	r28, r22
     3c0:	d4 2f       	mov	r29, r20
     3c2:	a9 df       	rcall	.-174    	; 0x316 <i2c_start_wait>
     3c4:	8c 2f       	mov	r24, r28
     3c6:	cf df       	rcall	.-98     	; 0x366 <i2c_write>
     3c8:	81 11       	cpse	r24, r1
     3ca:	07 c0       	rjmp	.+14     	; 0x3da <i2c_writeRegByte+0x20>
     3cc:	8d 2f       	mov	r24, r29
     3ce:	cb df       	rcall	.-106    	; 0x366 <i2c_write>
     3d0:	c8 2f       	mov	r28, r24
     3d2:	81 11       	cpse	r24, r1
     3d4:	04 c0       	rjmp	.+8      	; 0x3de <i2c_writeRegByte+0x24>
     3d6:	e8 df       	rcall	.-48     	; 0x3a8 <i2c_stop>
     3d8:	03 c0       	rjmp	.+6      	; 0x3e0 <i2c_writeRegByte+0x26>
     3da:	c1 e0       	ldi	r28, 0x01	; 1
     3dc:	01 c0       	rjmp	.+2      	; 0x3e0 <i2c_writeRegByte+0x26>
     3de:	c1 e0       	ldi	r28, 0x01	; 1
     3e0:	8c 2f       	mov	r24, r28
     3e2:	df 91       	pop	r29
     3e4:	cf 91       	pop	r28
     3e6:	08 95       	ret

000003e8 <i2c_readRegByte>:
// read multiple bytes from dev
uint8_t i2c_readRegByte(uint8_t devaddr, uint8_t regaddr, uint8_t* data)
{
     3e8:	0f 93       	push	r16
     3ea:	1f 93       	push	r17
     3ec:	cf 93       	push	r28
     3ee:	df 93       	push	r29
     3f0:	c8 2f       	mov	r28, r24
     3f2:	d6 2f       	mov	r29, r22
	i2c_start_wait(devaddr+I2C_WRITE);				//start i2c to write register address
	if(i2c_write(regaddr)) return 1;				//write address of register to read
     3f4:	8a 01       	movw	r16, r20
     3f6:	8f df       	rcall	.-226    	; 0x316 <i2c_start_wait>
     3f8:	8d 2f       	mov	r24, r29
	if(i2c_start(devaddr+I2C_READ))return 1;		//restart i2c to start reading
     3fa:	b5 df       	rcall	.-150    	; 0x366 <i2c_write>
     3fc:	81 11       	cpse	r24, r1
     3fe:	0b c0       	rjmp	.+22     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
     400:	81 e0       	ldi	r24, 0x01	; 1
	*data = i2c_read_nack();
     402:	8c 0f       	add	r24, r28
     404:	63 df       	rcall	.-314    	; 0x2cc <i2c_start>
     406:	c8 2f       	mov	r28, r24
    i2c_stop();	
     408:	81 11       	cpse	r24, r1
     40a:	07 c0       	rjmp	.+14     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
    return 0;			
     40c:	bf df       	rcall	.-130    	; 0x38c <i2c_read_nack>
}
// read multiple bytes from dev
uint8_t i2c_readRegByte(uint8_t devaddr, uint8_t regaddr, uint8_t* data)
{
	i2c_start_wait(devaddr+I2C_WRITE);				//start i2c to write register address
	if(i2c_write(regaddr)) return 1;				//write address of register to read
     40e:	f8 01       	movw	r30, r16
     410:	80 83       	st	Z, r24
	if(i2c_start(devaddr+I2C_READ))return 1;		//restart i2c to start reading
     412:	ca df       	rcall	.-108    	; 0x3a8 <i2c_stop>
	*data = i2c_read_nack();
    i2c_stop();	
    return 0;			
}
     414:	03 c0       	rjmp	.+6      	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
     416:	c1 e0       	ldi	r28, 0x01	; 1
     418:	01 c0       	rjmp	.+2      	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
     41a:	c1 e0       	ldi	r28, 0x01	; 1
     41c:	8c 2f       	mov	r24, r28
     41e:	df 91       	pop	r29
     420:	cf 91       	pop	r28
     422:	1f 91       	pop	r17
     424:	0f 91       	pop	r16
     426:	08 95       	ret

00000428 <mpu6050_init>:
	buff[0] = (tmp[0]<<8)|(tmp[1]);
	mpu6050_read_gyro_Y(tmp);
	buff[1] = (tmp[0]<<8)|(tmp[1]);
	mpu6050_read_gyro_Z(tmp);
	buff[2] = (tmp[0]<<8)|(tmp[1]);
}
     428:	40 e0       	ldi	r20, 0x00	; 0
     42a:	6b e6       	ldi	r22, 0x6B	; 107
     42c:	80 ed       	ldi	r24, 0xD0	; 208
     42e:	c5 df       	rcall	.-118    	; 0x3ba <i2c_writeRegByte>
     430:	41 e0       	ldi	r20, 0x01	; 1
     432:	6a e1       	ldi	r22, 0x1A	; 26
     434:	80 ed       	ldi	r24, 0xD0	; 208
     436:	c1 df       	rcall	.-126    	; 0x3ba <i2c_writeRegByte>
     438:	40 e0       	ldi	r20, 0x00	; 0
     43a:	6c e1       	ldi	r22, 0x1C	; 28
     43c:	80 ed       	ldi	r24, 0xD0	; 208
     43e:	bd df       	rcall	.-134    	; 0x3ba <i2c_writeRegByte>
     440:	40 e0       	ldi	r20, 0x00	; 0
     442:	68 e3       	ldi	r22, 0x38	; 56
     444:	80 ed       	ldi	r24, 0xD0	; 208
     446:	b9 df       	rcall	.-142    	; 0x3ba <i2c_writeRegByte>
     448:	40 e0       	ldi	r20, 0x00	; 0
     44a:	68 e6       	ldi	r22, 0x68	; 104
     44c:	80 ed       	ldi	r24, 0xD0	; 208
     44e:	b5 cf       	rjmp	.-150    	; 0x3ba <i2c_writeRegByte>
     450:	08 95       	ret

00000452 <mpu6050_read_accel_X>:


//read accel X, high- & low-8-bits separated, high first
//buff must have at least 2 available places
//no error handling for too small buff
void mpu6050_read_accel_X(uint8_t * buff){
     452:	cf 93       	push	r28
     454:	df 93       	push	r29
     456:	ec 01       	movw	r28, r24

	i2c_readRegByte(MPU6050_ADDRESS, MPU6050_RA_ACCEL_XOUT_H, buff);
     458:	ac 01       	movw	r20, r24
     45a:	6b e3       	ldi	r22, 0x3B	; 59
     45c:	80 ed       	ldi	r24, 0xD0	; 208
     45e:	c4 df       	rcall	.-120    	; 0x3e8 <i2c_readRegByte>
	i2c_readRegByte(MPU6050_ADDRESS, MPU6050_RA_ACCEL_XOUT_L, buff+1);
     460:	ae 01       	movw	r20, r28
     462:	4f 5f       	subi	r20, 0xFF	; 255
     464:	5f 4f       	sbci	r21, 0xFF	; 255
     466:	6c e3       	ldi	r22, 0x3C	; 60
     468:	80 ed       	ldi	r24, 0xD0	; 208
     46a:	be df       	rcall	.-132    	; 0x3e8 <i2c_readRegByte>
}
     46c:	df 91       	pop	r29
     46e:	cf 91       	pop	r28
     470:	08 95       	ret

00000472 <mpu6050_read_accel_Y>:

//read accel Y, high- & low-8-bits separated, high first
//buff must have at least 2 available places
//no error handling for too small buff
void mpu6050_read_accel_Y(uint8_t * buff){
     472:	cf 93       	push	r28
     474:	df 93       	push	r29
     476:	ec 01       	movw	r28, r24

	i2c_readRegByte(MPU6050_ADDRESS, MPU6050_RA_ACCEL_YOUT_H, buff);
     478:	ac 01       	movw	r20, r24
     47a:	6d e3       	ldi	r22, 0x3D	; 61
     47c:	80 ed       	ldi	r24, 0xD0	; 208
     47e:	b4 df       	rcall	.-152    	; 0x3e8 <i2c_readRegByte>
	i2c_readRegByte(MPU6050_ADDRESS, MPU6050_RA_ACCEL_YOUT_L, buff+1);
     480:	ae 01       	movw	r20, r28
     482:	4f 5f       	subi	r20, 0xFF	; 255
     484:	5f 4f       	sbci	r21, 0xFF	; 255
     486:	6e e3       	ldi	r22, 0x3E	; 62
     488:	80 ed       	ldi	r24, 0xD0	; 208
     48a:	ae df       	rcall	.-164    	; 0x3e8 <i2c_readRegByte>
}
     48c:	df 91       	pop	r29
     48e:	cf 91       	pop	r28
     490:	08 95       	ret

00000492 <mpu6050_read_accel_Z>:

//read accel Z, high- & low-8-bits separated, high first
//buff must have at least 2 available places
//no error handling for too small buff
void mpu6050_read_accel_Z(uint8_t * buff){
     492:	cf 93       	push	r28
     494:	df 93       	push	r29
     496:	ec 01       	movw	r28, r24

	i2c_readRegByte(MPU6050_ADDRESS, MPU6050_RA_ACCEL_ZOUT_H, buff);
     498:	ac 01       	movw	r20, r24
     49a:	6f e3       	ldi	r22, 0x3F	; 63
     49c:	80 ed       	ldi	r24, 0xD0	; 208
     49e:	a4 df       	rcall	.-184    	; 0x3e8 <i2c_readRegByte>
	i2c_readRegByte(MPU6050_ADDRESS, MPU6050_RA_ACCEL_ZOUT_L, buff+1);
     4a0:	ae 01       	movw	r20, r28
     4a2:	4f 5f       	subi	r20, 0xFF	; 255
     4a4:	5f 4f       	sbci	r21, 0xFF	; 255
     4a6:	60 e4       	ldi	r22, 0x40	; 64
     4a8:	80 ed       	ldi	r24, 0xD0	; 208
     4aa:	9e df       	rcall	.-196    	; 0x3e8 <i2c_readRegByte>
     4ac:	df 91       	pop	r29
     4ae:	cf 91       	pop	r28
     4b0:	08 95       	ret

000004b2 <mpu6050_read_accel_ALL>:

// read accel X, Y, Z all at once, high- & low-8-bits combined
// return int16_t (signed) in buff
//buff must have at least 3 available places
//no error handling for too small buff
void mpu6050_read_accel_ALL(int16_t * buff){
     4b2:	0f 93       	push	r16
     4b4:	1f 93       	push	r17
     4b6:	cf 93       	push	r28
     4b8:	df 93       	push	r29
     4ba:	1f 92       	push	r1
     4bc:	1f 92       	push	r1
     4be:	cd b7       	in	r28, 0x3d	; 61
     4c0:	de b7       	in	r29, 0x3e	; 62
     4c2:	8c 01       	movw	r16, r24
	
	uint8_t tmp[2];

	mpu6050_read_accel_X(tmp);
     4c4:	ce 01       	movw	r24, r28
     4c6:	01 96       	adiw	r24, 0x01	; 1
     4c8:	c4 df       	rcall	.-120    	; 0x452 <mpu6050_read_accel_X>
	buff[0] = (tmp[0]<<8)|(tmp[1]);
     4ca:	89 81       	ldd	r24, Y+1	; 0x01
     4cc:	90 e0       	ldi	r25, 0x00	; 0
     4ce:	98 2f       	mov	r25, r24
     4d0:	88 27       	eor	r24, r24
     4d2:	2a 81       	ldd	r18, Y+2	; 0x02
     4d4:	82 2b       	or	r24, r18
     4d6:	f8 01       	movw	r30, r16
     4d8:	91 83       	std	Z+1, r25	; 0x01
     4da:	80 83       	st	Z, r24
	mpu6050_read_accel_Y(tmp);
     4dc:	ce 01       	movw	r24, r28
     4de:	01 96       	adiw	r24, 0x01	; 1
     4e0:	c8 df       	rcall	.-112    	; 0x472 <mpu6050_read_accel_Y>
	buff[1] = (tmp[0]<<8)|(tmp[1]);
     4e2:	89 81       	ldd	r24, Y+1	; 0x01
     4e4:	90 e0       	ldi	r25, 0x00	; 0
     4e6:	98 2f       	mov	r25, r24
     4e8:	88 27       	eor	r24, r24
     4ea:	2a 81       	ldd	r18, Y+2	; 0x02
     4ec:	82 2b       	or	r24, r18
     4ee:	f8 01       	movw	r30, r16
     4f0:	93 83       	std	Z+3, r25	; 0x03
	mpu6050_read_accel_Z(tmp);
     4f2:	82 83       	std	Z+2, r24	; 0x02
     4f4:	ce 01       	movw	r24, r28
     4f6:	01 96       	adiw	r24, 0x01	; 1
	buff[2] = (tmp[0]<<8)|(tmp[1]);
     4f8:	cc df       	rcall	.-104    	; 0x492 <mpu6050_read_accel_Z>
     4fa:	89 81       	ldd	r24, Y+1	; 0x01
     4fc:	90 e0       	ldi	r25, 0x00	; 0
     4fe:	98 2f       	mov	r25, r24
     500:	88 27       	eor	r24, r24
     502:	2a 81       	ldd	r18, Y+2	; 0x02
     504:	82 2b       	or	r24, r18
     506:	f8 01       	movw	r30, r16
     508:	95 83       	std	Z+5, r25	; 0x05
}
     50a:	84 83       	std	Z+4, r24	; 0x04
     50c:	0f 90       	pop	r0
     50e:	0f 90       	pop	r0
     510:	df 91       	pop	r29
     512:	cf 91       	pop	r28
     514:	1f 91       	pop	r17
     516:	0f 91       	pop	r16
     518:	08 95       	ret

0000051a <initateTimer1>:
     51a:	e4 e6       	ldi	r30, 0x64	; 100
     51c:	f0 e0       	ldi	r31, 0x00	; 0
     51e:	80 81       	ld	r24, Z
     520:	87 7f       	andi	r24, 0xF7	; 247
     522:	80 83       	st	Z, r24
     524:	87 e8       	ldi	r24, 0x87	; 135
     526:	93 e1       	ldi	r25, 0x13	; 19
     528:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x700087>
     52c:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x700086>
     530:	e0 e8       	ldi	r30, 0x80	; 128
     532:	f0 e0       	ldi	r31, 0x00	; 0
     534:	80 81       	ld	r24, Z
     536:	82 60       	ori	r24, 0x02	; 2
     538:	80 83       	st	Z, r24
     53a:	80 81       	ld	r24, Z
     53c:	8e 7f       	andi	r24, 0xFE	; 254
     53e:	80 83       	st	Z, r24
     540:	a1 e8       	ldi	r26, 0x81	; 129
     542:	b0 e0       	ldi	r27, 0x00	; 0
     544:	8c 91       	ld	r24, X
     546:	88 61       	ori	r24, 0x18	; 24
     548:	8c 93       	st	X, r24
     54a:	8c 91       	ld	r24, X
     54c:	8b 7f       	andi	r24, 0xFB	; 251
     54e:	8c 93       	st	X, r24
     550:	8c 91       	ld	r24, X
     552:	83 60       	ori	r24, 0x03	; 3
     554:	8c 93       	st	X, r24
     556:	80 81       	ld	r24, Z
     558:	80 68       	ori	r24, 0x80	; 128
     55a:	80 83       	st	Z, r24
     55c:	80 81       	ld	r24, Z
     55e:	80 62       	ori	r24, 0x20	; 32
     560:	80 83       	st	Z, r24
     562:	80 81       	ld	r24, Z
     564:	88 60       	ori	r24, 0x08	; 8
     566:	80 83       	st	Z, r24
     568:	25 9a       	sbi	0x04, 5	; 4
     56a:	26 9a       	sbi	0x04, 6	; 4
     56c:	27 9a       	sbi	0x04, 7	; 4
     56e:	08 95       	ret

00000570 <uart0_int>:
     570:	e4 e6       	ldi	r30, 0x64	; 100
     572:	f0 e0       	ldi	r31, 0x00	; 0
     574:	80 81       	ld	r24, Z
     576:	8d 7f       	andi	r24, 0xFD	; 253
     578:	80 83       	st	Z, r24
     57a:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
     57e:	87 e6       	ldi	r24, 0x67	; 103
     580:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
     584:	e1 ec       	ldi	r30, 0xC1	; 193
     586:	f0 e0       	ldi	r31, 0x00	; 0
     588:	80 81       	ld	r24, Z
     58a:	88 60       	ori	r24, 0x08	; 8
     58c:	80 83       	st	Z, r24
     58e:	80 81       	ld	r24, Z
     590:	80 61       	ori	r24, 0x10	; 16
     592:	80 83       	st	Z, r24
     594:	e2 ec       	ldi	r30, 0xC2	; 194
     596:	f0 e0       	ldi	r31, 0x00	; 0
     598:	80 81       	ld	r24, Z
     59a:	8f 77       	andi	r24, 0x7F	; 127
     59c:	80 83       	st	Z, r24
     59e:	80 81       	ld	r24, Z
     5a0:	8f 7b       	andi	r24, 0xBF	; 191
     5a2:	80 83       	st	Z, r24
     5a4:	80 81       	ld	r24, Z
     5a6:	10 82       	st	Z, r1
     5a8:	80 81       	ld	r24, Z
     5aa:	86 60       	ori	r24, 0x06	; 6
     5ac:	80 83       	st	Z, r24
     5ae:	08 95       	ret

000005b0 <putChar_0>:
     5b0:	cf 93       	push	r28
     5b2:	c8 2f       	mov	r28, r24
     5b4:	8a 30       	cpi	r24, 0x0A	; 10
     5b6:	11 f4       	brne	.+4      	; 0x5bc <putChar_0+0xc>
     5b8:	8d e0       	ldi	r24, 0x0D	; 13
     5ba:	fa df       	rcall	.-12     	; 0x5b0 <putChar_0>
     5bc:	e0 ec       	ldi	r30, 0xC0	; 192
     5be:	f0 e0       	ldi	r31, 0x00	; 0
     5c0:	80 81       	ld	r24, Z
     5c2:	85 ff       	sbrs	r24, 5
     5c4:	fd cf       	rjmp	.-6      	; 0x5c0 <putChar_0+0x10>
     5c6:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     5ca:	cf 91       	pop	r28
     5cc:	08 95       	ret

000005ce <printm_0>:
     5ce:	cf 93       	push	r28
     5d0:	df 93       	push	r29
     5d2:	ec 01       	movw	r28, r24
     5d4:	88 81       	ld	r24, Y
     5d6:	88 23       	and	r24, r24
     5d8:	29 f0       	breq	.+10     	; 0x5e4 <printm_0+0x16>
     5da:	21 96       	adiw	r28, 0x01	; 1
     5dc:	e9 df       	rcall	.-46     	; 0x5b0 <putChar_0>
     5de:	89 91       	ld	r24, Y+
     5e0:	81 11       	cpse	r24, r1
     5e2:	fc cf       	rjmp	.-8      	; 0x5dc <printm_0+0xe>
     5e4:	df 91       	pop	r29
     5e6:	cf 91       	pop	r28
     5e8:	08 95       	ret

000005ea <print_int_0>:

void print_int_0(int data)
{
     5ea:	0f 93       	push	r16
     5ec:	1f 93       	push	r17
     5ee:	cf 93       	push	r28
     5f0:	df 93       	push	r29
     5f2:	cd b7       	in	r28, 0x3d	; 61
     5f4:	de b7       	in	r29, 0x3e	; 62
     5f6:	6e 97       	sbiw	r28, 0x1e	; 30
     5f8:	0f b6       	in	r0, 0x3f	; 63
     5fa:	f8 94       	cli
     5fc:	de bf       	out	0x3e, r29	; 62
     5fe:	0f be       	out	0x3f, r0	; 63
     600:	cd bf       	out	0x3d, r28	; 61
	char datastring[30] = {0};
     602:	8e 01       	movw	r16, r28
     604:	0f 5f       	subi	r16, 0xFF	; 255
     606:	1f 4f       	sbci	r17, 0xFF	; 255
     608:	2e e1       	ldi	r18, 0x1E	; 30
     60a:	f8 01       	movw	r30, r16
     60c:	11 92       	st	Z+, r1
     60e:	2a 95       	dec	r18
     610:	e9 f7       	brne	.-6      	; 0x60c <print_int_0+0x22>
	sprintf(datastring, "%d", data);
     612:	9f 93       	push	r25
     614:	8f 93       	push	r24
     616:	82 e0       	ldi	r24, 0x02	; 2
     618:	92 e0       	ldi	r25, 0x02	; 2
     61a:	9f 93       	push	r25
     61c:	8f 93       	push	r24
     61e:	1f 93       	push	r17
     620:	0f 93       	push	r16
     622:	0e 94 58 0e 	call	0x1cb0	; 0x1cb0 <sprintf>
	printm_0(datastring);
     626:	c8 01       	movw	r24, r16
     628:	d2 df       	rcall	.-92     	; 0x5ce <printm_0>
}
     62a:	0f 90       	pop	r0
     62c:	0f 90       	pop	r0
     62e:	0f 90       	pop	r0
     630:	0f 90       	pop	r0
     632:	0f 90       	pop	r0
     634:	0f 90       	pop	r0
     636:	6e 96       	adiw	r28, 0x1e	; 30
     638:	0f b6       	in	r0, 0x3f	; 63
     63a:	f8 94       	cli
     63c:	de bf       	out	0x3e, r29	; 62
     63e:	0f be       	out	0x3f, r0	; 63
     640:	cd bf       	out	0x3d, r28	; 61
     642:	df 91       	pop	r29
     644:	cf 91       	pop	r28
     646:	1f 91       	pop	r17
     648:	0f 91       	pop	r16
     64a:	08 95       	ret

0000064c <print_double_0>:

void print_double_0(double data)
{
     64c:	0f 93       	push	r16
     64e:	1f 93       	push	r17
     650:	cf 93       	push	r28
     652:	df 93       	push	r29
     654:	cd b7       	in	r28, 0x3d	; 61
     656:	de b7       	in	r29, 0x3e	; 62
     658:	6e 97       	sbiw	r28, 0x1e	; 30
     65a:	0f b6       	in	r0, 0x3f	; 63
     65c:	f8 94       	cli
     65e:	de bf       	out	0x3e, r29	; 62
     660:	0f be       	out	0x3f, r0	; 63
     662:	cd bf       	out	0x3d, r28	; 61
	char datastring[30] = {0};
     664:	8e 01       	movw	r16, r28
     666:	0f 5f       	subi	r16, 0xFF	; 255
     668:	1f 4f       	sbci	r17, 0xFF	; 255
     66a:	2e e1       	ldi	r18, 0x1E	; 30
     66c:	f8 01       	movw	r30, r16
     66e:	11 92       	st	Z+, r1
     670:	2a 95       	dec	r18
     672:	e9 f7       	brne	.-6      	; 0x66e <print_double_0+0x22>
	sprintf(datastring, "%f", data);
     674:	9f 93       	push	r25
     676:	8f 93       	push	r24
     678:	7f 93       	push	r23
     67a:	6f 93       	push	r22
     67c:	85 e0       	ldi	r24, 0x05	; 5
     67e:	92 e0       	ldi	r25, 0x02	; 2
     680:	9f 93       	push	r25
     682:	8f 93       	push	r24
     684:	1f 93       	push	r17
     686:	0f 93       	push	r16
     688:	0e 94 58 0e 	call	0x1cb0	; 0x1cb0 <sprintf>
	printm_0(datastring);
     68c:	c8 01       	movw	r24, r16
     68e:	9f df       	rcall	.-194    	; 0x5ce <printm_0>
}
     690:	0f b6       	in	r0, 0x3f	; 63
     692:	f8 94       	cli
     694:	de bf       	out	0x3e, r29	; 62
     696:	0f be       	out	0x3f, r0	; 63
     698:	cd bf       	out	0x3d, r28	; 61
     69a:	6e 96       	adiw	r28, 0x1e	; 30
     69c:	0f b6       	in	r0, 0x3f	; 63
     69e:	f8 94       	cli
     6a0:	de bf       	out	0x3e, r29	; 62
     6a2:	0f be       	out	0x3f, r0	; 63
     6a4:	cd bf       	out	0x3d, r28	; 61
     6a6:	df 91       	pop	r29
     6a8:	cf 91       	pop	r28
     6aa:	1f 91       	pop	r17
     6ac:	0f 91       	pop	r16
     6ae:	08 95       	ret

000006b0 <UART_0_flush>:

void UART_0_flush(void)
{	
	unsigned char dummy;
	while(UCSR0A & (1 << RXC0))dummy = UDR0;
     6b0:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7000c0>
     6b4:	88 23       	and	r24, r24
     6b6:	44 f4       	brge	.+16     	; 0x6c8 <UART_0_flush+0x18>
     6b8:	a6 ec       	ldi	r26, 0xC6	; 198
     6ba:	b0 e0       	ldi	r27, 0x00	; 0
     6bc:	e0 ec       	ldi	r30, 0xC0	; 192
     6be:	f0 e0       	ldi	r31, 0x00	; 0
     6c0:	8c 91       	ld	r24, X
     6c2:	80 81       	ld	r24, Z
     6c4:	88 23       	and	r24, r24
     6c6:	e4 f3       	brlt	.-8      	; 0x6c0 <UART_0_flush+0x10>
     6c8:	08 95       	ret

000006ca <waitADC>:
}

//Wait for conversion to finish 
void waitADC()
{
	ADCSRA |= (1<<ADSC);  // start conversion
     6ca:	ea e7       	ldi	r30, 0x7A	; 122
     6cc:	f0 e0       	ldi	r31, 0x00	; 0
     6ce:	80 81       	ld	r24, Z
     6d0:	80 64       	ori	r24, 0x40	; 64
     6d2:	80 83       	st	Z, r24
	while ((ADCSRA & (1 << ADSC)) == 0); // wait for completion
     6d4:	80 81       	ld	r24, Z
     6d6:	86 ff       	sbrs	r24, 6
     6d8:	fd cf       	rjmp	.-6      	; 0x6d4 <waitADC+0xa>
}
     6da:	08 95       	ret

000006dc <getTemp>:

#define TMP102_ADDRESS 0b10010000
//ADDR0 is assumed to be Ground

int getTemp()
{
     6dc:	cf 93       	push	r28
     6de:	df 93       	push	r29
     6e0:	1f 92       	push	r1
     6e2:	1f 92       	push	r1
     6e4:	cd b7       	in	r28, 0x3d	; 61
     6e6:	de b7       	in	r29, 0x3e	; 62
	uint8_t MSB,LSB;
	MSB = LSB = 0;
     6e8:	1a 82       	std	Y+2, r1	; 0x02
     6ea:	19 82       	std	Y+1, r1	; 0x01
	int Tempature = 0;

	//Start Communication with TMP102
	i2c_start(TMP102_ADDRESS+I2C_WRITE); 
     6ec:	80 e9       	ldi	r24, 0x90	; 144
     6ee:	ee dd       	rcall	.-1060   	; 0x2cc <i2c_start>

	//Most Significant Byte
	i2c_readRegByte(TMP102_ADDRESS,TMP102_ADDRESS,&MSB);
     6f0:	ae 01       	movw	r20, r28
     6f2:	4f 5f       	subi	r20, 0xFF	; 255
     6f4:	5f 4f       	sbci	r21, 0xFF	; 255
     6f6:	60 e9       	ldi	r22, 0x90	; 144
     6f8:	80 e9       	ldi	r24, 0x90	; 144
     6fa:	76 de       	rcall	.-788    	; 0x3e8 <i2c_readRegByte>

	//Least Signifiicant Byte
	i2c_readRegByte(TMP102_ADDRESS,TMP102_ADDRESS,&LSB);
     6fc:	ae 01       	movw	r20, r28
     6fe:	4e 5f       	subi	r20, 0xFE	; 254
     700:	5f 4f       	sbci	r21, 0xFF	; 255
     702:	60 e9       	ldi	r22, 0x90	; 144
     704:	80 e9       	ldi	r24, 0x90	; 144
     706:	70 de       	rcall	.-800    	; 0x3e8 <i2c_readRegByte>

	Tempature = (MSB <<8) | LSB;
     708:	29 81       	ldd	r18, Y+1	; 0x01
     70a:	30 e0       	ldi	r19, 0x00	; 0
     70c:	32 2f       	mov	r19, r18
     70e:	22 27       	eor	r18, r18
     710:	8a 81       	ldd	r24, Y+2	; 0x02
     712:	28 2b       	or	r18, r24
	Tempature >>= 4;
     714:	35 95       	asr	r19
     716:	27 95       	ror	r18
     718:	35 95       	asr	r19
     71a:	27 95       	ror	r18
     71c:	35 95       	asr	r19
     71e:	27 95       	ror	r18
     720:	35 95       	asr	r19
     722:	27 95       	ror	r18

	if(Tempature &(1<<11))
     724:	33 fd       	sbrc	r19, 3
		Tempature|=0xF800;
     726:	38 6f       	ori	r19, 0xF8	; 248

	Tempature /=16;

	return Tempature;
     728:	c9 01       	movw	r24, r18
     72a:	99 23       	and	r25, r25
     72c:	0c f4       	brge	.+2      	; 0x730 <getTemp+0x54>
     72e:	0f 96       	adiw	r24, 0x0f	; 15
}
     730:	95 95       	asr	r25
     732:	87 95       	ror	r24
     734:	95 95       	asr	r25
     736:	87 95       	ror	r24
     738:	95 95       	asr	r25
     73a:	87 95       	ror	r24
     73c:	95 95       	asr	r25
     73e:	87 95       	ror	r24
     740:	0f 90       	pop	r0
     742:	0f 90       	pop	r0
     744:	df 91       	pop	r29
     746:	cf 91       	pop	r28
     748:	08 95       	ret

0000074a <main>:
//********************************************************
//MAIN 

int main(void)
{
	printm_0("Welcome!!!\r\n");
     74a:	84 e1       	ldi	r24, 0x14	; 20
     74c:	92 e0       	ldi	r25, 0x02	; 2
     74e:	3f df       	rcall	.-386    	; 0x5ce <printm_0>
	
	//initate global interrupts
	sei(); 
     750:	78 94       	sei
     752:	ff cf       	rjmp	.-2      	; 0x752 <main+0x8>

00000754 <__vector_12>:
		UART_0_flush();
	}
}

ISR(WDT_vect)
{
     754:	1f 92       	push	r1
     756:	0f 92       	push	r0
     758:	0f b6       	in	r0, 0x3f	; 63
     75a:	0f 92       	push	r0
     75c:	11 24       	eor	r1, r1
	soft_reset();
     75e:	f8 94       	cli
		);
	}
	else
	{
        uint8_t register temp_reg;
		__asm__ __volatile__ (
     760:	0f b6       	in	r0, 0x3f	; 63
     762:	f8 94       	cli
     764:	a8 95       	wdr
     766:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x700060>
     76a:	88 61       	ori	r24, 0x18	; 24
     76c:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x700060>
     770:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x700060>
     774:	0f be       	out	0x3f, r0	; 63
				: "r0"
		);
	}
	else
	{
		__asm__ __volatile__ (
     776:	98 e0       	ldi	r25, 0x08	; 8
     778:	88 e1       	ldi	r24, 0x18	; 24
     77a:	0f b6       	in	r0, 0x3f	; 63
     77c:	f8 94       	cli
     77e:	a8 95       	wdr
     780:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x700060>
     784:	0f be       	out	0x3f, r0	; 63
     786:	90 93 60 00 	sts	0x0060, r25	; 0x800060 <__TEXT_REGION_LENGTH__+0x700060>
     78a:	ff cf       	rjmp	.-2      	; 0x78a <__vector_12+0x36>

0000078c <getAngle>:
 * An angle between 0 - 180
 */
volatile uint16_t getAngle (char firstInt, char secondInt, char thirdInt)
{
	uint16_t sum = 0;
	sum =  (firstInt - 0x30)*100;
     78c:	28 2f       	mov	r18, r24
     78e:	30 e0       	ldi	r19, 0x00	; 0
     790:	20 53       	subi	r18, 0x30	; 48
     792:	31 09       	sbc	r19, r1
     794:	54 e6       	ldi	r21, 0x64	; 100
     796:	52 9f       	mul	r21, r18
     798:	c0 01       	movw	r24, r0
     79a:	53 9f       	mul	r21, r19
     79c:	90 0d       	add	r25, r0
     79e:	11 24       	eor	r1, r1
	sum += (secondInt - 0x30)*10;
	sum += (thirdInt - 0x30);
	return sum;
     7a0:	70 e0       	ldi	r23, 0x00	; 0
     7a2:	60 53       	subi	r22, 0x30	; 48
     7a4:	71 09       	sbc	r23, r1
     7a6:	9b 01       	movw	r18, r22
     7a8:	22 0f       	add	r18, r18
     7aa:	33 1f       	adc	r19, r19
     7ac:	66 0f       	add	r22, r22
     7ae:	77 1f       	adc	r23, r23
     7b0:	66 0f       	add	r22, r22
     7b2:	77 1f       	adc	r23, r23
     7b4:	66 0f       	add	r22, r22
     7b6:	77 1f       	adc	r23, r23
     7b8:	62 0f       	add	r22, r18
     7ba:	73 1f       	adc	r23, r19
     7bc:	50 e0       	ldi	r21, 0x00	; 0
     7be:	40 53       	subi	r20, 0x30	; 48
     7c0:	51 09       	sbc	r21, r1
     7c2:	64 0f       	add	r22, r20
     7c4:	75 1f       	adc	r23, r21
}
     7c6:	86 0f       	add	r24, r22
     7c8:	97 1f       	adc	r25, r23
     7ca:	08 95       	ret

000007cc <getServoPos>:
 */
volatile uint16_t getServoPos(uint16_t angle)
{
	uint16_t servoVal = 0;
	servoVal = (uint16_t) ((((float)angle)/180.0)*490.0)+150.0;
	return servoVal;
     7cc:	bc 01       	movw	r22, r24
     7ce:	80 e0       	ldi	r24, 0x00	; 0
     7d0:	90 e0       	ldi	r25, 0x00	; 0
     7d2:	a2 d4       	rcall	.+2372   	; 0x1118 <__floatunsisf>
     7d4:	20 e0       	ldi	r18, 0x00	; 0
     7d6:	30 e0       	ldi	r19, 0x00	; 0
     7d8:	44 e3       	ldi	r20, 0x34	; 52
     7da:	53 e4       	ldi	r21, 0x43	; 67
     7dc:	09 d4       	rcall	.+2066   	; 0xff0 <__divsf3>
     7de:	20 e0       	ldi	r18, 0x00	; 0
     7e0:	30 e0       	ldi	r19, 0x00	; 0
     7e2:	45 ef       	ldi	r20, 0xF5	; 245
     7e4:	53 e4       	ldi	r21, 0x43	; 67
     7e6:	4e d5       	rcall	.+2716   	; 0x1284 <__mulsf3>
     7e8:	6b d4       	rcall	.+2262   	; 0x10c0 <__fixunssfsi>
     7ea:	80 e0       	ldi	r24, 0x00	; 0
     7ec:	90 e0       	ldi	r25, 0x00	; 0
     7ee:	94 d4       	rcall	.+2344   	; 0x1118 <__floatunsisf>
     7f0:	20 e0       	ldi	r18, 0x00	; 0
     7f2:	30 e0       	ldi	r19, 0x00	; 0
     7f4:	46 e1       	ldi	r20, 0x16	; 22
     7f6:	53 e4       	ldi	r21, 0x43	; 67
     7f8:	93 d3       	rcall	.+1830   	; 0xf20 <__addsf3>
     7fa:	62 d4       	rcall	.+2244   	; 0x10c0 <__fixunssfsi>
}
     7fc:	cb 01       	movw	r24, r22
     7fe:	08 95       	ret

00000800 <LED_state>:
/*
 * Change the respeceted LED state
 */
void LED_state(char servoNum, char on)
{
	switch(servoNum){
     800:	82 33       	cpi	r24, 0x32	; 50
     802:	51 f0       	breq	.+20     	; 0x818 <LED_state+0x18>
     804:	83 33       	cpi	r24, 0x33	; 51
     806:	71 f0       	breq	.+28     	; 0x824 <LED_state+0x24>
     808:	81 33       	cpi	r24, 0x31	; 49
     80a:	91 f4       	brne	.+36     	; 0x830 <LED_state+0x30>
		case '1': 
		{
			if(on == '1') PORTA |= (1<<PA0);
     80c:	61 33       	cpi	r22, 0x31	; 49
     80e:	11 f4       	brne	.+4      	; 0x814 <LED_state+0x14>
     810:	10 9a       	sbi	0x02, 0	; 2
     812:	08 95       	ret
			else PORTA &= ~(1<<PA0);
     814:	10 98       	cbi	0x02, 0	; 2
     816:	08 95       	ret
			break;
		}
		case '2':
		{
			if(on == '1') PORTA |= (1<<PA1);
     818:	61 33       	cpi	r22, 0x31	; 49
     81a:	11 f4       	brne	.+4      	; 0x820 <LED_state+0x20>
     81c:	11 9a       	sbi	0x02, 1	; 2
     81e:	08 95       	ret
			else PORTA &= ~(1<<PA1);
     820:	11 98       	cbi	0x02, 1	; 2
     822:	08 95       	ret
			break;
		}
		case '3':
		{
			if(on == '1') PORTA |= (1<<PA2);
     824:	61 33       	cpi	r22, 0x31	; 49
     826:	11 f4       	brne	.+4      	; 0x82c <LED_state+0x2c>
     828:	12 9a       	sbi	0x02, 2	; 2
     82a:	08 95       	ret
			else PORTA &= ~(1<<PA2);
     82c:	12 98       	cbi	0x02, 2	; 2
     82e:	08 95       	ret
			break;
		}
		default:printm_0("Servo Number does not exist\r\n");break;
     830:	81 e2       	ldi	r24, 0x21	; 33
     832:	92 e0       	ldi	r25, 0x02	; 2
     834:	cc ce       	rjmp	.-616    	; 0x5ce <printm_0>
     836:	08 95       	ret

00000838 <setServos>:
 *Arguments: a string consisting of 3 servos, 3 LEDs , and
 *3 distinct angles
 *Format of Argument String: 1 1 000 2 1 000 3 1 000
 */
void setServos(volatile char* readString)
{ 
     838:	cf 93       	push	r28
     83a:	df 93       	push	r29
     83c:	ec 01       	movw	r28, r24
	uint16_t servoPosVal = 0; 

 	//SERVO 1 
 	//readString[0] == Servo 1
 	//read String[1] == ON/OFF state
 	LED_state(readString[0],readString[1]);
     83e:	69 81       	ldd	r22, Y+1	; 0x01
     840:	88 81       	ld	r24, Y
     842:	de df       	rcall	.-68     	; 0x800 <LED_state>
 	servoPosVal = getServoPos(getAngle(readString[2],readString[3],readString[4]));
     844:	4c 81       	ldd	r20, Y+4	; 0x04
     846:	6b 81       	ldd	r22, Y+3	; 0x03
     848:	8a 81       	ldd	r24, Y+2	; 0x02
     84a:	a0 df       	rcall	.-192    	; 0x78c <getAngle>
     84c:	bf df       	rcall	.-130    	; 0x7cc <getServoPos>
 	if(servoPosVal < SERVO_MIN) OCR1A = SERVO_MIN;
     84e:	86 39       	cpi	r24, 0x96	; 150
     850:	91 05       	cpc	r25, r1
     852:	38 f4       	brcc	.+14     	; 0x862 <setServos+0x2a>
     854:	86 e9       	ldi	r24, 0x96	; 150
     856:	90 e0       	ldi	r25, 0x00	; 0
     858:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
     85c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
     860:	0f c0       	rjmp	.+30     	; 0x880 <setServos+0x48>
 	else if (servoPosVal > SERVO_MAX) OCR1A = SERVO_MAX;
     862:	81 38       	cpi	r24, 0x81	; 129
     864:	22 e0       	ldi	r18, 0x02	; 2
     866:	92 07       	cpc	r25, r18
     868:	38 f0       	brcs	.+14     	; 0x878 <setServos+0x40>
     86a:	80 e8       	ldi	r24, 0x80	; 128
     86c:	92 e0       	ldi	r25, 0x02	; 2
     86e:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
     872:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
     876:	04 c0       	rjmp	.+8      	; 0x880 <setServos+0x48>
 	else OCR1A = servoPosVal;
     878:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
     87c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>

 	//SERVO2
 	//readString[5] == Servo 1
 	//read String[6] == ON/OFF state
 	LED_state(readString[5],readString[6]);
     880:	6e 81       	ldd	r22, Y+6	; 0x06
 	servoPosVal = getServoPos(getAngle(readString[7],readString[8],readString[9]));
     882:	8d 81       	ldd	r24, Y+5	; 0x05
     884:	bd df       	rcall	.-134    	; 0x800 <LED_state>
     886:	49 85       	ldd	r20, Y+9	; 0x09
     888:	68 85       	ldd	r22, Y+8	; 0x08
     88a:	8f 81       	ldd	r24, Y+7	; 0x07
     88c:	7f df       	rcall	.-258    	; 0x78c <getAngle>
 	if(servoPosVal < SERVO_MIN) OCR1B = SERVO_MIN;
     88e:	9e df       	rcall	.-196    	; 0x7cc <getServoPos>
     890:	86 39       	cpi	r24, 0x96	; 150
     892:	91 05       	cpc	r25, r1
     894:	38 f4       	brcc	.+14     	; 0x8a4 <setServos+0x6c>
     896:	86 e9       	ldi	r24, 0x96	; 150
     898:	90 e0       	ldi	r25, 0x00	; 0
     89a:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x70008b>
     89e:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x70008a>
 	else if (servoPosVal > SERVO_MAX) OCR1B = SERVO_MAX;
     8a2:	0f c0       	rjmp	.+30     	; 0x8c2 <setServos+0x8a>
     8a4:	81 38       	cpi	r24, 0x81	; 129
     8a6:	22 e0       	ldi	r18, 0x02	; 2
     8a8:	92 07       	cpc	r25, r18
     8aa:	38 f0       	brcs	.+14     	; 0x8ba <setServos+0x82>
     8ac:	80 e8       	ldi	r24, 0x80	; 128
     8ae:	92 e0       	ldi	r25, 0x02	; 2
     8b0:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x70008b>
     8b4:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x70008a>
 	else OCR1B = servoPosVal;
     8b8:	04 c0       	rjmp	.+8      	; 0x8c2 <setServos+0x8a>

 	//SERVO3
 	//readString[10] == Servo 1
 	//read String[11] == ON/OFF state
 	LED_state(readString[10],readString[11]);
     8ba:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x70008b>
 	servoPosVal = getServoPos(getAngle(readString[12],readString[13],readString[14]));
     8be:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x70008a>
     8c2:	6b 85       	ldd	r22, Y+11	; 0x0b
     8c4:	8a 85       	ldd	r24, Y+10	; 0x0a
     8c6:	9c df       	rcall	.-200    	; 0x800 <LED_state>
     8c8:	4e 85       	ldd	r20, Y+14	; 0x0e
     8ca:	6d 85       	ldd	r22, Y+13	; 0x0d
 	if(servoPosVal < SERVO_MIN) OCR1C = SERVO_MIN;
     8cc:	8c 85       	ldd	r24, Y+12	; 0x0c
     8ce:	5e df       	rcall	.-324    	; 0x78c <getAngle>
     8d0:	7d df       	rcall	.-262    	; 0x7cc <getServoPos>
     8d2:	86 39       	cpi	r24, 0x96	; 150
     8d4:	91 05       	cpc	r25, r1
     8d6:	38 f4       	brcc	.+14     	; 0x8e6 <setServos+0xae>
     8d8:	86 e9       	ldi	r24, 0x96	; 150
     8da:	90 e0       	ldi	r25, 0x00	; 0
     8dc:	90 93 8d 00 	sts	0x008D, r25	; 0x80008d <__TEXT_REGION_LENGTH__+0x70008d>
 	else if (servoPosVal > SERVO_MAX) OCR1C = SERVO_MAX;
     8e0:	80 93 8c 00 	sts	0x008C, r24	; 0x80008c <__TEXT_REGION_LENGTH__+0x70008c>
     8e4:	0f c0       	rjmp	.+30     	; 0x904 <setServos+0xcc>
     8e6:	81 38       	cpi	r24, 0x81	; 129
     8e8:	22 e0       	ldi	r18, 0x02	; 2
     8ea:	92 07       	cpc	r25, r18
     8ec:	38 f0       	brcs	.+14     	; 0x8fc <setServos+0xc4>
     8ee:	80 e8       	ldi	r24, 0x80	; 128
     8f0:	92 e0       	ldi	r25, 0x02	; 2
     8f2:	90 93 8d 00 	sts	0x008D, r25	; 0x80008d <__TEXT_REGION_LENGTH__+0x70008d>
 	else OCR1C = servoPosVal;
     8f6:	80 93 8c 00 	sts	0x008C, r24	; 0x80008c <__TEXT_REGION_LENGTH__+0x70008c>
     8fa:	04 c0       	rjmp	.+8      	; 0x904 <setServos+0xcc>
     8fc:	90 93 8d 00 	sts	0x008D, r25	; 0x80008d <__TEXT_REGION_LENGTH__+0x70008d>
}
     900:	80 93 8c 00 	sts	0x008C, r24	; 0x80008c <__TEXT_REGION_LENGTH__+0x70008c>
     904:	df 91       	pop	r29
     906:	cf 91       	pop	r28
     908:	08 95       	ret

0000090a <readAccel>:

/* 
   Read the X,Y, and Z components off the accelerometer 
 */
const int readAccel() 
{
     90a:	4f 92       	push	r4
     90c:	5f 92       	push	r5
     90e:	6f 92       	push	r6
     910:	7f 92       	push	r7
     912:	8f 92       	push	r8
     914:	9f 92       	push	r9
     916:	af 92       	push	r10
     918:	bf 92       	push	r11
     91a:	cf 92       	push	r12
     91c:	df 92       	push	r13
     91e:	ef 92       	push	r14
     920:	ff 92       	push	r15
     922:	cf 93       	push	r28
     924:	df 93       	push	r29
     926:	00 d0       	rcall	.+0      	; 0x928 <readAccel+0x1e>
     928:	00 d0       	rcall	.+0      	; 0x92a <readAccel+0x20>
     92a:	cd b7       	in	r28, 0x3d	; 61
     92c:	de b7       	in	r29, 0x3e	; 62
	double accelX, accelY, accelZ;
	//**********************************************
	//MPU6050

	//Read all axis of the accelerator's
	mpu6050_read_accel_ALL(accel_buff);
     92e:	ce 01       	movw	r24, r28
     930:	01 96       	adiw	r24, 0x01	; 1
     932:	bf dd       	rcall	.-1154   	; 0x4b2 <mpu6050_read_accel_ALL>
	mpu6050_read_accel_ALL(accel_buff);
     934:	ce 01       	movw	r24, r28
     936:	01 96       	adiw	r24, 0x01	; 1
     938:	bc dd       	rcall	.-1160   	; 0x4b2 <mpu6050_read_accel_ALL>
	
	// acceleration (m/s^2)
	// Sensitivity 16384 LSB/g
	// +/- 2g full scale range
	accelX = accel_buff[0]*9.8*2/32768;
     93a:	69 81       	ldd	r22, Y+1	; 0x01
     93c:	7a 81       	ldd	r23, Y+2	; 0x02
     93e:	07 2e       	mov	r0, r23
     940:	00 0c       	add	r0, r0
     942:	88 0b       	sbc	r24, r24
     944:	99 0b       	sbc	r25, r25
     946:	ea d3       	rcall	.+2004   	; 0x111c <__floatsisf>
     948:	2d ec       	ldi	r18, 0xCD	; 205
     94a:	3c ec       	ldi	r19, 0xCC	; 204
     94c:	4c e1       	ldi	r20, 0x1C	; 28
     94e:	51 e4       	ldi	r21, 0x41	; 65
     950:	99 d4       	rcall	.+2354   	; 0x1284 <__mulsf3>
     952:	9b 01       	movw	r18, r22
     954:	ac 01       	movw	r20, r24
     956:	e4 d2       	rcall	.+1480   	; 0xf20 <__addsf3>
     958:	20 e0       	ldi	r18, 0x00	; 0
     95a:	30 e0       	ldi	r19, 0x00	; 0
     95c:	40 e0       	ldi	r20, 0x00	; 0
     95e:	58 e3       	ldi	r21, 0x38	; 56
     960:	91 d4       	rcall	.+2338   	; 0x1284 <__mulsf3>
     962:	6b 01       	movw	r12, r22
	accelY = accel_buff[1]*9.8*2/32768;
     964:	7c 01       	movw	r14, r24
     966:	6b 81       	ldd	r22, Y+3	; 0x03
     968:	7c 81       	ldd	r23, Y+4	; 0x04
     96a:	07 2e       	mov	r0, r23
     96c:	00 0c       	add	r0, r0
     96e:	88 0b       	sbc	r24, r24
     970:	99 0b       	sbc	r25, r25
     972:	d4 d3       	rcall	.+1960   	; 0x111c <__floatsisf>
     974:	2d ec       	ldi	r18, 0xCD	; 205
     976:	3c ec       	ldi	r19, 0xCC	; 204
     978:	4c e1       	ldi	r20, 0x1C	; 28
     97a:	51 e4       	ldi	r21, 0x41	; 65
     97c:	83 d4       	rcall	.+2310   	; 0x1284 <__mulsf3>
     97e:	9b 01       	movw	r18, r22
     980:	ac 01       	movw	r20, r24
     982:	ce d2       	rcall	.+1436   	; 0xf20 <__addsf3>
     984:	20 e0       	ldi	r18, 0x00	; 0
     986:	30 e0       	ldi	r19, 0x00	; 0
     988:	40 e0       	ldi	r20, 0x00	; 0
     98a:	58 e3       	ldi	r21, 0x38	; 56
     98c:	7b d4       	rcall	.+2294   	; 0x1284 <__mulsf3>
	accelZ = accel_buff[2]*9.8*2/32768;
     98e:	4b 01       	movw	r8, r22
     990:	5c 01       	movw	r10, r24
     992:	6d 81       	ldd	r22, Y+5	; 0x05
     994:	7e 81       	ldd	r23, Y+6	; 0x06
     996:	07 2e       	mov	r0, r23
     998:	00 0c       	add	r0, r0
     99a:	88 0b       	sbc	r24, r24
     99c:	99 0b       	sbc	r25, r25
     99e:	be d3       	rcall	.+1916   	; 0x111c <__floatsisf>
     9a0:	2d ec       	ldi	r18, 0xCD	; 205
     9a2:	3c ec       	ldi	r19, 0xCC	; 204
     9a4:	4c e1       	ldi	r20, 0x1C	; 28
     9a6:	51 e4       	ldi	r21, 0x41	; 65
     9a8:	6d d4       	rcall	.+2266   	; 0x1284 <__mulsf3>
     9aa:	9b 01       	movw	r18, r22
     9ac:	ac 01       	movw	r20, r24
     9ae:	b8 d2       	rcall	.+1392   	; 0xf20 <__addsf3>
     9b0:	20 e0       	ldi	r18, 0x00	; 0

	//printInfo
	printm_0("AccelX: ");
     9b2:	30 e0       	ldi	r19, 0x00	; 0
     9b4:	40 e0       	ldi	r20, 0x00	; 0
	print_double_0(accelX);
     9b6:	58 e3       	ldi	r21, 0x38	; 56
     9b8:	65 d4       	rcall	.+2250   	; 0x1284 <__mulsf3>
     9ba:	2b 01       	movw	r4, r22
	printm_0("\r\n");
     9bc:	3c 01       	movw	r6, r24
     9be:	8f e3       	ldi	r24, 0x3F	; 63
	printm_0("AccelY: ");
     9c0:	92 e0       	ldi	r25, 0x02	; 2
     9c2:	05 de       	rcall	.-1014   	; 0x5ce <printm_0>
     9c4:	c7 01       	movw	r24, r14
	print_double_0(accelY);
     9c6:	b6 01       	movw	r22, r12
     9c8:	41 de       	rcall	.-894    	; 0x64c <print_double_0>
     9ca:	81 e1       	ldi	r24, 0x11	; 17
	printm_0("\r\n");
     9cc:	92 e0       	ldi	r25, 0x02	; 2
     9ce:	ff dd       	rcall	.-1026   	; 0x5ce <printm_0>
     9d0:	88 e4       	ldi	r24, 0x48	; 72
     9d2:	92 e0       	ldi	r25, 0x02	; 2
	printm_0("AccelZ: ");
     9d4:	fc dd       	rcall	.-1032   	; 0x5ce <printm_0>
     9d6:	c5 01       	movw	r24, r10
     9d8:	b4 01       	movw	r22, r8
	print_double_0(accelZ);
     9da:	38 de       	rcall	.-912    	; 0x64c <print_double_0>
     9dc:	81 e1       	ldi	r24, 0x11	; 17
     9de:	92 e0       	ldi	r25, 0x02	; 2
	printm_0("\r\n");
     9e0:	f6 dd       	rcall	.-1044   	; 0x5ce <printm_0>
     9e2:	81 e5       	ldi	r24, 0x51	; 81
     9e4:	92 e0       	ldi	r25, 0x02	; 2
     9e6:	f3 dd       	rcall	.-1050   	; 0x5ce <printm_0>
	 * Go in if not stable enough and return one 
	 * The Servo will stay a constant position until stable enough
	 * to do some image processing
	 */

	if(accelX >= 15 || accelX <= -15 || accelY >= 15 ||
     9e8:	c3 01       	movw	r24, r6
     9ea:	b2 01       	movw	r22, r4
     9ec:	2f de       	rcall	.-930    	; 0x64c <print_double_0>
     9ee:	81 e1       	ldi	r24, 0x11	; 17
     9f0:	92 e0       	ldi	r25, 0x02	; 2
     9f2:	ed dd       	rcall	.-1062   	; 0x5ce <printm_0>
     9f4:	20 e0       	ldi	r18, 0x00	; 0
     9f6:	30 e0       	ldi	r19, 0x00	; 0
     9f8:	40 e7       	ldi	r20, 0x70	; 112
     9fa:	51 e4       	ldi	r21, 0x41	; 65
     9fc:	c7 01       	movw	r24, r14
     9fe:	b6 01       	movw	r22, r12
     a00:	3d d4       	rcall	.+2170   	; 0x127c <__gesf2>
     a02:	88 23       	and	r24, r24
     a04:	6c f5       	brge	.+90     	; 0xa60 <readAccel+0x156>
     a06:	20 e0       	ldi	r18, 0x00	; 0
     a08:	30 e0       	ldi	r19, 0x00	; 0
     a0a:	40 e7       	ldi	r20, 0x70	; 112
     a0c:	51 ec       	ldi	r21, 0xC1	; 193
     a0e:	c7 01       	movw	r24, r14
     a10:	b6 01       	movw	r22, r12
     a12:	ea d2       	rcall	.+1492   	; 0xfe8 <__cmpsf2>
     a14:	18 16       	cp	r1, r24
     a16:	24 f5       	brge	.+72     	; 0xa60 <readAccel+0x156>
     a18:	20 e0       	ldi	r18, 0x00	; 0
     a1a:	30 e0       	ldi	r19, 0x00	; 0
     a1c:	40 e7       	ldi	r20, 0x70	; 112
     a1e:	51 e4       	ldi	r21, 0x41	; 65
     a20:	c5 01       	movw	r24, r10
     a22:	b4 01       	movw	r22, r8
     a24:	2b d4       	rcall	.+2134   	; 0x127c <__gesf2>
     a26:	88 23       	and	r24, r24
     a28:	dc f4       	brge	.+54     	; 0xa60 <readAccel+0x156>
		accelY <= -15 || accelZ >= 15 || accelZ <= -15)
     a2a:	20 e0       	ldi	r18, 0x00	; 0
     a2c:	30 e0       	ldi	r19, 0x00	; 0
     a2e:	40 e7       	ldi	r20, 0x70	; 112
     a30:	51 ec       	ldi	r21, 0xC1	; 193
     a32:	c5 01       	movw	r24, r10
     a34:	b4 01       	movw	r22, r8
     a36:	d8 d2       	rcall	.+1456   	; 0xfe8 <__cmpsf2>
     a38:	18 16       	cp	r1, r24
     a3a:	94 f4       	brge	.+36     	; 0xa60 <readAccel+0x156>
     a3c:	20 e0       	ldi	r18, 0x00	; 0
     a3e:	30 e0       	ldi	r19, 0x00	; 0
     a40:	40 e7       	ldi	r20, 0x70	; 112
     a42:	51 e4       	ldi	r21, 0x41	; 65
     a44:	c3 01       	movw	r24, r6
     a46:	b2 01       	movw	r22, r4
     a48:	19 d4       	rcall	.+2098   	; 0x127c <__gesf2>
     a4a:	88 23       	and	r24, r24
     a4c:	4c f4       	brge	.+18     	; 0xa60 <readAccel+0x156>
	{
		printm_0("Put servo in standstill mode\r\n");
     a4e:	20 e0       	ldi	r18, 0x00	; 0
     a50:	30 e0       	ldi	r19, 0x00	; 0
     a52:	40 e7       	ldi	r20, 0x70	; 112
     a54:	51 ec       	ldi	r21, 0xC1	; 193
		PORTA |= (1<<PA0)|(1<<PA1)|(1<<PA2);
     a56:	c3 01       	movw	r24, r6
     a58:	b2 01       	movw	r22, r4
     a5a:	c6 d2       	rcall	.+1420   	; 0xfe8 <__cmpsf2>
		/*
		 * Angles set later 
		 */
		OCR1A = getServoPos((uint16_t)45);
     a5c:	18 16       	cp	r1, r24
     a5e:	f4 f0       	brlt	.+60     	; 0xa9c <readAccel+0x192>
     a60:	8a e5       	ldi	r24, 0x5A	; 90
     a62:	92 e0       	ldi	r25, 0x02	; 2
     a64:	b4 dd       	rcall	.-1176   	; 0x5ce <printm_0>
     a66:	82 b1       	in	r24, 0x02	; 2
     a68:	87 60       	ori	r24, 0x07	; 7
     a6a:	82 b9       	out	0x02, r24	; 2
		OCR1B = getServoPos((uint16_t)90);
     a6c:	8d e2       	ldi	r24, 0x2D	; 45
     a6e:	90 e0       	ldi	r25, 0x00	; 0
     a70:	ad de       	rcall	.-678    	; 0x7cc <getServoPos>
     a72:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
     a76:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
     a7a:	8a e5       	ldi	r24, 0x5A	; 90
		OCR1C = getServoPos((uint16_t)125);
     a7c:	90 e0       	ldi	r25, 0x00	; 0
     a7e:	a6 de       	rcall	.-692    	; 0x7cc <getServoPos>
     a80:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x70008b>
     a84:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x70008a>
     a88:	8d e7       	ldi	r24, 0x7D	; 125
     a8a:	90 e0       	ldi	r25, 0x00	; 0
		return 1;
     a8c:	9f de       	rcall	.-706    	; 0x7cc <getServoPos>
     a8e:	90 93 8d 00 	sts	0x008D, r25	; 0x80008d <__TEXT_REGION_LENGTH__+0x70008d>
	}

	return 0;
     a92:	80 93 8c 00 	sts	0x008C, r24	; 0x80008c <__TEXT_REGION_LENGTH__+0x70008c>
}
     a96:	81 e0       	ldi	r24, 0x01	; 1
     a98:	90 e0       	ldi	r25, 0x00	; 0
     a9a:	02 c0       	rjmp	.+4      	; 0xaa0 <readAccel+0x196>
     a9c:	80 e0       	ldi	r24, 0x00	; 0
     a9e:	90 e0       	ldi	r25, 0x00	; 0
     aa0:	26 96       	adiw	r28, 0x06	; 6
     aa2:	0f b6       	in	r0, 0x3f	; 63
     aa4:	f8 94       	cli
     aa6:	de bf       	out	0x3e, r29	; 62
     aa8:	0f be       	out	0x3f, r0	; 63
     aaa:	cd bf       	out	0x3d, r28	; 61
     aac:	df 91       	pop	r29
     aae:	cf 91       	pop	r28
     ab0:	ff 90       	pop	r15
     ab2:	ef 90       	pop	r14
     ab4:	df 90       	pop	r13
     ab6:	cf 90       	pop	r12
     ab8:	bf 90       	pop	r11
     aba:	af 90       	pop	r10
     abc:	9f 90       	pop	r9
     abe:	8f 90       	pop	r8
     ac0:	7f 90       	pop	r7
     ac2:	6f 90       	pop	r6
     ac4:	5f 90       	pop	r5
     ac6:	4f 90       	pop	r4
     ac8:	08 95       	ret

00000aca <initWatchdog>:
void initWatchdog(void)
{ 
  /* In order to change WDE or the prescaler, we need to
   * set WDCE (This will allow updates for 4 clock cycles).
   */
  WDTCSR |= (1<<WDCE) | (1<<WDE);
     aca:	e0 e6       	ldi	r30, 0x60	; 96
     acc:	f0 e0       	ldi	r31, 0x00	; 0
     ace:	80 81       	ld	r24, Z
     ad0:	88 61       	ori	r24, 0x18	; 24
     ad2:	80 83       	st	Z, r24

  /* set new watchdog timeout prescaler value */
  WDTCSR = 1<<WDP0 | 1<<WDP3; /* 8.0 seconds */
     ad4:	81 e2       	ldi	r24, 0x21	; 33
     ad6:	80 83       	st	Z, r24
  
  /* Enable the WD interrupt (note no reset). */
  WDTCSR |= _BV(WDIE);  
     ad8:	80 81       	ld	r24, Z
     ada:	80 64       	ori	r24, 0x40	; 64
     adc:	80 83       	st	Z, r24
     ade:	08 95       	ret

00000ae0 <enterSleep>:
} 

void enterSleep(void)
{
	cli();
     ae0:	f8 94       	cli
	printm_0("About to go to Sleep\r\n");
     ae2:	89 e7       	ldi	r24, 0x79	; 121
     ae4:	92 e0       	ldi	r25, 0x02	; 2
     ae6:	73 dd       	rcall	.-1306   	; 0x5ce <printm_0>

	set_sleep_mode(SLEEP_MODE_PWR_DOWN);
     ae8:	83 b7       	in	r24, 0x33	; 51
     aea:	81 7f       	andi	r24, 0xF1	; 241
     aec:	84 60       	ori	r24, 0x04	; 4
     aee:	83 bf       	out	0x33, r24	; 51
	sleep_enable();
     af0:	83 b7       	in	r24, 0x33	; 51
     af2:	81 60       	ori	r24, 0x01	; 1
     af4:	83 bf       	out	0x33, r24	; 51

	sei();
     af6:	78 94       	sei
	/* Now enter sleep mode. */
	sleep_cpu();
     af8:	88 95       	sleep

	sleep_disable(); /* First thing to do is disable sleep. */
     afa:	83 b7       	in	r24, 0x33	; 51
     afc:	8e 7f       	andi	r24, 0xFE	; 254
     afe:	83 bf       	out	0x33, r24	; 51
#ifdef __AVR_HAVE_PRR
    PRR &= (uint8_t)~(__AVR_HAVE_PRR);
#endif

#ifdef __AVR_HAVE_PRR0
    PRR0 &= (uint8_t)~(__AVR_HAVE_PRR0);
     b00:	e4 e6       	ldi	r30, 0x64	; 100
     b02:	f0 e0       	ldi	r31, 0x00	; 0
     b04:	80 81       	ld	r24, Z
     b06:	80 71       	andi	r24, 0x10	; 16
     b08:	80 83       	st	Z, r24
#endif

#ifdef __AVR_HAVE_PRR1
    PRR1 &= (uint8_t)~(__AVR_HAVE_PRR1);
     b0a:	e5 e6       	ldi	r30, 0x65	; 101
     b0c:	f0 e0       	ldi	r31, 0x00	; 0
     b0e:	80 81       	ld	r24, Z
     b10:	80 7c       	andi	r24, 0xC0	; 192
     b12:	80 83       	st	Z, r24
     b14:	08 95       	ret

00000b16 <aboutToSleep>:
	/* Re-enable the peripherals. */
  	power_all_enable();
}

void aboutToSleep(void)
{
     b16:	cf 93       	push	r28
     b18:	df 93       	push	r29
     b1a:	ca e0       	ldi	r28, 0x0A	; 10
     b1c:	d0 e0       	ldi	r29, 0x00	; 0
	for(int i = 0; i < 10; ++i)
	{
		printm_0("inloop\r\n");
     b1e:	80 e9       	ldi	r24, 0x90	; 144
     b20:	92 e0       	ldi	r25, 0x02	; 2
     b22:	55 dd       	rcall	.-1366   	; 0x5ce <printm_0>
		PORTA |= (1<<PA0|1<<PA1|1<<PA2);
     b24:	82 b1       	in	r24, 0x02	; 2
     b26:	87 60       	ori	r24, 0x07	; 7
     b28:	82 b9       	out	0x02, r24	; 2
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     b2a:	2f ef       	ldi	r18, 0xFF	; 255
     b2c:	81 e1       	ldi	r24, 0x11	; 17
     b2e:	9a e7       	ldi	r25, 0x7A	; 122
     b30:	21 50       	subi	r18, 0x01	; 1
     b32:	80 40       	sbci	r24, 0x00	; 0
     b34:	90 40       	sbci	r25, 0x00	; 0
     b36:	e1 f7       	brne	.-8      	; 0xb30 <aboutToSleep+0x1a>
     b38:	00 c0       	rjmp	.+0      	; 0xb3a <aboutToSleep+0x24>
     b3a:	00 00       	nop
		_delay_ms(2500);
		PORTA = 0X0;
     b3c:	12 b8       	out	0x02, r1	; 2
     b3e:	2f ef       	ldi	r18, 0xFF	; 255
     b40:	81 e1       	ldi	r24, 0x11	; 17
     b42:	9a e7       	ldi	r25, 0x7A	; 122
     b44:	21 50       	subi	r18, 0x01	; 1
     b46:	80 40       	sbci	r24, 0x00	; 0
     b48:	90 40       	sbci	r25, 0x00	; 0
     b4a:	e1 f7       	brne	.-8      	; 0xb44 <aboutToSleep+0x2e>
     b4c:	00 c0       	rjmp	.+0      	; 0xb4e <aboutToSleep+0x38>
     b4e:	00 00       	nop
     b50:	21 97       	sbiw	r28, 0x01	; 1
  	power_all_enable();
}

void aboutToSleep(void)
{
	for(int i = 0; i < 10; ++i)
     b52:	29 f7       	brne	.-54     	; 0xb1e <aboutToSleep+0x8>
		PORTA |= (1<<PA0|1<<PA1|1<<PA2);
		_delay_ms(2500);
		PORTA = 0X0;
		_delay_ms(2500);
	}
	PORTA &= (0<<PA0)|(0<<PA1)|(0<<PA2);
     b54:	82 b1       	in	r24, 0x02	; 2
     b56:	12 b8       	out	0x02, r1	; 2
}
     b58:	df 91       	pop	r29
     b5a:	cf 91       	pop	r28
     b5c:	08 95       	ret

00000b5e <__vector_20>:
{
	soft_reset();
}

ISR(TIMER1_OVF_vect)
{ 
     b5e:	1f 92       	push	r1
     b60:	0f 92       	push	r0
     b62:	0f b6       	in	r0, 0x3f	; 63
     b64:	0f 92       	push	r0
     b66:	11 24       	eor	r1, r1
     b68:	0b b6       	in	r0, 0x3b	; 59
     b6a:	0f 92       	push	r0
     b6c:	df 92       	push	r13
     b6e:	ef 92       	push	r14
     b70:	ff 92       	push	r15
     b72:	0f 93       	push	r16
     b74:	1f 93       	push	r17
     b76:	2f 93       	push	r18
     b78:	3f 93       	push	r19
     b7a:	4f 93       	push	r20
     b7c:	5f 93       	push	r21
     b7e:	6f 93       	push	r22
     b80:	7f 93       	push	r23
     b82:	8f 93       	push	r24
     b84:	9f 93       	push	r25
     b86:	af 93       	push	r26
     b88:	bf 93       	push	r27
     b8a:	cf 93       	push	r28
     b8c:	df 93       	push	r29
     b8e:	ef 93       	push	r30
     b90:	ff 93       	push	r31
	++countTick;
     b92:	80 91 2d 03 	lds	r24, 0x032D	; 0x80032d <__bss_end>
     b96:	90 91 2e 03 	lds	r25, 0x032E	; 0x80032e <__bss_end+0x1>
     b9a:	01 96       	adiw	r24, 0x01	; 1
     b9c:	90 93 2e 03 	sts	0x032E, r25	; 0x80032e <__bss_end+0x1>
     ba0:	80 93 2d 03 	sts	0x032D, r24	; 0x80032d <__bss_end>
	if(countTick > 1000)
     ba4:	80 91 2d 03 	lds	r24, 0x032D	; 0x80032d <__bss_end>
     ba8:	90 91 2e 03 	lds	r25, 0x032E	; 0x80032e <__bss_end+0x1>
     bac:	89 3e       	cpi	r24, 0xE9	; 233
     bae:	93 40       	sbci	r25, 0x03	; 3
     bb0:	0c f4       	brge	.+2      	; 0xbb4 <__vector_20+0x56>
     bb2:	fe c0       	rjmp	.+508    	; 0xdb0 <__vector_20+0x252>
	{	
		startADC0();
     bb4:	0f 2e       	mov	r0, r31
     bb6:	fe e7       	ldi	r31, 0x7E	; 126
     bb8:	ef 2e       	mov	r14, r31
     bba:	f1 2c       	mov	r15, r1
     bbc:	f0 2d       	mov	r31, r0
     bbe:	dd 24       	eor	r13, r13
     bc0:	d3 94       	inc	r13
     bc2:	f7 01       	movw	r30, r14
     bc4:	d0 82       	st	Z, r13
     bc6:	80 b3       	in	r24, 0x10	; 16
     bc8:	10 ba       	out	0x10, r1	; 16
     bca:	0c e7       	ldi	r16, 0x7C	; 124
     bcc:	10 e0       	ldi	r17, 0x00	; 0
     bce:	80 e4       	ldi	r24, 0x40	; 64
     bd0:	f8 01       	movw	r30, r16
		waitADC();
     bd2:	80 83       	st	Z, r24
		valueADC0 = (ADCW *5 / 1024.0);
     bd4:	7a dd       	rcall	.-1292   	; 0x6ca <waitADC>
     bd6:	c8 e7       	ldi	r28, 0x78	; 120
     bd8:	d0 e0       	ldi	r29, 0x00	; 0
     bda:	68 81       	ld	r22, Y
     bdc:	79 81       	ldd	r23, Y+1	; 0x01
     bde:	cb 01       	movw	r24, r22
     be0:	88 0f       	add	r24, r24
     be2:	99 1f       	adc	r25, r25
     be4:	88 0f       	add	r24, r24
     be6:	99 1f       	adc	r25, r25
     be8:	68 0f       	add	r22, r24
     bea:	79 1f       	adc	r23, r25
     bec:	80 e0       	ldi	r24, 0x00	; 0
     bee:	90 e0       	ldi	r25, 0x00	; 0
     bf0:	93 d2       	rcall	.+1318   	; 0x1118 <__floatunsisf>
     bf2:	20 e0       	ldi	r18, 0x00	; 0
     bf4:	30 e0       	ldi	r19, 0x00	; 0
     bf6:	40 e8       	ldi	r20, 0x80	; 128
     bf8:	5a e3       	ldi	r21, 0x3A	; 58
     bfa:	44 d3       	rcall	.+1672   	; 0x1284 <__mulsf3>
     bfc:	60 93 25 03 	sts	0x0325, r22	; 0x800325 <valueADC0>
     c00:	70 93 26 03 	sts	0x0326, r23	; 0x800326 <valueADC0+0x1>
     c04:	80 93 27 03 	sts	0x0327, r24	; 0x800327 <valueADC0+0x2>
		printm_0("Voltage 1 Level Read: ");
     c08:	90 93 28 03 	sts	0x0328, r25	; 0x800328 <valueADC0+0x3>
     c0c:	89 e9       	ldi	r24, 0x99	; 153
     c0e:	92 e0       	ldi	r25, 0x02	; 2
		print_double_0(valueADC0);
     c10:	de dc       	rcall	.-1604   	; 0x5ce <printm_0>
     c12:	60 91 25 03 	lds	r22, 0x0325	; 0x800325 <valueADC0>
     c16:	70 91 26 03 	lds	r23, 0x0326	; 0x800326 <valueADC0+0x1>
     c1a:	80 91 27 03 	lds	r24, 0x0327	; 0x800327 <valueADC0+0x2>
     c1e:	90 91 28 03 	lds	r25, 0x0328	; 0x800328 <valueADC0+0x3>
		printm_0("\r\n");
     c22:	14 dd       	rcall	.-1496   	; 0x64c <print_double_0>
     c24:	81 e1       	ldi	r24, 0x11	; 17
     c26:	92 e0       	ldi	r25, 0x02	; 2

		startADC1();
     c28:	d2 dc       	rcall	.-1628   	; 0x5ce <printm_0>
     c2a:	f7 01       	movw	r30, r14
     c2c:	d0 82       	st	Z, r13
     c2e:	80 b3       	in	r24, 0x10	; 16
     c30:	10 ba       	out	0x10, r1	; 16
     c32:	81 e4       	ldi	r24, 0x41	; 65
		waitADC();
     c34:	f8 01       	movw	r30, r16
     c36:	80 83       	st	Z, r24
		valueADC1 = (ADCW *5 / 1024.0);
     c38:	48 dd       	rcall	.-1392   	; 0x6ca <waitADC>
     c3a:	68 81       	ld	r22, Y
     c3c:	79 81       	ldd	r23, Y+1	; 0x01
     c3e:	cb 01       	movw	r24, r22
     c40:	88 0f       	add	r24, r24
     c42:	99 1f       	adc	r25, r25
     c44:	88 0f       	add	r24, r24
     c46:	99 1f       	adc	r25, r25
     c48:	68 0f       	add	r22, r24
     c4a:	79 1f       	adc	r23, r25
     c4c:	80 e0       	ldi	r24, 0x00	; 0
     c4e:	90 e0       	ldi	r25, 0x00	; 0
     c50:	63 d2       	rcall	.+1222   	; 0x1118 <__floatunsisf>
     c52:	20 e0       	ldi	r18, 0x00	; 0
     c54:	30 e0       	ldi	r19, 0x00	; 0
     c56:	40 e8       	ldi	r20, 0x80	; 128
     c58:	5a e3       	ldi	r21, 0x3A	; 58
     c5a:	14 d3       	rcall	.+1576   	; 0x1284 <__mulsf3>
     c5c:	60 93 29 03 	sts	0x0329, r22	; 0x800329 <valueADC1>
     c60:	70 93 2a 03 	sts	0x032A, r23	; 0x80032a <valueADC1+0x1>
     c64:	80 93 2b 03 	sts	0x032B, r24	; 0x80032b <valueADC1+0x2>
		printm_0("Voltage 2 Level Read: ");
     c68:	90 93 2c 03 	sts	0x032C, r25	; 0x80032c <valueADC1+0x3>
     c6c:	80 eb       	ldi	r24, 0xB0	; 176
		print_double_0(valueADC1);
     c6e:	92 e0       	ldi	r25, 0x02	; 2
     c70:	ae dc       	rcall	.-1700   	; 0x5ce <printm_0>
     c72:	60 91 29 03 	lds	r22, 0x0329	; 0x800329 <valueADC1>
     c76:	70 91 2a 03 	lds	r23, 0x032A	; 0x80032a <valueADC1+0x1>
     c7a:	80 91 2b 03 	lds	r24, 0x032B	; 0x80032b <valueADC1+0x2>
		printm_0("\r\n");
     c7e:	90 91 2c 03 	lds	r25, 0x032C	; 0x80032c <valueADC1+0x3>
     c82:	e4 dc       	rcall	.-1592   	; 0x64c <print_double_0>

		startADC2();
     c84:	81 e1       	ldi	r24, 0x11	; 17
     c86:	92 e0       	ldi	r25, 0x02	; 2
     c88:	a2 dc       	rcall	.-1724   	; 0x5ce <printm_0>
     c8a:	82 e0       	ldi	r24, 0x02	; 2
     c8c:	f7 01       	movw	r30, r14
     c8e:	80 83       	st	Z, r24
     c90:	80 b3       	in	r24, 0x10	; 16
		waitADC();
     c92:	10 ba       	out	0x10, r1	; 16
		valueADC2 = (ADCW *5 / 1024.0);
     c94:	82 e4       	ldi	r24, 0x42	; 66
     c96:	f8 01       	movw	r30, r16
     c98:	80 83       	st	Z, r24
     c9a:	17 dd       	rcall	.-1490   	; 0x6ca <waitADC>
     c9c:	68 81       	ld	r22, Y
     c9e:	79 81       	ldd	r23, Y+1	; 0x01
     ca0:	cb 01       	movw	r24, r22
     ca2:	88 0f       	add	r24, r24
     ca4:	99 1f       	adc	r25, r25
     ca6:	88 0f       	add	r24, r24
     ca8:	99 1f       	adc	r25, r25
     caa:	68 0f       	add	r22, r24
     cac:	79 1f       	adc	r23, r25
     cae:	80 e0       	ldi	r24, 0x00	; 0
     cb0:	90 e0       	ldi	r25, 0x00	; 0
     cb2:	32 d2       	rcall	.+1124   	; 0x1118 <__floatunsisf>
     cb4:	20 e0       	ldi	r18, 0x00	; 0
     cb6:	30 e0       	ldi	r19, 0x00	; 0
     cb8:	40 e8       	ldi	r20, 0x80	; 128
     cba:	5a e3       	ldi	r21, 0x3A	; 58
     cbc:	e3 d2       	rcall	.+1478   	; 0x1284 <__mulsf3>
     cbe:	60 93 21 03 	sts	0x0321, r22	; 0x800321 <valueADC2>
		printm_0("Voltage 3 Level Read: ");
     cc2:	70 93 22 03 	sts	0x0322, r23	; 0x800322 <valueADC2+0x1>
     cc6:	80 93 23 03 	sts	0x0323, r24	; 0x800323 <valueADC2+0x2>
		print_double_0(valueADC2);
     cca:	90 93 24 03 	sts	0x0324, r25	; 0x800324 <valueADC2+0x3>
     cce:	87 ec       	ldi	r24, 0xC7	; 199
     cd0:	92 e0       	ldi	r25, 0x02	; 2
     cd2:	7d dc       	rcall	.-1798   	; 0x5ce <printm_0>
     cd4:	60 91 21 03 	lds	r22, 0x0321	; 0x800321 <valueADC2>
     cd8:	70 91 22 03 	lds	r23, 0x0322	; 0x800322 <valueADC2+0x1>
		printm_0("\r\n");
     cdc:	80 91 23 03 	lds	r24, 0x0323	; 0x800323 <valueADC2+0x2>
     ce0:	90 91 24 03 	lds	r25, 0x0324	; 0x800324 <valueADC2+0x3>
		/*
			R2 = Resistor
			R1 = Photo Diode 
			Vin(R2/(R1+R2))
		*/
		if((valueADC0 > 1.50 && valueADC1 > 1.50) 
     ce4:	b3 dc       	rcall	.-1690   	; 0x64c <print_double_0>
     ce6:	81 e1       	ldi	r24, 0x11	; 17
     ce8:	92 e0       	ldi	r25, 0x02	; 2
     cea:	71 dc       	rcall	.-1822   	; 0x5ce <printm_0>
     cec:	60 91 25 03 	lds	r22, 0x0325	; 0x800325 <valueADC0>
     cf0:	70 91 26 03 	lds	r23, 0x0326	; 0x800326 <valueADC0+0x1>
     cf4:	80 91 27 03 	lds	r24, 0x0327	; 0x800327 <valueADC0+0x2>
     cf8:	90 91 28 03 	lds	r25, 0x0328	; 0x800328 <valueADC0+0x3>
     cfc:	20 e0       	ldi	r18, 0x00	; 0
     cfe:	30 e0       	ldi	r19, 0x00	; 0
     d00:	40 ec       	ldi	r20, 0xC0	; 192
     d02:	5f e3       	ldi	r21, 0x3F	; 63
     d04:	bb d2       	rcall	.+1398   	; 0x127c <__gesf2>
     d06:	18 16       	cp	r1, r24
     d08:	84 f4       	brge	.+32     	; 0xd2a <__vector_20+0x1cc>
     d0a:	60 91 29 03 	lds	r22, 0x0329	; 0x800329 <valueADC1>
     d0e:	70 91 2a 03 	lds	r23, 0x032A	; 0x80032a <valueADC1+0x1>
     d12:	80 91 2b 03 	lds	r24, 0x032B	; 0x80032b <valueADC1+0x2>
     d16:	90 91 2c 03 	lds	r25, 0x032C	; 0x80032c <valueADC1+0x3>
     d1a:	20 e0       	ldi	r18, 0x00	; 0
     d1c:	30 e0       	ldi	r19, 0x00	; 0
     d1e:	40 ec       	ldi	r20, 0xC0	; 192
     d20:	5f e3       	ldi	r21, 0x3F	; 63
			|| (valueADC1 > 1.50 && valueADC2 > 1.50)
     d22:	ac d2       	rcall	.+1368   	; 0x127c <__gesf2>
     d24:	18 16       	cp	r1, r24
     d26:	0c f4       	brge	.+2      	; 0xd2a <__vector_20+0x1cc>
     d28:	3c c0       	rjmp	.+120    	; 0xda2 <__vector_20+0x244>
     d2a:	60 91 29 03 	lds	r22, 0x0329	; 0x800329 <valueADC1>
     d2e:	70 91 2a 03 	lds	r23, 0x032A	; 0x80032a <valueADC1+0x1>
     d32:	80 91 2b 03 	lds	r24, 0x032B	; 0x80032b <valueADC1+0x2>
     d36:	90 91 2c 03 	lds	r25, 0x032C	; 0x80032c <valueADC1+0x3>
     d3a:	20 e0       	ldi	r18, 0x00	; 0
     d3c:	30 e0       	ldi	r19, 0x00	; 0
     d3e:	40 ec       	ldi	r20, 0xC0	; 192
     d40:	5f e3       	ldi	r21, 0x3F	; 63
     d42:	9c d2       	rcall	.+1336   	; 0x127c <__gesf2>
     d44:	18 16       	cp	r1, r24
     d46:	7c f4       	brge	.+30     	; 0xd66 <__vector_20+0x208>
     d48:	60 91 21 03 	lds	r22, 0x0321	; 0x800321 <valueADC2>
     d4c:	70 91 22 03 	lds	r23, 0x0322	; 0x800322 <valueADC2+0x1>
     d50:	80 91 23 03 	lds	r24, 0x0323	; 0x800323 <valueADC2+0x2>
     d54:	90 91 24 03 	lds	r25, 0x0324	; 0x800324 <valueADC2+0x3>
     d58:	20 e0       	ldi	r18, 0x00	; 0
     d5a:	30 e0       	ldi	r19, 0x00	; 0
     d5c:	40 ec       	ldi	r20, 0xC0	; 192
			 || (valueADC0 > 1.50 && valueADC2 > 1.50))
     d5e:	5f e3       	ldi	r21, 0x3F	; 63
     d60:	8d d2       	rcall	.+1306   	; 0x127c <__gesf2>
     d62:	18 16       	cp	r1, r24
     d64:	f4 f0       	brlt	.+60     	; 0xda2 <__vector_20+0x244>
     d66:	60 91 25 03 	lds	r22, 0x0325	; 0x800325 <valueADC0>
     d6a:	70 91 26 03 	lds	r23, 0x0326	; 0x800326 <valueADC0+0x1>
     d6e:	80 91 27 03 	lds	r24, 0x0327	; 0x800327 <valueADC0+0x2>
     d72:	90 91 28 03 	lds	r25, 0x0328	; 0x800328 <valueADC0+0x3>
     d76:	20 e0       	ldi	r18, 0x00	; 0
     d78:	30 e0       	ldi	r19, 0x00	; 0
     d7a:	40 ec       	ldi	r20, 0xC0	; 192
     d7c:	5f e3       	ldi	r21, 0x3F	; 63
     d7e:	7e d2       	rcall	.+1276   	; 0x127c <__gesf2>
     d80:	18 16       	cp	r1, r24
     d82:	94 f4       	brge	.+36     	; 0xda8 <__vector_20+0x24a>
     d84:	60 91 21 03 	lds	r22, 0x0321	; 0x800321 <valueADC2>
     d88:	70 91 22 03 	lds	r23, 0x0322	; 0x800322 <valueADC2+0x1>
     d8c:	80 91 23 03 	lds	r24, 0x0323	; 0x800323 <valueADC2+0x2>
     d90:	90 91 24 03 	lds	r25, 0x0324	; 0x800324 <valueADC2+0x3>
     d94:	20 e0       	ldi	r18, 0x00	; 0
		{
			initWatchdog();
     d96:	30 e0       	ldi	r19, 0x00	; 0
     d98:	40 ec       	ldi	r20, 0xC0	; 192
			aboutToSleep();
     d9a:	5f e3       	ldi	r21, 0x3F	; 63
     d9c:	6f d2       	rcall	.+1246   	; 0x127c <__gesf2>
			enterSleep();
     d9e:	18 16       	cp	r1, r24
     da0:	1c f4       	brge	.+6      	; 0xda8 <__vector_20+0x24a>
		}
		countTick = 0;
     da2:	93 de       	rcall	.-730    	; 0xaca <initWatchdog>
     da4:	b8 de       	rcall	.-656    	; 0xb16 <aboutToSleep>
     da6:	9c de       	rcall	.-712    	; 0xae0 <enterSleep>
     da8:	10 92 2e 03 	sts	0x032E, r1	; 0x80032e <__bss_end+0x1>
	}
}
     dac:	10 92 2d 03 	sts	0x032D, r1	; 0x80032d <__bss_end>
     db0:	ff 91       	pop	r31
     db2:	ef 91       	pop	r30
     db4:	df 91       	pop	r29
     db6:	cf 91       	pop	r28
     db8:	bf 91       	pop	r27
     dba:	af 91       	pop	r26
     dbc:	9f 91       	pop	r25
     dbe:	8f 91       	pop	r24
     dc0:	7f 91       	pop	r23
     dc2:	6f 91       	pop	r22
     dc4:	5f 91       	pop	r21
     dc6:	4f 91       	pop	r20
     dc8:	3f 91       	pop	r19
     dca:	2f 91       	pop	r18
     dcc:	1f 91       	pop	r17
     dce:	0f 91       	pop	r16
     dd0:	ff 90       	pop	r15
     dd2:	ef 90       	pop	r14
     dd4:	df 90       	pop	r13
     dd6:	0f 90       	pop	r0
     dd8:	0b be       	out	0x3b, r0	; 59
     dda:	0f 90       	pop	r0
     ddc:	0f be       	out	0x3f, r0	; 63
     dde:	0f 90       	pop	r0
     de0:	1f 90       	pop	r1
     de2:	18 95       	reti

00000de4 <clearReadString>:
	PORTA &= (0<<PA0)|(0<<PA1)|(0<<PA2);
}

void clearReadString(void)
{
	for(int i = 0; i < 20; ++i)
     de4:	80 e0       	ldi	r24, 0x00	; 0
     de6:	90 e0       	ldi	r25, 0x00	; 0
		readString[i] = "\0";
     de8:	20 e0       	ldi	r18, 0x00	; 0
     dea:	32 e0       	ldi	r19, 0x02	; 2
     dec:	fc 01       	movw	r30, r24
     dee:	e4 5f       	subi	r30, 0xF4	; 244
     df0:	fc 4f       	sbci	r31, 0xFC	; 252
     df2:	20 83       	st	Z, r18
	PORTA &= (0<<PA0)|(0<<PA1)|(0<<PA2);
}

void clearReadString(void)
{
	for(int i = 0; i < 20; ++i)
     df4:	01 96       	adiw	r24, 0x01	; 1
     df6:	84 31       	cpi	r24, 0x14	; 20
     df8:	91 05       	cpc	r25, r1
     dfa:	c1 f7       	brne	.-16     	; 0xdec <clearReadString+0x8>
		readString[i] = "\0";
}
     dfc:	08 95       	ret

00000dfe <__vector_25>:
}

//-------------------------------------------------------
//UART0_ ISR 
ISR (USART0_RX_vect)
{
     dfe:	1f 92       	push	r1
     e00:	0f 92       	push	r0
     e02:	0f b6       	in	r0, 0x3f	; 63
     e04:	0f 92       	push	r0
     e06:	11 24       	eor	r1, r1
     e08:	0b b6       	in	r0, 0x3b	; 59
     e0a:	0f 92       	push	r0
     e0c:	2f 93       	push	r18
     e0e:	3f 93       	push	r19
     e10:	4f 93       	push	r20
     e12:	5f 93       	push	r21
     e14:	6f 93       	push	r22
     e16:	7f 93       	push	r23
     e18:	8f 93       	push	r24
     e1a:	9f 93       	push	r25
     e1c:	af 93       	push	r26
     e1e:	bf 93       	push	r27
     e20:	cf 93       	push	r28
     e22:	ef 93       	push	r30
     e24:	ff 93       	push	r31
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     e26:	f8 94       	cli
	ATOMIC_BLOCK(ATOMIC_FORCEON)
	{
		unsigned char receivedChar;
		receivedChar = UDR0;							// Read data from the RX buffer
     e28:	c0 91 c6 00 	lds	r28, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
		putChar_0(receivedChar);
     e2c:	8c 2f       	mov	r24, r28
     e2e:	c0 db       	rcall	.-2176   	; 0x5b0 <putChar_0>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     e30:	8f ee       	ldi	r24, 0xEF	; 239
     e32:	9a e0       	ldi	r25, 0x0A	; 10
     e34:	01 97       	sbiw	r24, 0x01	; 1
     e36:	f1 f7       	brne	.-4      	; 0xe34 <__vector_25+0x36>
     e38:	00 c0       	rjmp	.+0      	; 0xe3a <__vector_25+0x3c>
     e3a:	00 00       	nop
		 * 1 1 000 2 1 000 3 1 000
		 * S L ANG S L ANG S L ANG
		 * S: Servo, L: LED State, ANG: Angle
		 */
		
		readString[charCount] = receivedChar;
     e3c:	e0 91 20 03 	lds	r30, 0x0320	; 0x800320 <charCount>
     e40:	f0 e0       	ldi	r31, 0x00	; 0
     e42:	e4 5f       	subi	r30, 0xF4	; 244
     e44:	fc 4f       	sbci	r31, 0xFC	; 252
     e46:	c0 83       	st	Z, r28
		++charCount;
     e48:	80 91 20 03 	lds	r24, 0x0320	; 0x800320 <charCount>
     e4c:	8f 5f       	subi	r24, 0xFF	; 255
     e4e:	80 93 20 03 	sts	0x0320, r24	; 0x800320 <charCount>
		 
		if(charCount >= 15 || receivedChar == '\0')
     e52:	80 91 20 03 	lds	r24, 0x0320	; 0x800320 <charCount>
     e56:	8f 30       	cpi	r24, 0x0F	; 15
     e58:	20 f4       	brcc	.+8      	; 0xe62 <__vector_25+0x64>
     e5a:	cc 23       	and	r28, r28
     e5c:	09 f4       	brne	.+2      	; 0xe60 <__vector_25+0x62>
     e5e:	3e c0       	rjmp	.+124    	; 0xedc <__vector_25+0xde>
     e60:	3a c0       	rjmp	.+116    	; 0xed6 <__vector_25+0xd8>
		{	
			printm_0("\r\n");   
     e62:	81 e1       	ldi	r24, 0x11	; 17
     e64:	92 e0       	ldi	r25, 0x02	; 2
			printm_0("Read String: ");
     e66:	b3 db       	rcall	.-2202   	; 0x5ce <printm_0>
     e68:	8e ed       	ldi	r24, 0xDE	; 222
			printm_0(readString);
     e6a:	92 e0       	ldi	r25, 0x02	; 2
     e6c:	b0 db       	rcall	.-2208   	; 0x5ce <printm_0>
     e6e:	8c e0       	ldi	r24, 0x0C	; 12
			printm_0("\r\n");
     e70:	93 e0       	ldi	r25, 0x03	; 3
     e72:	ad db       	rcall	.-2214   	; 0x5ce <printm_0>
     e74:	81 e1       	ldi	r24, 0x11	; 17

			if(receivedChar != '\0')
     e76:	92 e0       	ldi	r25, 0x02	; 2
     e78:	aa db       	rcall	.-2220   	; 0x5ce <printm_0>
			{
				temp = getTemp();
     e7a:	cc 23       	and	r28, r28
     e7c:	49 f1       	breq	.+82     	; 0xed0 <__vector_25+0xd2>
     e7e:	2e dc       	rcall	.-1956   	; 0x6dc <getTemp>
     e80:	90 93 0b 03 	sts	0x030B, r25	; 0x80030b <__data_end+0x1>
				printm_0("Temp: ");
     e84:	80 93 0a 03 	sts	0x030A, r24	; 0x80030a <__data_end>
				print_int_0(temp);
     e88:	8c ee       	ldi	r24, 0xEC	; 236
     e8a:	92 e0       	ldi	r25, 0x02	; 2
     e8c:	a0 db       	rcall	.-2240   	; 0x5ce <printm_0>
     e8e:	80 91 0a 03 	lds	r24, 0x030A	; 0x80030a <__data_end>
				printm_0(" C*\r\n");
     e92:	90 91 0b 03 	lds	r25, 0x030B	; 0x80030b <__data_end+0x1>
     e96:	a9 db       	rcall	.-2222   	; 0x5ea <print_int_0>
     e98:	83 ef       	ldi	r24, 0xF3	; 243
				if(temp > 50 || temp < -10)	
     e9a:	92 e0       	ldi	r25, 0x02	; 2
     e9c:	98 db       	rcall	.-2256   	; 0x5ce <printm_0>
     e9e:	80 91 0a 03 	lds	r24, 0x030A	; 0x80030a <__data_end>
     ea2:	90 91 0b 03 	lds	r25, 0x030B	; 0x80030b <__data_end+0x1>
     ea6:	c3 97       	sbiw	r24, 0x33	; 51
				{
					printm_0("AYY Caliente!!\r\n");
     ea8:	3c f4       	brge	.+14     	; 0xeb8 <__vector_25+0xba>
     eaa:	80 91 0a 03 	lds	r24, 0x030A	; 0x80030a <__data_end>
					aboutToSleep();
					initWatchdog();
     eae:	90 91 0b 03 	lds	r25, 0x030B	; 0x80030b <__data_end+0x1>
					enterSleep();
     eb2:	86 3f       	cpi	r24, 0xF6	; 246
				}	

				if(readAccel() != 1) setServos(readString); 
     eb4:	9f 4f       	sbci	r25, 0xFF	; 255
     eb6:	34 f4       	brge	.+12     	; 0xec4 <__vector_25+0xc6>
     eb8:	89 ef       	ldi	r24, 0xF9	; 249
     eba:	92 e0       	ldi	r25, 0x02	; 2
			}
			
			charCount = 0;
     ebc:	88 db       	rcall	.-2288   	; 0x5ce <printm_0>
			clearReadString();
     ebe:	2b de       	rcall	.-938    	; 0xb16 <aboutToSleep>
		}
		UART_0_flush();
     ec0:	04 de       	rcall	.-1016   	; 0xaca <initWatchdog>
     ec2:	0e de       	rcall	.-996    	; 0xae0 <enterSleep>
    return 1;
}

static __inline__ void __iSeiParam(const uint8_t *__s)
{
    sei();
     ec4:	22 dd       	rcall	.-1468   	; 0x90a <readAccel>
	}
}
     ec6:	01 97       	sbiw	r24, 0x01	; 1
		readString[charCount] = receivedChar;
		++charCount;
		 
		if(charCount >= 15 || receivedChar == '\0')
		{	
			printm_0("\r\n");   
     ec8:	19 f0       	breq	.+6      	; 0xed0 <__vector_25+0xd2>
     eca:	8c e0       	ldi	r24, 0x0C	; 12
     ecc:	93 e0       	ldi	r25, 0x03	; 3
     ece:	b4 dc       	rcall	.-1688   	; 0x838 <setServos>
			printm_0("Read String: ");
     ed0:	10 92 20 03 	sts	0x0320, r1	; 0x800320 <charCount>
     ed4:	87 df       	rcall	.-242    	; 0xde4 <clearReadString>
     ed6:	ec db       	rcall	.-2088   	; 0x6b0 <UART_0_flush>
			printm_0(readString);
     ed8:	78 94       	sei
     eda:	0d c0       	rjmp	.+26     	; 0xef6 <__vector_25+0xf8>
     edc:	81 e1       	ldi	r24, 0x11	; 17
     ede:	92 e0       	ldi	r25, 0x02	; 2
			printm_0("\r\n");
     ee0:	76 db       	rcall	.-2324   	; 0x5ce <printm_0>
     ee2:	8e ed       	ldi	r24, 0xDE	; 222
     ee4:	92 e0       	ldi	r25, 0x02	; 2
     ee6:	73 db       	rcall	.-2330   	; 0x5ce <printm_0>
     ee8:	8c e0       	ldi	r24, 0x0C	; 12
			charCount = 0;
			clearReadString();
		}
		UART_0_flush();
	}
}
     eea:	93 e0       	ldi	r25, 0x03	; 3
     eec:	70 db       	rcall	.-2336   	; 0x5ce <printm_0>
     eee:	81 e1       	ldi	r24, 0x11	; 17
     ef0:	92 e0       	ldi	r25, 0x02	; 2
     ef2:	6d db       	rcall	.-2342   	; 0x5ce <printm_0>
     ef4:	ed cf       	rjmp	.-38     	; 0xed0 <__vector_25+0xd2>
     ef6:	ff 91       	pop	r31
     ef8:	ef 91       	pop	r30
     efa:	cf 91       	pop	r28
     efc:	bf 91       	pop	r27
     efe:	af 91       	pop	r26
     f00:	9f 91       	pop	r25
     f02:	8f 91       	pop	r24
     f04:	7f 91       	pop	r23
     f06:	6f 91       	pop	r22
     f08:	5f 91       	pop	r21
     f0a:	4f 91       	pop	r20
     f0c:	3f 91       	pop	r19
     f0e:	2f 91       	pop	r18
     f10:	0f 90       	pop	r0
     f12:	0b be       	out	0x3b, r0	; 59
     f14:	0f 90       	pop	r0
     f16:	0f be       	out	0x3f, r0	; 63
     f18:	0f 90       	pop	r0
     f1a:	1f 90       	pop	r1
     f1c:	18 95       	reti

00000f1e <__subsf3>:
     f1e:	50 58       	subi	r21, 0x80	; 128

00000f20 <__addsf3>:
     f20:	bb 27       	eor	r27, r27
     f22:	aa 27       	eor	r26, r26
     f24:	0e d0       	rcall	.+28     	; 0xf42 <__addsf3x>
     f26:	70 c1       	rjmp	.+736    	; 0x1208 <__fp_round>
     f28:	61 d1       	rcall	.+706    	; 0x11ec <__fp_pscA>
     f2a:	30 f0       	brcs	.+12     	; 0xf38 <__addsf3+0x18>
     f2c:	66 d1       	rcall	.+716    	; 0x11fa <__fp_pscB>
     f2e:	20 f0       	brcs	.+8      	; 0xf38 <__addsf3+0x18>
     f30:	31 f4       	brne	.+12     	; 0xf3e <__addsf3+0x1e>
     f32:	9f 3f       	cpi	r25, 0xFF	; 255
     f34:	11 f4       	brne	.+4      	; 0xf3a <__addsf3+0x1a>
     f36:	1e f4       	brtc	.+6      	; 0xf3e <__addsf3+0x1e>
     f38:	56 c1       	rjmp	.+684    	; 0x11e6 <__fp_nan>
     f3a:	0e f4       	brtc	.+2      	; 0xf3e <__addsf3+0x1e>
     f3c:	e0 95       	com	r30
     f3e:	e7 fb       	bst	r30, 7
     f40:	4c c1       	rjmp	.+664    	; 0x11da <__fp_inf>

00000f42 <__addsf3x>:
     f42:	e9 2f       	mov	r30, r25
     f44:	72 d1       	rcall	.+740    	; 0x122a <__fp_split3>
     f46:	80 f3       	brcs	.-32     	; 0xf28 <__addsf3+0x8>
     f48:	ba 17       	cp	r27, r26
     f4a:	62 07       	cpc	r22, r18
     f4c:	73 07       	cpc	r23, r19
     f4e:	84 07       	cpc	r24, r20
     f50:	95 07       	cpc	r25, r21
     f52:	18 f0       	brcs	.+6      	; 0xf5a <__addsf3x+0x18>
     f54:	71 f4       	brne	.+28     	; 0xf72 <__addsf3x+0x30>
     f56:	9e f5       	brtc	.+102    	; 0xfbe <__addsf3x+0x7c>
     f58:	8a c1       	rjmp	.+788    	; 0x126e <__fp_zero>
     f5a:	0e f4       	brtc	.+2      	; 0xf5e <__addsf3x+0x1c>
     f5c:	e0 95       	com	r30
     f5e:	0b 2e       	mov	r0, r27
     f60:	ba 2f       	mov	r27, r26
     f62:	a0 2d       	mov	r26, r0
     f64:	0b 01       	movw	r0, r22
     f66:	b9 01       	movw	r22, r18
     f68:	90 01       	movw	r18, r0
     f6a:	0c 01       	movw	r0, r24
     f6c:	ca 01       	movw	r24, r20
     f6e:	a0 01       	movw	r20, r0
     f70:	11 24       	eor	r1, r1
     f72:	ff 27       	eor	r31, r31
     f74:	59 1b       	sub	r21, r25
     f76:	99 f0       	breq	.+38     	; 0xf9e <__addsf3x+0x5c>
     f78:	59 3f       	cpi	r21, 0xF9	; 249
     f7a:	50 f4       	brcc	.+20     	; 0xf90 <__addsf3x+0x4e>
     f7c:	50 3e       	cpi	r21, 0xE0	; 224
     f7e:	68 f1       	brcs	.+90     	; 0xfda <__addsf3x+0x98>
     f80:	1a 16       	cp	r1, r26
     f82:	f0 40       	sbci	r31, 0x00	; 0
     f84:	a2 2f       	mov	r26, r18
     f86:	23 2f       	mov	r18, r19
     f88:	34 2f       	mov	r19, r20
     f8a:	44 27       	eor	r20, r20
     f8c:	58 5f       	subi	r21, 0xF8	; 248
     f8e:	f3 cf       	rjmp	.-26     	; 0xf76 <__addsf3x+0x34>
     f90:	46 95       	lsr	r20
     f92:	37 95       	ror	r19
     f94:	27 95       	ror	r18
     f96:	a7 95       	ror	r26
     f98:	f0 40       	sbci	r31, 0x00	; 0
     f9a:	53 95       	inc	r21
     f9c:	c9 f7       	brne	.-14     	; 0xf90 <__addsf3x+0x4e>
     f9e:	7e f4       	brtc	.+30     	; 0xfbe <__addsf3x+0x7c>
     fa0:	1f 16       	cp	r1, r31
     fa2:	ba 0b       	sbc	r27, r26
     fa4:	62 0b       	sbc	r22, r18
     fa6:	73 0b       	sbc	r23, r19
     fa8:	84 0b       	sbc	r24, r20
     faa:	ba f0       	brmi	.+46     	; 0xfda <__addsf3x+0x98>
     fac:	91 50       	subi	r25, 0x01	; 1
     fae:	a1 f0       	breq	.+40     	; 0xfd8 <__addsf3x+0x96>
     fb0:	ff 0f       	add	r31, r31
     fb2:	bb 1f       	adc	r27, r27
     fb4:	66 1f       	adc	r22, r22
     fb6:	77 1f       	adc	r23, r23
     fb8:	88 1f       	adc	r24, r24
     fba:	c2 f7       	brpl	.-16     	; 0xfac <__addsf3x+0x6a>
     fbc:	0e c0       	rjmp	.+28     	; 0xfda <__addsf3x+0x98>
     fbe:	ba 0f       	add	r27, r26
     fc0:	62 1f       	adc	r22, r18
     fc2:	73 1f       	adc	r23, r19
     fc4:	84 1f       	adc	r24, r20
     fc6:	48 f4       	brcc	.+18     	; 0xfda <__addsf3x+0x98>
     fc8:	87 95       	ror	r24
     fca:	77 95       	ror	r23
     fcc:	67 95       	ror	r22
     fce:	b7 95       	ror	r27
     fd0:	f7 95       	ror	r31
     fd2:	9e 3f       	cpi	r25, 0xFE	; 254
     fd4:	08 f0       	brcs	.+2      	; 0xfd8 <__addsf3x+0x96>
     fd6:	b3 cf       	rjmp	.-154    	; 0xf3e <__addsf3+0x1e>
     fd8:	93 95       	inc	r25
     fda:	88 0f       	add	r24, r24
     fdc:	08 f0       	brcs	.+2      	; 0xfe0 <__addsf3x+0x9e>
     fde:	99 27       	eor	r25, r25
     fe0:	ee 0f       	add	r30, r30
     fe2:	97 95       	ror	r25
     fe4:	87 95       	ror	r24
     fe6:	08 95       	ret

00000fe8 <__cmpsf2>:
     fe8:	d4 d0       	rcall	.+424    	; 0x1192 <__fp_cmp>
     fea:	08 f4       	brcc	.+2      	; 0xfee <__cmpsf2+0x6>
     fec:	81 e0       	ldi	r24, 0x01	; 1
     fee:	08 95       	ret

00000ff0 <__divsf3>:
     ff0:	0c d0       	rcall	.+24     	; 0x100a <__divsf3x>
     ff2:	0a c1       	rjmp	.+532    	; 0x1208 <__fp_round>
     ff4:	02 d1       	rcall	.+516    	; 0x11fa <__fp_pscB>
     ff6:	40 f0       	brcs	.+16     	; 0x1008 <__divsf3+0x18>
     ff8:	f9 d0       	rcall	.+498    	; 0x11ec <__fp_pscA>
     ffa:	30 f0       	brcs	.+12     	; 0x1008 <__divsf3+0x18>
     ffc:	21 f4       	brne	.+8      	; 0x1006 <__divsf3+0x16>
     ffe:	5f 3f       	cpi	r21, 0xFF	; 255
    1000:	19 f0       	breq	.+6      	; 0x1008 <__divsf3+0x18>
    1002:	eb c0       	rjmp	.+470    	; 0x11da <__fp_inf>
    1004:	51 11       	cpse	r21, r1
    1006:	34 c1       	rjmp	.+616    	; 0x1270 <__fp_szero>
    1008:	ee c0       	rjmp	.+476    	; 0x11e6 <__fp_nan>

0000100a <__divsf3x>:
    100a:	0f d1       	rcall	.+542    	; 0x122a <__fp_split3>
    100c:	98 f3       	brcs	.-26     	; 0xff4 <__divsf3+0x4>

0000100e <__divsf3_pse>:
    100e:	99 23       	and	r25, r25
    1010:	c9 f3       	breq	.-14     	; 0x1004 <__divsf3+0x14>
    1012:	55 23       	and	r21, r21
    1014:	b1 f3       	breq	.-20     	; 0x1002 <__divsf3+0x12>
    1016:	95 1b       	sub	r25, r21
    1018:	55 0b       	sbc	r21, r21
    101a:	bb 27       	eor	r27, r27
    101c:	aa 27       	eor	r26, r26
    101e:	62 17       	cp	r22, r18
    1020:	73 07       	cpc	r23, r19
    1022:	84 07       	cpc	r24, r20
    1024:	38 f0       	brcs	.+14     	; 0x1034 <__divsf3_pse+0x26>
    1026:	9f 5f       	subi	r25, 0xFF	; 255
    1028:	5f 4f       	sbci	r21, 0xFF	; 255
    102a:	22 0f       	add	r18, r18
    102c:	33 1f       	adc	r19, r19
    102e:	44 1f       	adc	r20, r20
    1030:	aa 1f       	adc	r26, r26
    1032:	a9 f3       	breq	.-22     	; 0x101e <__divsf3_pse+0x10>
    1034:	33 d0       	rcall	.+102    	; 0x109c <__divsf3_pse+0x8e>
    1036:	0e 2e       	mov	r0, r30
    1038:	3a f0       	brmi	.+14     	; 0x1048 <__divsf3_pse+0x3a>
    103a:	e0 e8       	ldi	r30, 0x80	; 128
    103c:	30 d0       	rcall	.+96     	; 0x109e <__divsf3_pse+0x90>
    103e:	91 50       	subi	r25, 0x01	; 1
    1040:	50 40       	sbci	r21, 0x00	; 0
    1042:	e6 95       	lsr	r30
    1044:	00 1c       	adc	r0, r0
    1046:	ca f7       	brpl	.-14     	; 0x103a <__divsf3_pse+0x2c>
    1048:	29 d0       	rcall	.+82     	; 0x109c <__divsf3_pse+0x8e>
    104a:	fe 2f       	mov	r31, r30
    104c:	27 d0       	rcall	.+78     	; 0x109c <__divsf3_pse+0x8e>
    104e:	66 0f       	add	r22, r22
    1050:	77 1f       	adc	r23, r23
    1052:	88 1f       	adc	r24, r24
    1054:	bb 1f       	adc	r27, r27
    1056:	26 17       	cp	r18, r22
    1058:	37 07       	cpc	r19, r23
    105a:	48 07       	cpc	r20, r24
    105c:	ab 07       	cpc	r26, r27
    105e:	b0 e8       	ldi	r27, 0x80	; 128
    1060:	09 f0       	breq	.+2      	; 0x1064 <__divsf3_pse+0x56>
    1062:	bb 0b       	sbc	r27, r27
    1064:	80 2d       	mov	r24, r0
    1066:	bf 01       	movw	r22, r30
    1068:	ff 27       	eor	r31, r31
    106a:	93 58       	subi	r25, 0x83	; 131
    106c:	5f 4f       	sbci	r21, 0xFF	; 255
    106e:	2a f0       	brmi	.+10     	; 0x107a <__divsf3_pse+0x6c>
    1070:	9e 3f       	cpi	r25, 0xFE	; 254
    1072:	51 05       	cpc	r21, r1
    1074:	68 f0       	brcs	.+26     	; 0x1090 <__divsf3_pse+0x82>
    1076:	b1 c0       	rjmp	.+354    	; 0x11da <__fp_inf>
    1078:	fb c0       	rjmp	.+502    	; 0x1270 <__fp_szero>
    107a:	5f 3f       	cpi	r21, 0xFF	; 255
    107c:	ec f3       	brlt	.-6      	; 0x1078 <__divsf3_pse+0x6a>
    107e:	98 3e       	cpi	r25, 0xE8	; 232
    1080:	dc f3       	brlt	.-10     	; 0x1078 <__divsf3_pse+0x6a>
    1082:	86 95       	lsr	r24
    1084:	77 95       	ror	r23
    1086:	67 95       	ror	r22
    1088:	b7 95       	ror	r27
    108a:	f7 95       	ror	r31
    108c:	9f 5f       	subi	r25, 0xFF	; 255
    108e:	c9 f7       	brne	.-14     	; 0x1082 <__divsf3_pse+0x74>
    1090:	88 0f       	add	r24, r24
    1092:	91 1d       	adc	r25, r1
    1094:	96 95       	lsr	r25
    1096:	87 95       	ror	r24
    1098:	97 f9       	bld	r25, 7
    109a:	08 95       	ret
    109c:	e1 e0       	ldi	r30, 0x01	; 1
    109e:	66 0f       	add	r22, r22
    10a0:	77 1f       	adc	r23, r23
    10a2:	88 1f       	adc	r24, r24
    10a4:	bb 1f       	adc	r27, r27
    10a6:	62 17       	cp	r22, r18
    10a8:	73 07       	cpc	r23, r19
    10aa:	84 07       	cpc	r24, r20
    10ac:	ba 07       	cpc	r27, r26
    10ae:	20 f0       	brcs	.+8      	; 0x10b8 <__divsf3_pse+0xaa>
    10b0:	62 1b       	sub	r22, r18
    10b2:	73 0b       	sbc	r23, r19
    10b4:	84 0b       	sbc	r24, r20
    10b6:	ba 0b       	sbc	r27, r26
    10b8:	ee 1f       	adc	r30, r30
    10ba:	88 f7       	brcc	.-30     	; 0x109e <__divsf3_pse+0x90>
    10bc:	e0 95       	com	r30
    10be:	08 95       	ret

000010c0 <__fixunssfsi>:
    10c0:	bc d0       	rcall	.+376    	; 0x123a <__fp_splitA>
    10c2:	88 f0       	brcs	.+34     	; 0x10e6 <__fixunssfsi+0x26>
    10c4:	9f 57       	subi	r25, 0x7F	; 127
    10c6:	90 f0       	brcs	.+36     	; 0x10ec <__fixunssfsi+0x2c>
    10c8:	b9 2f       	mov	r27, r25
    10ca:	99 27       	eor	r25, r25
    10cc:	b7 51       	subi	r27, 0x17	; 23
    10ce:	a0 f0       	brcs	.+40     	; 0x10f8 <__fixunssfsi+0x38>
    10d0:	d1 f0       	breq	.+52     	; 0x1106 <__fixunssfsi+0x46>
    10d2:	66 0f       	add	r22, r22
    10d4:	77 1f       	adc	r23, r23
    10d6:	88 1f       	adc	r24, r24
    10d8:	99 1f       	adc	r25, r25
    10da:	1a f0       	brmi	.+6      	; 0x10e2 <__fixunssfsi+0x22>
    10dc:	ba 95       	dec	r27
    10de:	c9 f7       	brne	.-14     	; 0x10d2 <__fixunssfsi+0x12>
    10e0:	12 c0       	rjmp	.+36     	; 0x1106 <__fixunssfsi+0x46>
    10e2:	b1 30       	cpi	r27, 0x01	; 1
    10e4:	81 f0       	breq	.+32     	; 0x1106 <__fixunssfsi+0x46>
    10e6:	c3 d0       	rcall	.+390    	; 0x126e <__fp_zero>
    10e8:	b1 e0       	ldi	r27, 0x01	; 1
    10ea:	08 95       	ret
    10ec:	c0 c0       	rjmp	.+384    	; 0x126e <__fp_zero>
    10ee:	67 2f       	mov	r22, r23
    10f0:	78 2f       	mov	r23, r24
    10f2:	88 27       	eor	r24, r24
    10f4:	b8 5f       	subi	r27, 0xF8	; 248
    10f6:	39 f0       	breq	.+14     	; 0x1106 <__fixunssfsi+0x46>
    10f8:	b9 3f       	cpi	r27, 0xF9	; 249
    10fa:	cc f3       	brlt	.-14     	; 0x10ee <__fixunssfsi+0x2e>
    10fc:	86 95       	lsr	r24
    10fe:	77 95       	ror	r23
    1100:	67 95       	ror	r22
    1102:	b3 95       	inc	r27
    1104:	d9 f7       	brne	.-10     	; 0x10fc <__fixunssfsi+0x3c>
    1106:	3e f4       	brtc	.+14     	; 0x1116 <__fixunssfsi+0x56>
    1108:	90 95       	com	r25
    110a:	80 95       	com	r24
    110c:	70 95       	com	r23
    110e:	61 95       	neg	r22
    1110:	7f 4f       	sbci	r23, 0xFF	; 255
    1112:	8f 4f       	sbci	r24, 0xFF	; 255
    1114:	9f 4f       	sbci	r25, 0xFF	; 255
    1116:	08 95       	ret

00001118 <__floatunsisf>:
    1118:	e8 94       	clt
    111a:	09 c0       	rjmp	.+18     	; 0x112e <__floatsisf+0x12>

0000111c <__floatsisf>:
    111c:	97 fb       	bst	r25, 7
    111e:	3e f4       	brtc	.+14     	; 0x112e <__floatsisf+0x12>
    1120:	90 95       	com	r25
    1122:	80 95       	com	r24
    1124:	70 95       	com	r23
    1126:	61 95       	neg	r22
    1128:	7f 4f       	sbci	r23, 0xFF	; 255
    112a:	8f 4f       	sbci	r24, 0xFF	; 255
    112c:	9f 4f       	sbci	r25, 0xFF	; 255
    112e:	99 23       	and	r25, r25
    1130:	a9 f0       	breq	.+42     	; 0x115c <__floatsisf+0x40>
    1132:	f9 2f       	mov	r31, r25
    1134:	96 e9       	ldi	r25, 0x96	; 150
    1136:	bb 27       	eor	r27, r27
    1138:	93 95       	inc	r25
    113a:	f6 95       	lsr	r31
    113c:	87 95       	ror	r24
    113e:	77 95       	ror	r23
    1140:	67 95       	ror	r22
    1142:	b7 95       	ror	r27
    1144:	f1 11       	cpse	r31, r1
    1146:	f8 cf       	rjmp	.-16     	; 0x1138 <__floatsisf+0x1c>
    1148:	fa f4       	brpl	.+62     	; 0x1188 <__floatsisf+0x6c>
    114a:	bb 0f       	add	r27, r27
    114c:	11 f4       	brne	.+4      	; 0x1152 <__floatsisf+0x36>
    114e:	60 ff       	sbrs	r22, 0
    1150:	1b c0       	rjmp	.+54     	; 0x1188 <__floatsisf+0x6c>
    1152:	6f 5f       	subi	r22, 0xFF	; 255
    1154:	7f 4f       	sbci	r23, 0xFF	; 255
    1156:	8f 4f       	sbci	r24, 0xFF	; 255
    1158:	9f 4f       	sbci	r25, 0xFF	; 255
    115a:	16 c0       	rjmp	.+44     	; 0x1188 <__floatsisf+0x6c>
    115c:	88 23       	and	r24, r24
    115e:	11 f0       	breq	.+4      	; 0x1164 <__floatsisf+0x48>
    1160:	96 e9       	ldi	r25, 0x96	; 150
    1162:	11 c0       	rjmp	.+34     	; 0x1186 <__floatsisf+0x6a>
    1164:	77 23       	and	r23, r23
    1166:	21 f0       	breq	.+8      	; 0x1170 <__floatsisf+0x54>
    1168:	9e e8       	ldi	r25, 0x8E	; 142
    116a:	87 2f       	mov	r24, r23
    116c:	76 2f       	mov	r23, r22
    116e:	05 c0       	rjmp	.+10     	; 0x117a <__floatsisf+0x5e>
    1170:	66 23       	and	r22, r22
    1172:	71 f0       	breq	.+28     	; 0x1190 <__floatsisf+0x74>
    1174:	96 e8       	ldi	r25, 0x86	; 134
    1176:	86 2f       	mov	r24, r22
    1178:	70 e0       	ldi	r23, 0x00	; 0
    117a:	60 e0       	ldi	r22, 0x00	; 0
    117c:	2a f0       	brmi	.+10     	; 0x1188 <__floatsisf+0x6c>
    117e:	9a 95       	dec	r25
    1180:	66 0f       	add	r22, r22
    1182:	77 1f       	adc	r23, r23
    1184:	88 1f       	adc	r24, r24
    1186:	da f7       	brpl	.-10     	; 0x117e <__floatsisf+0x62>
    1188:	88 0f       	add	r24, r24
    118a:	96 95       	lsr	r25
    118c:	87 95       	ror	r24
    118e:	97 f9       	bld	r25, 7
    1190:	08 95       	ret

00001192 <__fp_cmp>:
    1192:	99 0f       	add	r25, r25
    1194:	00 08       	sbc	r0, r0
    1196:	55 0f       	add	r21, r21
    1198:	aa 0b       	sbc	r26, r26
    119a:	e0 e8       	ldi	r30, 0x80	; 128
    119c:	fe ef       	ldi	r31, 0xFE	; 254
    119e:	16 16       	cp	r1, r22
    11a0:	17 06       	cpc	r1, r23
    11a2:	e8 07       	cpc	r30, r24
    11a4:	f9 07       	cpc	r31, r25
    11a6:	c0 f0       	brcs	.+48     	; 0x11d8 <__fp_cmp+0x46>
    11a8:	12 16       	cp	r1, r18
    11aa:	13 06       	cpc	r1, r19
    11ac:	e4 07       	cpc	r30, r20
    11ae:	f5 07       	cpc	r31, r21
    11b0:	98 f0       	brcs	.+38     	; 0x11d8 <__fp_cmp+0x46>
    11b2:	62 1b       	sub	r22, r18
    11b4:	73 0b       	sbc	r23, r19
    11b6:	84 0b       	sbc	r24, r20
    11b8:	95 0b       	sbc	r25, r21
    11ba:	39 f4       	brne	.+14     	; 0x11ca <__fp_cmp+0x38>
    11bc:	0a 26       	eor	r0, r26
    11be:	61 f0       	breq	.+24     	; 0x11d8 <__fp_cmp+0x46>
    11c0:	23 2b       	or	r18, r19
    11c2:	24 2b       	or	r18, r20
    11c4:	25 2b       	or	r18, r21
    11c6:	21 f4       	brne	.+8      	; 0x11d0 <__fp_cmp+0x3e>
    11c8:	08 95       	ret
    11ca:	0a 26       	eor	r0, r26
    11cc:	09 f4       	brne	.+2      	; 0x11d0 <__fp_cmp+0x3e>
    11ce:	a1 40       	sbci	r26, 0x01	; 1
    11d0:	a6 95       	lsr	r26
    11d2:	8f ef       	ldi	r24, 0xFF	; 255
    11d4:	81 1d       	adc	r24, r1
    11d6:	81 1d       	adc	r24, r1
    11d8:	08 95       	ret

000011da <__fp_inf>:
    11da:	97 f9       	bld	r25, 7
    11dc:	9f 67       	ori	r25, 0x7F	; 127
    11de:	80 e8       	ldi	r24, 0x80	; 128
    11e0:	70 e0       	ldi	r23, 0x00	; 0
    11e2:	60 e0       	ldi	r22, 0x00	; 0
    11e4:	08 95       	ret

000011e6 <__fp_nan>:
    11e6:	9f ef       	ldi	r25, 0xFF	; 255
    11e8:	80 ec       	ldi	r24, 0xC0	; 192
    11ea:	08 95       	ret

000011ec <__fp_pscA>:
    11ec:	00 24       	eor	r0, r0
    11ee:	0a 94       	dec	r0
    11f0:	16 16       	cp	r1, r22
    11f2:	17 06       	cpc	r1, r23
    11f4:	18 06       	cpc	r1, r24
    11f6:	09 06       	cpc	r0, r25
    11f8:	08 95       	ret

000011fa <__fp_pscB>:
    11fa:	00 24       	eor	r0, r0
    11fc:	0a 94       	dec	r0
    11fe:	12 16       	cp	r1, r18
    1200:	13 06       	cpc	r1, r19
    1202:	14 06       	cpc	r1, r20
    1204:	05 06       	cpc	r0, r21
    1206:	08 95       	ret

00001208 <__fp_round>:
    1208:	09 2e       	mov	r0, r25
    120a:	03 94       	inc	r0
    120c:	00 0c       	add	r0, r0
    120e:	11 f4       	brne	.+4      	; 0x1214 <__fp_round+0xc>
    1210:	88 23       	and	r24, r24
    1212:	52 f0       	brmi	.+20     	; 0x1228 <__fp_round+0x20>
    1214:	bb 0f       	add	r27, r27
    1216:	40 f4       	brcc	.+16     	; 0x1228 <__fp_round+0x20>
    1218:	bf 2b       	or	r27, r31
    121a:	11 f4       	brne	.+4      	; 0x1220 <__fp_round+0x18>
    121c:	60 ff       	sbrs	r22, 0
    121e:	04 c0       	rjmp	.+8      	; 0x1228 <__fp_round+0x20>
    1220:	6f 5f       	subi	r22, 0xFF	; 255
    1222:	7f 4f       	sbci	r23, 0xFF	; 255
    1224:	8f 4f       	sbci	r24, 0xFF	; 255
    1226:	9f 4f       	sbci	r25, 0xFF	; 255
    1228:	08 95       	ret

0000122a <__fp_split3>:
    122a:	57 fd       	sbrc	r21, 7
    122c:	90 58       	subi	r25, 0x80	; 128
    122e:	44 0f       	add	r20, r20
    1230:	55 1f       	adc	r21, r21
    1232:	59 f0       	breq	.+22     	; 0x124a <__fp_splitA+0x10>
    1234:	5f 3f       	cpi	r21, 0xFF	; 255
    1236:	71 f0       	breq	.+28     	; 0x1254 <__fp_splitA+0x1a>
    1238:	47 95       	ror	r20

0000123a <__fp_splitA>:
    123a:	88 0f       	add	r24, r24
    123c:	97 fb       	bst	r25, 7
    123e:	99 1f       	adc	r25, r25
    1240:	61 f0       	breq	.+24     	; 0x125a <__fp_splitA+0x20>
    1242:	9f 3f       	cpi	r25, 0xFF	; 255
    1244:	79 f0       	breq	.+30     	; 0x1264 <__fp_splitA+0x2a>
    1246:	87 95       	ror	r24
    1248:	08 95       	ret
    124a:	12 16       	cp	r1, r18
    124c:	13 06       	cpc	r1, r19
    124e:	14 06       	cpc	r1, r20
    1250:	55 1f       	adc	r21, r21
    1252:	f2 cf       	rjmp	.-28     	; 0x1238 <__fp_split3+0xe>
    1254:	46 95       	lsr	r20
    1256:	f1 df       	rcall	.-30     	; 0x123a <__fp_splitA>
    1258:	08 c0       	rjmp	.+16     	; 0x126a <__fp_splitA+0x30>
    125a:	16 16       	cp	r1, r22
    125c:	17 06       	cpc	r1, r23
    125e:	18 06       	cpc	r1, r24
    1260:	99 1f       	adc	r25, r25
    1262:	f1 cf       	rjmp	.-30     	; 0x1246 <__fp_splitA+0xc>
    1264:	86 95       	lsr	r24
    1266:	71 05       	cpc	r23, r1
    1268:	61 05       	cpc	r22, r1
    126a:	08 94       	sec
    126c:	08 95       	ret

0000126e <__fp_zero>:
    126e:	e8 94       	clt

00001270 <__fp_szero>:
    1270:	bb 27       	eor	r27, r27
    1272:	66 27       	eor	r22, r22
    1274:	77 27       	eor	r23, r23
    1276:	cb 01       	movw	r24, r22
    1278:	97 f9       	bld	r25, 7
    127a:	08 95       	ret

0000127c <__gesf2>:
    127c:	8a df       	rcall	.-236    	; 0x1192 <__fp_cmp>
    127e:	08 f4       	brcc	.+2      	; 0x1282 <__gesf2+0x6>
    1280:	8f ef       	ldi	r24, 0xFF	; 255
    1282:	08 95       	ret

00001284 <__mulsf3>:
    1284:	0b d0       	rcall	.+22     	; 0x129c <__mulsf3x>
    1286:	c0 cf       	rjmp	.-128    	; 0x1208 <__fp_round>
    1288:	b1 df       	rcall	.-158    	; 0x11ec <__fp_pscA>
    128a:	28 f0       	brcs	.+10     	; 0x1296 <__mulsf3+0x12>
    128c:	b6 df       	rcall	.-148    	; 0x11fa <__fp_pscB>
    128e:	18 f0       	brcs	.+6      	; 0x1296 <__mulsf3+0x12>
    1290:	95 23       	and	r25, r21
    1292:	09 f0       	breq	.+2      	; 0x1296 <__mulsf3+0x12>
    1294:	a2 cf       	rjmp	.-188    	; 0x11da <__fp_inf>
    1296:	a7 cf       	rjmp	.-178    	; 0x11e6 <__fp_nan>
    1298:	11 24       	eor	r1, r1
    129a:	ea cf       	rjmp	.-44     	; 0x1270 <__fp_szero>

0000129c <__mulsf3x>:
    129c:	c6 df       	rcall	.-116    	; 0x122a <__fp_split3>
    129e:	a0 f3       	brcs	.-24     	; 0x1288 <__mulsf3+0x4>

000012a0 <__mulsf3_pse>:
    12a0:	95 9f       	mul	r25, r21
    12a2:	d1 f3       	breq	.-12     	; 0x1298 <__mulsf3+0x14>
    12a4:	95 0f       	add	r25, r21
    12a6:	50 e0       	ldi	r21, 0x00	; 0
    12a8:	55 1f       	adc	r21, r21
    12aa:	62 9f       	mul	r22, r18
    12ac:	f0 01       	movw	r30, r0
    12ae:	72 9f       	mul	r23, r18
    12b0:	bb 27       	eor	r27, r27
    12b2:	f0 0d       	add	r31, r0
    12b4:	b1 1d       	adc	r27, r1
    12b6:	63 9f       	mul	r22, r19
    12b8:	aa 27       	eor	r26, r26
    12ba:	f0 0d       	add	r31, r0
    12bc:	b1 1d       	adc	r27, r1
    12be:	aa 1f       	adc	r26, r26
    12c0:	64 9f       	mul	r22, r20
    12c2:	66 27       	eor	r22, r22
    12c4:	b0 0d       	add	r27, r0
    12c6:	a1 1d       	adc	r26, r1
    12c8:	66 1f       	adc	r22, r22
    12ca:	82 9f       	mul	r24, r18
    12cc:	22 27       	eor	r18, r18
    12ce:	b0 0d       	add	r27, r0
    12d0:	a1 1d       	adc	r26, r1
    12d2:	62 1f       	adc	r22, r18
    12d4:	73 9f       	mul	r23, r19
    12d6:	b0 0d       	add	r27, r0
    12d8:	a1 1d       	adc	r26, r1
    12da:	62 1f       	adc	r22, r18
    12dc:	83 9f       	mul	r24, r19
    12de:	a0 0d       	add	r26, r0
    12e0:	61 1d       	adc	r22, r1
    12e2:	22 1f       	adc	r18, r18
    12e4:	74 9f       	mul	r23, r20
    12e6:	33 27       	eor	r19, r19
    12e8:	a0 0d       	add	r26, r0
    12ea:	61 1d       	adc	r22, r1
    12ec:	23 1f       	adc	r18, r19
    12ee:	84 9f       	mul	r24, r20
    12f0:	60 0d       	add	r22, r0
    12f2:	21 1d       	adc	r18, r1
    12f4:	82 2f       	mov	r24, r18
    12f6:	76 2f       	mov	r23, r22
    12f8:	6a 2f       	mov	r22, r26
    12fa:	11 24       	eor	r1, r1
    12fc:	9f 57       	subi	r25, 0x7F	; 127
    12fe:	50 40       	sbci	r21, 0x00	; 0
    1300:	8a f0       	brmi	.+34     	; 0x1324 <__mulsf3_pse+0x84>
    1302:	e1 f0       	breq	.+56     	; 0x133c <__mulsf3_pse+0x9c>
    1304:	88 23       	and	r24, r24
    1306:	4a f0       	brmi	.+18     	; 0x131a <__mulsf3_pse+0x7a>
    1308:	ee 0f       	add	r30, r30
    130a:	ff 1f       	adc	r31, r31
    130c:	bb 1f       	adc	r27, r27
    130e:	66 1f       	adc	r22, r22
    1310:	77 1f       	adc	r23, r23
    1312:	88 1f       	adc	r24, r24
    1314:	91 50       	subi	r25, 0x01	; 1
    1316:	50 40       	sbci	r21, 0x00	; 0
    1318:	a9 f7       	brne	.-22     	; 0x1304 <__mulsf3_pse+0x64>
    131a:	9e 3f       	cpi	r25, 0xFE	; 254
    131c:	51 05       	cpc	r21, r1
    131e:	70 f0       	brcs	.+28     	; 0x133c <__mulsf3_pse+0x9c>
    1320:	5c cf       	rjmp	.-328    	; 0x11da <__fp_inf>
    1322:	a6 cf       	rjmp	.-180    	; 0x1270 <__fp_szero>
    1324:	5f 3f       	cpi	r21, 0xFF	; 255
    1326:	ec f3       	brlt	.-6      	; 0x1322 <__mulsf3_pse+0x82>
    1328:	98 3e       	cpi	r25, 0xE8	; 232
    132a:	dc f3       	brlt	.-10     	; 0x1322 <__mulsf3_pse+0x82>
    132c:	86 95       	lsr	r24
    132e:	77 95       	ror	r23
    1330:	67 95       	ror	r22
    1332:	b7 95       	ror	r27
    1334:	f7 95       	ror	r31
    1336:	e7 95       	ror	r30
    1338:	9f 5f       	subi	r25, 0xFF	; 255
    133a:	c1 f7       	brne	.-16     	; 0x132c <__mulsf3_pse+0x8c>
    133c:	fe 2b       	or	r31, r30
    133e:	88 0f       	add	r24, r24
    1340:	91 1d       	adc	r25, r1
    1342:	96 95       	lsr	r25
    1344:	87 95       	ror	r24
    1346:	97 f9       	bld	r25, 7
    1348:	08 95       	ret

0000134a <vfprintf>:
    134a:	2f 92       	push	r2
    134c:	3f 92       	push	r3
    134e:	4f 92       	push	r4
    1350:	5f 92       	push	r5
    1352:	6f 92       	push	r6
    1354:	7f 92       	push	r7
    1356:	8f 92       	push	r8
    1358:	9f 92       	push	r9
    135a:	af 92       	push	r10
    135c:	bf 92       	push	r11
    135e:	cf 92       	push	r12
    1360:	df 92       	push	r13
    1362:	ef 92       	push	r14
    1364:	ff 92       	push	r15
    1366:	0f 93       	push	r16
    1368:	1f 93       	push	r17
    136a:	cf 93       	push	r28
    136c:	df 93       	push	r29
    136e:	cd b7       	in	r28, 0x3d	; 61
    1370:	de b7       	in	r29, 0x3e	; 62
    1372:	60 97       	sbiw	r28, 0x10	; 16
    1374:	0f b6       	in	r0, 0x3f	; 63
    1376:	f8 94       	cli
    1378:	de bf       	out	0x3e, r29	; 62
    137a:	0f be       	out	0x3f, r0	; 63
    137c:	cd bf       	out	0x3d, r28	; 61
    137e:	7c 01       	movw	r14, r24
    1380:	1b 01       	movw	r2, r22
    1382:	6a 01       	movw	r12, r20
    1384:	fc 01       	movw	r30, r24
    1386:	17 82       	std	Z+7, r1	; 0x07
    1388:	16 82       	std	Z+6, r1	; 0x06
    138a:	83 81       	ldd	r24, Z+3	; 0x03
    138c:	81 ff       	sbrs	r24, 1
    138e:	2a c3       	rjmp	.+1620   	; 0x19e4 <vfprintf+0x69a>
    1390:	9e 01       	movw	r18, r28
    1392:	2f 5f       	subi	r18, 0xFF	; 255
    1394:	3f 4f       	sbci	r19, 0xFF	; 255
    1396:	39 01       	movw	r6, r18
    1398:	f7 01       	movw	r30, r14
    139a:	93 81       	ldd	r25, Z+3	; 0x03
    139c:	f1 01       	movw	r30, r2
    139e:	93 fd       	sbrc	r25, 3
    13a0:	85 91       	lpm	r24, Z+
    13a2:	93 ff       	sbrs	r25, 3
    13a4:	81 91       	ld	r24, Z+
    13a6:	1f 01       	movw	r2, r30
    13a8:	88 23       	and	r24, r24
    13aa:	09 f4       	brne	.+2      	; 0x13ae <vfprintf+0x64>
    13ac:	17 c3       	rjmp	.+1582   	; 0x19dc <vfprintf+0x692>
    13ae:	85 32       	cpi	r24, 0x25	; 37
    13b0:	39 f4       	brne	.+14     	; 0x13c0 <vfprintf+0x76>
    13b2:	93 fd       	sbrc	r25, 3
    13b4:	85 91       	lpm	r24, Z+
    13b6:	93 ff       	sbrs	r25, 3
    13b8:	81 91       	ld	r24, Z+
    13ba:	1f 01       	movw	r2, r30
    13bc:	85 32       	cpi	r24, 0x25	; 37
    13be:	31 f4       	brne	.+12     	; 0x13cc <vfprintf+0x82>
    13c0:	b7 01       	movw	r22, r14
    13c2:	90 e0       	ldi	r25, 0x00	; 0
    13c4:	39 d4       	rcall	.+2162   	; 0x1c38 <fputc>
    13c6:	56 01       	movw	r10, r12
    13c8:	65 01       	movw	r12, r10
    13ca:	e6 cf       	rjmp	.-52     	; 0x1398 <vfprintf+0x4e>
    13cc:	10 e0       	ldi	r17, 0x00	; 0
    13ce:	51 2c       	mov	r5, r1
    13d0:	91 2c       	mov	r9, r1
    13d2:	ff e1       	ldi	r31, 0x1F	; 31
    13d4:	f9 15       	cp	r31, r9
    13d6:	d8 f0       	brcs	.+54     	; 0x140e <vfprintf+0xc4>
    13d8:	8b 32       	cpi	r24, 0x2B	; 43
    13da:	79 f0       	breq	.+30     	; 0x13fa <vfprintf+0xb0>
    13dc:	38 f4       	brcc	.+14     	; 0x13ec <vfprintf+0xa2>
    13de:	80 32       	cpi	r24, 0x20	; 32
    13e0:	79 f0       	breq	.+30     	; 0x1400 <vfprintf+0xb6>
    13e2:	83 32       	cpi	r24, 0x23	; 35
    13e4:	a1 f4       	brne	.+40     	; 0x140e <vfprintf+0xc4>
    13e6:	f9 2d       	mov	r31, r9
    13e8:	f0 61       	ori	r31, 0x10	; 16
    13ea:	2e c0       	rjmp	.+92     	; 0x1448 <vfprintf+0xfe>
    13ec:	8d 32       	cpi	r24, 0x2D	; 45
    13ee:	61 f0       	breq	.+24     	; 0x1408 <vfprintf+0xbe>
    13f0:	80 33       	cpi	r24, 0x30	; 48
    13f2:	69 f4       	brne	.+26     	; 0x140e <vfprintf+0xc4>
    13f4:	29 2d       	mov	r18, r9
    13f6:	21 60       	ori	r18, 0x01	; 1
    13f8:	2d c0       	rjmp	.+90     	; 0x1454 <vfprintf+0x10a>
    13fa:	39 2d       	mov	r19, r9
    13fc:	32 60       	ori	r19, 0x02	; 2
    13fe:	93 2e       	mov	r9, r19
    1400:	89 2d       	mov	r24, r9
    1402:	84 60       	ori	r24, 0x04	; 4
    1404:	98 2e       	mov	r9, r24
    1406:	2a c0       	rjmp	.+84     	; 0x145c <vfprintf+0x112>
    1408:	e9 2d       	mov	r30, r9
    140a:	e8 60       	ori	r30, 0x08	; 8
    140c:	15 c0       	rjmp	.+42     	; 0x1438 <vfprintf+0xee>
    140e:	97 fc       	sbrc	r9, 7
    1410:	2d c0       	rjmp	.+90     	; 0x146c <vfprintf+0x122>
    1412:	20 ed       	ldi	r18, 0xD0	; 208
    1414:	28 0f       	add	r18, r24
    1416:	2a 30       	cpi	r18, 0x0A	; 10
    1418:	88 f4       	brcc	.+34     	; 0x143c <vfprintf+0xf2>
    141a:	96 fe       	sbrs	r9, 6
    141c:	06 c0       	rjmp	.+12     	; 0x142a <vfprintf+0xe0>
    141e:	3a e0       	ldi	r19, 0x0A	; 10
    1420:	13 9f       	mul	r17, r19
    1422:	20 0d       	add	r18, r0
    1424:	11 24       	eor	r1, r1
    1426:	12 2f       	mov	r17, r18
    1428:	19 c0       	rjmp	.+50     	; 0x145c <vfprintf+0x112>
    142a:	8a e0       	ldi	r24, 0x0A	; 10
    142c:	58 9e       	mul	r5, r24
    142e:	20 0d       	add	r18, r0
    1430:	11 24       	eor	r1, r1
    1432:	52 2e       	mov	r5, r18
    1434:	e9 2d       	mov	r30, r9
    1436:	e0 62       	ori	r30, 0x20	; 32
    1438:	9e 2e       	mov	r9, r30
    143a:	10 c0       	rjmp	.+32     	; 0x145c <vfprintf+0x112>
    143c:	8e 32       	cpi	r24, 0x2E	; 46
    143e:	31 f4       	brne	.+12     	; 0x144c <vfprintf+0x102>
    1440:	96 fc       	sbrc	r9, 6
    1442:	cc c2       	rjmp	.+1432   	; 0x19dc <vfprintf+0x692>
    1444:	f9 2d       	mov	r31, r9
    1446:	f0 64       	ori	r31, 0x40	; 64
    1448:	9f 2e       	mov	r9, r31
    144a:	08 c0       	rjmp	.+16     	; 0x145c <vfprintf+0x112>
    144c:	8c 36       	cpi	r24, 0x6C	; 108
    144e:	21 f4       	brne	.+8      	; 0x1458 <vfprintf+0x10e>
    1450:	29 2d       	mov	r18, r9
    1452:	20 68       	ori	r18, 0x80	; 128
    1454:	92 2e       	mov	r9, r18
    1456:	02 c0       	rjmp	.+4      	; 0x145c <vfprintf+0x112>
    1458:	88 36       	cpi	r24, 0x68	; 104
    145a:	41 f4       	brne	.+16     	; 0x146c <vfprintf+0x122>
    145c:	f1 01       	movw	r30, r2
    145e:	93 fd       	sbrc	r25, 3
    1460:	85 91       	lpm	r24, Z+
    1462:	93 ff       	sbrs	r25, 3
    1464:	81 91       	ld	r24, Z+
    1466:	1f 01       	movw	r2, r30
    1468:	81 11       	cpse	r24, r1
    146a:	b3 cf       	rjmp	.-154    	; 0x13d2 <vfprintf+0x88>
    146c:	9b eb       	ldi	r25, 0xBB	; 187
    146e:	98 0f       	add	r25, r24
    1470:	93 30       	cpi	r25, 0x03	; 3
    1472:	20 f4       	brcc	.+8      	; 0x147c <vfprintf+0x132>
    1474:	99 2d       	mov	r25, r9
    1476:	90 61       	ori	r25, 0x10	; 16
    1478:	80 5e       	subi	r24, 0xE0	; 224
    147a:	07 c0       	rjmp	.+14     	; 0x148a <vfprintf+0x140>
    147c:	9b e9       	ldi	r25, 0x9B	; 155
    147e:	98 0f       	add	r25, r24
    1480:	93 30       	cpi	r25, 0x03	; 3
    1482:	08 f0       	brcs	.+2      	; 0x1486 <vfprintf+0x13c>
    1484:	59 c1       	rjmp	.+690    	; 0x1738 <vfprintf+0x3ee>
    1486:	99 2d       	mov	r25, r9
    1488:	9f 7e       	andi	r25, 0xEF	; 239
    148a:	96 ff       	sbrs	r25, 6
    148c:	16 e0       	ldi	r17, 0x06	; 6
    148e:	9f 73       	andi	r25, 0x3F	; 63
    1490:	99 2e       	mov	r9, r25
    1492:	85 36       	cpi	r24, 0x65	; 101
    1494:	19 f4       	brne	.+6      	; 0x149c <vfprintf+0x152>
    1496:	90 64       	ori	r25, 0x40	; 64
    1498:	99 2e       	mov	r9, r25
    149a:	08 c0       	rjmp	.+16     	; 0x14ac <vfprintf+0x162>
    149c:	86 36       	cpi	r24, 0x66	; 102
    149e:	21 f4       	brne	.+8      	; 0x14a8 <vfprintf+0x15e>
    14a0:	39 2f       	mov	r19, r25
    14a2:	30 68       	ori	r19, 0x80	; 128
    14a4:	93 2e       	mov	r9, r19
    14a6:	02 c0       	rjmp	.+4      	; 0x14ac <vfprintf+0x162>
    14a8:	11 11       	cpse	r17, r1
    14aa:	11 50       	subi	r17, 0x01	; 1
    14ac:	97 fe       	sbrs	r9, 7
    14ae:	07 c0       	rjmp	.+14     	; 0x14be <vfprintf+0x174>
    14b0:	1c 33       	cpi	r17, 0x3C	; 60
    14b2:	50 f4       	brcc	.+20     	; 0x14c8 <vfprintf+0x17e>
    14b4:	44 24       	eor	r4, r4
    14b6:	43 94       	inc	r4
    14b8:	41 0e       	add	r4, r17
    14ba:	27 e0       	ldi	r18, 0x07	; 7
    14bc:	0b c0       	rjmp	.+22     	; 0x14d4 <vfprintf+0x18a>
    14be:	18 30       	cpi	r17, 0x08	; 8
    14c0:	38 f0       	brcs	.+14     	; 0x14d0 <vfprintf+0x186>
    14c2:	27 e0       	ldi	r18, 0x07	; 7
    14c4:	17 e0       	ldi	r17, 0x07	; 7
    14c6:	05 c0       	rjmp	.+10     	; 0x14d2 <vfprintf+0x188>
    14c8:	27 e0       	ldi	r18, 0x07	; 7
    14ca:	9c e3       	ldi	r25, 0x3C	; 60
    14cc:	49 2e       	mov	r4, r25
    14ce:	02 c0       	rjmp	.+4      	; 0x14d4 <vfprintf+0x18a>
    14d0:	21 2f       	mov	r18, r17
    14d2:	41 2c       	mov	r4, r1
    14d4:	56 01       	movw	r10, r12
    14d6:	84 e0       	ldi	r24, 0x04	; 4
    14d8:	a8 0e       	add	r10, r24
    14da:	b1 1c       	adc	r11, r1
    14dc:	f6 01       	movw	r30, r12
    14de:	60 81       	ld	r22, Z
    14e0:	71 81       	ldd	r23, Z+1	; 0x01
    14e2:	82 81       	ldd	r24, Z+2	; 0x02
    14e4:	93 81       	ldd	r25, Z+3	; 0x03
    14e6:	04 2d       	mov	r16, r4
    14e8:	a3 01       	movw	r20, r6
    14ea:	b8 d2       	rcall	.+1392   	; 0x1a5c <__ftoa_engine>
    14ec:	6c 01       	movw	r12, r24
    14ee:	f9 81       	ldd	r31, Y+1	; 0x01
    14f0:	fc 87       	std	Y+12, r31	; 0x0c
    14f2:	f0 ff       	sbrs	r31, 0
    14f4:	02 c0       	rjmp	.+4      	; 0x14fa <vfprintf+0x1b0>
    14f6:	f3 ff       	sbrs	r31, 3
    14f8:	06 c0       	rjmp	.+12     	; 0x1506 <vfprintf+0x1bc>
    14fa:	91 fc       	sbrc	r9, 1
    14fc:	06 c0       	rjmp	.+12     	; 0x150a <vfprintf+0x1c0>
    14fe:	92 fe       	sbrs	r9, 2
    1500:	06 c0       	rjmp	.+12     	; 0x150e <vfprintf+0x1c4>
    1502:	00 e2       	ldi	r16, 0x20	; 32
    1504:	05 c0       	rjmp	.+10     	; 0x1510 <vfprintf+0x1c6>
    1506:	0d e2       	ldi	r16, 0x2D	; 45
    1508:	03 c0       	rjmp	.+6      	; 0x1510 <vfprintf+0x1c6>
    150a:	0b e2       	ldi	r16, 0x2B	; 43
    150c:	01 c0       	rjmp	.+2      	; 0x1510 <vfprintf+0x1c6>
    150e:	00 e0       	ldi	r16, 0x00	; 0
    1510:	8c 85       	ldd	r24, Y+12	; 0x0c
    1512:	8c 70       	andi	r24, 0x0C	; 12
    1514:	19 f0       	breq	.+6      	; 0x151c <vfprintf+0x1d2>
    1516:	01 11       	cpse	r16, r1
    1518:	43 c2       	rjmp	.+1158   	; 0x19a0 <vfprintf+0x656>
    151a:	80 c2       	rjmp	.+1280   	; 0x1a1c <vfprintf+0x6d2>
    151c:	97 fe       	sbrs	r9, 7
    151e:	10 c0       	rjmp	.+32     	; 0x1540 <vfprintf+0x1f6>
    1520:	4c 0c       	add	r4, r12
    1522:	fc 85       	ldd	r31, Y+12	; 0x0c
    1524:	f4 ff       	sbrs	r31, 4
    1526:	04 c0       	rjmp	.+8      	; 0x1530 <vfprintf+0x1e6>
    1528:	8a 81       	ldd	r24, Y+2	; 0x02
    152a:	81 33       	cpi	r24, 0x31	; 49
    152c:	09 f4       	brne	.+2      	; 0x1530 <vfprintf+0x1e6>
    152e:	4a 94       	dec	r4
    1530:	14 14       	cp	r1, r4
    1532:	74 f5       	brge	.+92     	; 0x1590 <vfprintf+0x246>
    1534:	28 e0       	ldi	r18, 0x08	; 8
    1536:	24 15       	cp	r18, r4
    1538:	78 f5       	brcc	.+94     	; 0x1598 <vfprintf+0x24e>
    153a:	88 e0       	ldi	r24, 0x08	; 8
    153c:	48 2e       	mov	r4, r24
    153e:	2c c0       	rjmp	.+88     	; 0x1598 <vfprintf+0x24e>
    1540:	96 fc       	sbrc	r9, 6
    1542:	2a c0       	rjmp	.+84     	; 0x1598 <vfprintf+0x24e>
    1544:	81 2f       	mov	r24, r17
    1546:	90 e0       	ldi	r25, 0x00	; 0
    1548:	8c 15       	cp	r24, r12
    154a:	9d 05       	cpc	r25, r13
    154c:	9c f0       	brlt	.+38     	; 0x1574 <vfprintf+0x22a>
    154e:	3c ef       	ldi	r19, 0xFC	; 252
    1550:	c3 16       	cp	r12, r19
    1552:	3f ef       	ldi	r19, 0xFF	; 255
    1554:	d3 06       	cpc	r13, r19
    1556:	74 f0       	brlt	.+28     	; 0x1574 <vfprintf+0x22a>
    1558:	89 2d       	mov	r24, r9
    155a:	80 68       	ori	r24, 0x80	; 128
    155c:	98 2e       	mov	r9, r24
    155e:	0a c0       	rjmp	.+20     	; 0x1574 <vfprintf+0x22a>
    1560:	e2 e0       	ldi	r30, 0x02	; 2
    1562:	f0 e0       	ldi	r31, 0x00	; 0
    1564:	ec 0f       	add	r30, r28
    1566:	fd 1f       	adc	r31, r29
    1568:	e1 0f       	add	r30, r17
    156a:	f1 1d       	adc	r31, r1
    156c:	80 81       	ld	r24, Z
    156e:	80 33       	cpi	r24, 0x30	; 48
    1570:	19 f4       	brne	.+6      	; 0x1578 <vfprintf+0x22e>
    1572:	11 50       	subi	r17, 0x01	; 1
    1574:	11 11       	cpse	r17, r1
    1576:	f4 cf       	rjmp	.-24     	; 0x1560 <vfprintf+0x216>
    1578:	97 fe       	sbrs	r9, 7
    157a:	0e c0       	rjmp	.+28     	; 0x1598 <vfprintf+0x24e>
    157c:	44 24       	eor	r4, r4
    157e:	43 94       	inc	r4
    1580:	41 0e       	add	r4, r17
    1582:	81 2f       	mov	r24, r17
    1584:	90 e0       	ldi	r25, 0x00	; 0
    1586:	c8 16       	cp	r12, r24
    1588:	d9 06       	cpc	r13, r25
    158a:	2c f4       	brge	.+10     	; 0x1596 <vfprintf+0x24c>
    158c:	1c 19       	sub	r17, r12
    158e:	04 c0       	rjmp	.+8      	; 0x1598 <vfprintf+0x24e>
    1590:	44 24       	eor	r4, r4
    1592:	43 94       	inc	r4
    1594:	01 c0       	rjmp	.+2      	; 0x1598 <vfprintf+0x24e>
    1596:	10 e0       	ldi	r17, 0x00	; 0
    1598:	97 fe       	sbrs	r9, 7
    159a:	06 c0       	rjmp	.+12     	; 0x15a8 <vfprintf+0x25e>
    159c:	1c 14       	cp	r1, r12
    159e:	1d 04       	cpc	r1, r13
    15a0:	34 f4       	brge	.+12     	; 0x15ae <vfprintf+0x264>
    15a2:	c6 01       	movw	r24, r12
    15a4:	01 96       	adiw	r24, 0x01	; 1
    15a6:	05 c0       	rjmp	.+10     	; 0x15b2 <vfprintf+0x268>
    15a8:	85 e0       	ldi	r24, 0x05	; 5
    15aa:	90 e0       	ldi	r25, 0x00	; 0
    15ac:	02 c0       	rjmp	.+4      	; 0x15b2 <vfprintf+0x268>
    15ae:	81 e0       	ldi	r24, 0x01	; 1
    15b0:	90 e0       	ldi	r25, 0x00	; 0
    15b2:	01 11       	cpse	r16, r1
    15b4:	01 96       	adiw	r24, 0x01	; 1
    15b6:	11 23       	and	r17, r17
    15b8:	31 f0       	breq	.+12     	; 0x15c6 <vfprintf+0x27c>
    15ba:	21 2f       	mov	r18, r17
    15bc:	30 e0       	ldi	r19, 0x00	; 0
    15be:	2f 5f       	subi	r18, 0xFF	; 255
    15c0:	3f 4f       	sbci	r19, 0xFF	; 255
    15c2:	82 0f       	add	r24, r18
    15c4:	93 1f       	adc	r25, r19
    15c6:	25 2d       	mov	r18, r5
    15c8:	30 e0       	ldi	r19, 0x00	; 0
    15ca:	82 17       	cp	r24, r18
    15cc:	93 07       	cpc	r25, r19
    15ce:	14 f4       	brge	.+4      	; 0x15d4 <vfprintf+0x28a>
    15d0:	58 1a       	sub	r5, r24
    15d2:	01 c0       	rjmp	.+2      	; 0x15d6 <vfprintf+0x28c>
    15d4:	51 2c       	mov	r5, r1
    15d6:	89 2d       	mov	r24, r9
    15d8:	89 70       	andi	r24, 0x09	; 9
    15da:	41 f4       	brne	.+16     	; 0x15ec <vfprintf+0x2a2>
    15dc:	55 20       	and	r5, r5
    15de:	31 f0       	breq	.+12     	; 0x15ec <vfprintf+0x2a2>
    15e0:	b7 01       	movw	r22, r14
    15e2:	80 e2       	ldi	r24, 0x20	; 32
    15e4:	90 e0       	ldi	r25, 0x00	; 0
    15e6:	28 d3       	rcall	.+1616   	; 0x1c38 <fputc>
    15e8:	5a 94       	dec	r5
    15ea:	f8 cf       	rjmp	.-16     	; 0x15dc <vfprintf+0x292>
    15ec:	00 23       	and	r16, r16
    15ee:	21 f0       	breq	.+8      	; 0x15f8 <vfprintf+0x2ae>
    15f0:	b7 01       	movw	r22, r14
    15f2:	80 2f       	mov	r24, r16
    15f4:	90 e0       	ldi	r25, 0x00	; 0
    15f6:	20 d3       	rcall	.+1600   	; 0x1c38 <fputc>
    15f8:	93 fc       	sbrc	r9, 3
    15fa:	08 c0       	rjmp	.+16     	; 0x160c <vfprintf+0x2c2>
    15fc:	55 20       	and	r5, r5
    15fe:	31 f0       	breq	.+12     	; 0x160c <vfprintf+0x2c2>
    1600:	b7 01       	movw	r22, r14
    1602:	80 e3       	ldi	r24, 0x30	; 48
    1604:	90 e0       	ldi	r25, 0x00	; 0
    1606:	18 d3       	rcall	.+1584   	; 0x1c38 <fputc>
    1608:	5a 94       	dec	r5
    160a:	f8 cf       	rjmp	.-16     	; 0x15fc <vfprintf+0x2b2>
    160c:	97 fe       	sbrs	r9, 7
    160e:	4a c0       	rjmp	.+148    	; 0x16a4 <vfprintf+0x35a>
    1610:	46 01       	movw	r8, r12
    1612:	d7 fe       	sbrs	r13, 7
    1614:	02 c0       	rjmp	.+4      	; 0x161a <vfprintf+0x2d0>
    1616:	81 2c       	mov	r8, r1
    1618:	91 2c       	mov	r9, r1
    161a:	c6 01       	movw	r24, r12
    161c:	88 19       	sub	r24, r8
    161e:	99 09       	sbc	r25, r9
    1620:	f3 01       	movw	r30, r6
    1622:	e8 0f       	add	r30, r24
    1624:	f9 1f       	adc	r31, r25
    1626:	fe 87       	std	Y+14, r31	; 0x0e
    1628:	ed 87       	std	Y+13, r30	; 0x0d
    162a:	96 01       	movw	r18, r12
    162c:	24 19       	sub	r18, r4
    162e:	31 09       	sbc	r19, r1
    1630:	38 8b       	std	Y+16, r19	; 0x10
    1632:	2f 87       	std	Y+15, r18	; 0x0f
    1634:	01 2f       	mov	r16, r17
    1636:	10 e0       	ldi	r17, 0x00	; 0
    1638:	11 95       	neg	r17
    163a:	01 95       	neg	r16
    163c:	11 09       	sbc	r17, r1
    163e:	3f ef       	ldi	r19, 0xFF	; 255
    1640:	83 16       	cp	r8, r19
    1642:	93 06       	cpc	r9, r19
    1644:	21 f4       	brne	.+8      	; 0x164e <vfprintf+0x304>
    1646:	b7 01       	movw	r22, r14
    1648:	8e e2       	ldi	r24, 0x2E	; 46
    164a:	90 e0       	ldi	r25, 0x00	; 0
    164c:	f5 d2       	rcall	.+1514   	; 0x1c38 <fputc>
    164e:	c8 14       	cp	r12, r8
    1650:	d9 04       	cpc	r13, r9
    1652:	4c f0       	brlt	.+18     	; 0x1666 <vfprintf+0x31c>
    1654:	8f 85       	ldd	r24, Y+15	; 0x0f
    1656:	98 89       	ldd	r25, Y+16	; 0x10
    1658:	88 15       	cp	r24, r8
    165a:	99 05       	cpc	r25, r9
    165c:	24 f4       	brge	.+8      	; 0x1666 <vfprintf+0x31c>
    165e:	ed 85       	ldd	r30, Y+13	; 0x0d
    1660:	fe 85       	ldd	r31, Y+14	; 0x0e
    1662:	81 81       	ldd	r24, Z+1	; 0x01
    1664:	01 c0       	rjmp	.+2      	; 0x1668 <vfprintf+0x31e>
    1666:	80 e3       	ldi	r24, 0x30	; 48
    1668:	f1 e0       	ldi	r31, 0x01	; 1
    166a:	8f 1a       	sub	r8, r31
    166c:	91 08       	sbc	r9, r1
    166e:	2d 85       	ldd	r18, Y+13	; 0x0d
    1670:	3e 85       	ldd	r19, Y+14	; 0x0e
    1672:	2f 5f       	subi	r18, 0xFF	; 255
    1674:	3f 4f       	sbci	r19, 0xFF	; 255
    1676:	3e 87       	std	Y+14, r19	; 0x0e
    1678:	2d 87       	std	Y+13, r18	; 0x0d
    167a:	80 16       	cp	r8, r16
    167c:	91 06       	cpc	r9, r17
    167e:	24 f0       	brlt	.+8      	; 0x1688 <vfprintf+0x33e>
    1680:	b7 01       	movw	r22, r14
    1682:	90 e0       	ldi	r25, 0x00	; 0
    1684:	d9 d2       	rcall	.+1458   	; 0x1c38 <fputc>
    1686:	db cf       	rjmp	.-74     	; 0x163e <vfprintf+0x2f4>
    1688:	c8 14       	cp	r12, r8
    168a:	d9 04       	cpc	r13, r9
    168c:	41 f4       	brne	.+16     	; 0x169e <vfprintf+0x354>
    168e:	9a 81       	ldd	r25, Y+2	; 0x02
    1690:	96 33       	cpi	r25, 0x36	; 54
    1692:	20 f4       	brcc	.+8      	; 0x169c <vfprintf+0x352>
    1694:	95 33       	cpi	r25, 0x35	; 53
    1696:	19 f4       	brne	.+6      	; 0x169e <vfprintf+0x354>
    1698:	3c 85       	ldd	r19, Y+12	; 0x0c
    169a:	34 ff       	sbrs	r19, 4
    169c:	81 e3       	ldi	r24, 0x31	; 49
    169e:	b7 01       	movw	r22, r14
    16a0:	90 e0       	ldi	r25, 0x00	; 0
    16a2:	48 c0       	rjmp	.+144    	; 0x1734 <vfprintf+0x3ea>
    16a4:	8a 81       	ldd	r24, Y+2	; 0x02
    16a6:	81 33       	cpi	r24, 0x31	; 49
    16a8:	19 f0       	breq	.+6      	; 0x16b0 <vfprintf+0x366>
    16aa:	9c 85       	ldd	r25, Y+12	; 0x0c
    16ac:	9f 7e       	andi	r25, 0xEF	; 239
    16ae:	9c 87       	std	Y+12, r25	; 0x0c
    16b0:	b7 01       	movw	r22, r14
    16b2:	90 e0       	ldi	r25, 0x00	; 0
    16b4:	c1 d2       	rcall	.+1410   	; 0x1c38 <fputc>
    16b6:	11 11       	cpse	r17, r1
    16b8:	05 c0       	rjmp	.+10     	; 0x16c4 <vfprintf+0x37a>
    16ba:	94 fc       	sbrc	r9, 4
    16bc:	16 c0       	rjmp	.+44     	; 0x16ea <vfprintf+0x3a0>
    16be:	85 e6       	ldi	r24, 0x65	; 101
    16c0:	90 e0       	ldi	r25, 0x00	; 0
    16c2:	15 c0       	rjmp	.+42     	; 0x16ee <vfprintf+0x3a4>
    16c4:	b7 01       	movw	r22, r14
    16c6:	8e e2       	ldi	r24, 0x2E	; 46
    16c8:	90 e0       	ldi	r25, 0x00	; 0
    16ca:	b6 d2       	rcall	.+1388   	; 0x1c38 <fputc>
    16cc:	1e 5f       	subi	r17, 0xFE	; 254
    16ce:	82 e0       	ldi	r24, 0x02	; 2
    16d0:	01 e0       	ldi	r16, 0x01	; 1
    16d2:	08 0f       	add	r16, r24
    16d4:	f3 01       	movw	r30, r6
    16d6:	e8 0f       	add	r30, r24
    16d8:	f1 1d       	adc	r31, r1
    16da:	80 81       	ld	r24, Z
    16dc:	b7 01       	movw	r22, r14
    16de:	90 e0       	ldi	r25, 0x00	; 0
    16e0:	ab d2       	rcall	.+1366   	; 0x1c38 <fputc>
    16e2:	80 2f       	mov	r24, r16
    16e4:	01 13       	cpse	r16, r17
    16e6:	f4 cf       	rjmp	.-24     	; 0x16d0 <vfprintf+0x386>
    16e8:	e8 cf       	rjmp	.-48     	; 0x16ba <vfprintf+0x370>
    16ea:	85 e4       	ldi	r24, 0x45	; 69
    16ec:	90 e0       	ldi	r25, 0x00	; 0
    16ee:	b7 01       	movw	r22, r14
    16f0:	a3 d2       	rcall	.+1350   	; 0x1c38 <fputc>
    16f2:	d7 fc       	sbrc	r13, 7
    16f4:	06 c0       	rjmp	.+12     	; 0x1702 <vfprintf+0x3b8>
    16f6:	c1 14       	cp	r12, r1
    16f8:	d1 04       	cpc	r13, r1
    16fa:	41 f4       	brne	.+16     	; 0x170c <vfprintf+0x3c2>
    16fc:	ec 85       	ldd	r30, Y+12	; 0x0c
    16fe:	e4 ff       	sbrs	r30, 4
    1700:	05 c0       	rjmp	.+10     	; 0x170c <vfprintf+0x3c2>
    1702:	d1 94       	neg	r13
    1704:	c1 94       	neg	r12
    1706:	d1 08       	sbc	r13, r1
    1708:	8d e2       	ldi	r24, 0x2D	; 45
    170a:	01 c0       	rjmp	.+2      	; 0x170e <vfprintf+0x3c4>
    170c:	8b e2       	ldi	r24, 0x2B	; 43
    170e:	b7 01       	movw	r22, r14
    1710:	90 e0       	ldi	r25, 0x00	; 0
    1712:	92 d2       	rcall	.+1316   	; 0x1c38 <fputc>
    1714:	80 e3       	ldi	r24, 0x30	; 48
    1716:	2a e0       	ldi	r18, 0x0A	; 10
    1718:	c2 16       	cp	r12, r18
    171a:	d1 04       	cpc	r13, r1
    171c:	2c f0       	brlt	.+10     	; 0x1728 <vfprintf+0x3de>
    171e:	8f 5f       	subi	r24, 0xFF	; 255
    1720:	fa e0       	ldi	r31, 0x0A	; 10
    1722:	cf 1a       	sub	r12, r31
    1724:	d1 08       	sbc	r13, r1
    1726:	f7 cf       	rjmp	.-18     	; 0x1716 <vfprintf+0x3cc>
    1728:	b7 01       	movw	r22, r14
    172a:	90 e0       	ldi	r25, 0x00	; 0
    172c:	85 d2       	rcall	.+1290   	; 0x1c38 <fputc>
    172e:	b7 01       	movw	r22, r14
    1730:	c6 01       	movw	r24, r12
    1732:	c0 96       	adiw	r24, 0x30	; 48
    1734:	81 d2       	rcall	.+1282   	; 0x1c38 <fputc>
    1736:	49 c1       	rjmp	.+658    	; 0x19ca <vfprintf+0x680>
    1738:	83 36       	cpi	r24, 0x63	; 99
    173a:	31 f0       	breq	.+12     	; 0x1748 <vfprintf+0x3fe>
    173c:	83 37       	cpi	r24, 0x73	; 115
    173e:	79 f0       	breq	.+30     	; 0x175e <vfprintf+0x414>
    1740:	83 35       	cpi	r24, 0x53	; 83
    1742:	09 f0       	breq	.+2      	; 0x1746 <vfprintf+0x3fc>
    1744:	52 c0       	rjmp	.+164    	; 0x17ea <vfprintf+0x4a0>
    1746:	1f c0       	rjmp	.+62     	; 0x1786 <vfprintf+0x43c>
    1748:	56 01       	movw	r10, r12
    174a:	32 e0       	ldi	r19, 0x02	; 2
    174c:	a3 0e       	add	r10, r19
    174e:	b1 1c       	adc	r11, r1
    1750:	f6 01       	movw	r30, r12
    1752:	80 81       	ld	r24, Z
    1754:	89 83       	std	Y+1, r24	; 0x01
    1756:	01 e0       	ldi	r16, 0x01	; 1
    1758:	10 e0       	ldi	r17, 0x00	; 0
    175a:	63 01       	movw	r12, r6
    175c:	11 c0       	rjmp	.+34     	; 0x1780 <vfprintf+0x436>
    175e:	56 01       	movw	r10, r12
    1760:	f2 e0       	ldi	r31, 0x02	; 2
    1762:	af 0e       	add	r10, r31
    1764:	b1 1c       	adc	r11, r1
    1766:	f6 01       	movw	r30, r12
    1768:	c0 80       	ld	r12, Z
    176a:	d1 80       	ldd	r13, Z+1	; 0x01
    176c:	96 fe       	sbrs	r9, 6
    176e:	03 c0       	rjmp	.+6      	; 0x1776 <vfprintf+0x42c>
    1770:	61 2f       	mov	r22, r17
    1772:	70 e0       	ldi	r23, 0x00	; 0
    1774:	02 c0       	rjmp	.+4      	; 0x177a <vfprintf+0x430>
    1776:	6f ef       	ldi	r22, 0xFF	; 255
    1778:	7f ef       	ldi	r23, 0xFF	; 255
    177a:	c6 01       	movw	r24, r12
    177c:	52 d2       	rcall	.+1188   	; 0x1c22 <strnlen>
    177e:	8c 01       	movw	r16, r24
    1780:	f9 2d       	mov	r31, r9
    1782:	ff 77       	andi	r31, 0x7F	; 127
    1784:	13 c0       	rjmp	.+38     	; 0x17ac <vfprintf+0x462>
    1786:	56 01       	movw	r10, r12
    1788:	22 e0       	ldi	r18, 0x02	; 2
    178a:	a2 0e       	add	r10, r18
    178c:	b1 1c       	adc	r11, r1
    178e:	f6 01       	movw	r30, r12
    1790:	c0 80       	ld	r12, Z
    1792:	d1 80       	ldd	r13, Z+1	; 0x01
    1794:	96 fe       	sbrs	r9, 6
    1796:	03 c0       	rjmp	.+6      	; 0x179e <vfprintf+0x454>
    1798:	61 2f       	mov	r22, r17
    179a:	70 e0       	ldi	r23, 0x00	; 0
    179c:	02 c0       	rjmp	.+4      	; 0x17a2 <vfprintf+0x458>
    179e:	6f ef       	ldi	r22, 0xFF	; 255
    17a0:	7f ef       	ldi	r23, 0xFF	; 255
    17a2:	c6 01       	movw	r24, r12
    17a4:	33 d2       	rcall	.+1126   	; 0x1c0c <strnlen_P>
    17a6:	8c 01       	movw	r16, r24
    17a8:	f9 2d       	mov	r31, r9
    17aa:	f0 68       	ori	r31, 0x80	; 128
    17ac:	9f 2e       	mov	r9, r31
    17ae:	f3 fd       	sbrc	r31, 3
    17b0:	18 c0       	rjmp	.+48     	; 0x17e2 <vfprintf+0x498>
    17b2:	85 2d       	mov	r24, r5
    17b4:	90 e0       	ldi	r25, 0x00	; 0
    17b6:	08 17       	cp	r16, r24
    17b8:	19 07       	cpc	r17, r25
    17ba:	98 f4       	brcc	.+38     	; 0x17e2 <vfprintf+0x498>
    17bc:	b7 01       	movw	r22, r14
    17be:	80 e2       	ldi	r24, 0x20	; 32
    17c0:	90 e0       	ldi	r25, 0x00	; 0
    17c2:	3a d2       	rcall	.+1140   	; 0x1c38 <fputc>
    17c4:	5a 94       	dec	r5
    17c6:	f5 cf       	rjmp	.-22     	; 0x17b2 <vfprintf+0x468>
    17c8:	f6 01       	movw	r30, r12
    17ca:	97 fc       	sbrc	r9, 7
    17cc:	85 91       	lpm	r24, Z+
    17ce:	97 fe       	sbrs	r9, 7
    17d0:	81 91       	ld	r24, Z+
    17d2:	6f 01       	movw	r12, r30
    17d4:	b7 01       	movw	r22, r14
    17d6:	90 e0       	ldi	r25, 0x00	; 0
    17d8:	2f d2       	rcall	.+1118   	; 0x1c38 <fputc>
    17da:	51 10       	cpse	r5, r1
    17dc:	5a 94       	dec	r5
    17de:	01 50       	subi	r16, 0x01	; 1
    17e0:	11 09       	sbc	r17, r1
    17e2:	01 15       	cp	r16, r1
    17e4:	11 05       	cpc	r17, r1
    17e6:	81 f7       	brne	.-32     	; 0x17c8 <vfprintf+0x47e>
    17e8:	f0 c0       	rjmp	.+480    	; 0x19ca <vfprintf+0x680>
    17ea:	84 36       	cpi	r24, 0x64	; 100
    17ec:	11 f0       	breq	.+4      	; 0x17f2 <vfprintf+0x4a8>
    17ee:	89 36       	cpi	r24, 0x69	; 105
    17f0:	59 f5       	brne	.+86     	; 0x1848 <vfprintf+0x4fe>
    17f2:	56 01       	movw	r10, r12
    17f4:	97 fe       	sbrs	r9, 7
    17f6:	09 c0       	rjmp	.+18     	; 0x180a <vfprintf+0x4c0>
    17f8:	24 e0       	ldi	r18, 0x04	; 4
    17fa:	a2 0e       	add	r10, r18
    17fc:	b1 1c       	adc	r11, r1
    17fe:	f6 01       	movw	r30, r12
    1800:	60 81       	ld	r22, Z
    1802:	71 81       	ldd	r23, Z+1	; 0x01
    1804:	82 81       	ldd	r24, Z+2	; 0x02
    1806:	93 81       	ldd	r25, Z+3	; 0x03
    1808:	0a c0       	rjmp	.+20     	; 0x181e <vfprintf+0x4d4>
    180a:	f2 e0       	ldi	r31, 0x02	; 2
    180c:	af 0e       	add	r10, r31
    180e:	b1 1c       	adc	r11, r1
    1810:	f6 01       	movw	r30, r12
    1812:	60 81       	ld	r22, Z
    1814:	71 81       	ldd	r23, Z+1	; 0x01
    1816:	07 2e       	mov	r0, r23
    1818:	00 0c       	add	r0, r0
    181a:	88 0b       	sbc	r24, r24
    181c:	99 0b       	sbc	r25, r25
    181e:	f9 2d       	mov	r31, r9
    1820:	ff 76       	andi	r31, 0x6F	; 111
    1822:	9f 2e       	mov	r9, r31
    1824:	97 ff       	sbrs	r25, 7
    1826:	09 c0       	rjmp	.+18     	; 0x183a <vfprintf+0x4f0>
    1828:	90 95       	com	r25
    182a:	80 95       	com	r24
    182c:	70 95       	com	r23
    182e:	61 95       	neg	r22
    1830:	7f 4f       	sbci	r23, 0xFF	; 255
    1832:	8f 4f       	sbci	r24, 0xFF	; 255
    1834:	9f 4f       	sbci	r25, 0xFF	; 255
    1836:	f0 68       	ori	r31, 0x80	; 128
    1838:	9f 2e       	mov	r9, r31
    183a:	2a e0       	ldi	r18, 0x0A	; 10
    183c:	30 e0       	ldi	r19, 0x00	; 0
    183e:	a3 01       	movw	r20, r6
    1840:	65 d2       	rcall	.+1226   	; 0x1d0c <__ultoa_invert>
    1842:	c8 2e       	mov	r12, r24
    1844:	c6 18       	sub	r12, r6
    1846:	3e c0       	rjmp	.+124    	; 0x18c4 <vfprintf+0x57a>
    1848:	09 2d       	mov	r16, r9
    184a:	85 37       	cpi	r24, 0x75	; 117
    184c:	21 f4       	brne	.+8      	; 0x1856 <vfprintf+0x50c>
    184e:	0f 7e       	andi	r16, 0xEF	; 239
    1850:	2a e0       	ldi	r18, 0x0A	; 10
    1852:	30 e0       	ldi	r19, 0x00	; 0
    1854:	1d c0       	rjmp	.+58     	; 0x1890 <vfprintf+0x546>
    1856:	09 7f       	andi	r16, 0xF9	; 249
    1858:	8f 36       	cpi	r24, 0x6F	; 111
    185a:	91 f0       	breq	.+36     	; 0x1880 <vfprintf+0x536>
    185c:	18 f4       	brcc	.+6      	; 0x1864 <vfprintf+0x51a>
    185e:	88 35       	cpi	r24, 0x58	; 88
    1860:	59 f0       	breq	.+22     	; 0x1878 <vfprintf+0x52e>
    1862:	bc c0       	rjmp	.+376    	; 0x19dc <vfprintf+0x692>
    1864:	80 37       	cpi	r24, 0x70	; 112
    1866:	19 f0       	breq	.+6      	; 0x186e <vfprintf+0x524>
    1868:	88 37       	cpi	r24, 0x78	; 120
    186a:	11 f0       	breq	.+4      	; 0x1870 <vfprintf+0x526>
    186c:	b7 c0       	rjmp	.+366    	; 0x19dc <vfprintf+0x692>
    186e:	00 61       	ori	r16, 0x10	; 16
    1870:	04 ff       	sbrs	r16, 4
    1872:	09 c0       	rjmp	.+18     	; 0x1886 <vfprintf+0x53c>
    1874:	04 60       	ori	r16, 0x04	; 4
    1876:	07 c0       	rjmp	.+14     	; 0x1886 <vfprintf+0x53c>
    1878:	94 fe       	sbrs	r9, 4
    187a:	08 c0       	rjmp	.+16     	; 0x188c <vfprintf+0x542>
    187c:	06 60       	ori	r16, 0x06	; 6
    187e:	06 c0       	rjmp	.+12     	; 0x188c <vfprintf+0x542>
    1880:	28 e0       	ldi	r18, 0x08	; 8
    1882:	30 e0       	ldi	r19, 0x00	; 0
    1884:	05 c0       	rjmp	.+10     	; 0x1890 <vfprintf+0x546>
    1886:	20 e1       	ldi	r18, 0x10	; 16
    1888:	30 e0       	ldi	r19, 0x00	; 0
    188a:	02 c0       	rjmp	.+4      	; 0x1890 <vfprintf+0x546>
    188c:	20 e1       	ldi	r18, 0x10	; 16
    188e:	32 e0       	ldi	r19, 0x02	; 2
    1890:	56 01       	movw	r10, r12
    1892:	07 ff       	sbrs	r16, 7
    1894:	09 c0       	rjmp	.+18     	; 0x18a8 <vfprintf+0x55e>
    1896:	84 e0       	ldi	r24, 0x04	; 4
    1898:	a8 0e       	add	r10, r24
    189a:	b1 1c       	adc	r11, r1
    189c:	f6 01       	movw	r30, r12
    189e:	60 81       	ld	r22, Z
    18a0:	71 81       	ldd	r23, Z+1	; 0x01
    18a2:	82 81       	ldd	r24, Z+2	; 0x02
    18a4:	93 81       	ldd	r25, Z+3	; 0x03
    18a6:	08 c0       	rjmp	.+16     	; 0x18b8 <vfprintf+0x56e>
    18a8:	f2 e0       	ldi	r31, 0x02	; 2
    18aa:	af 0e       	add	r10, r31
    18ac:	b1 1c       	adc	r11, r1
    18ae:	f6 01       	movw	r30, r12
    18b0:	60 81       	ld	r22, Z
    18b2:	71 81       	ldd	r23, Z+1	; 0x01
    18b4:	80 e0       	ldi	r24, 0x00	; 0
    18b6:	90 e0       	ldi	r25, 0x00	; 0
    18b8:	a3 01       	movw	r20, r6
    18ba:	28 d2       	rcall	.+1104   	; 0x1d0c <__ultoa_invert>
    18bc:	c8 2e       	mov	r12, r24
    18be:	c6 18       	sub	r12, r6
    18c0:	0f 77       	andi	r16, 0x7F	; 127
    18c2:	90 2e       	mov	r9, r16
    18c4:	96 fe       	sbrs	r9, 6
    18c6:	0b c0       	rjmp	.+22     	; 0x18de <vfprintf+0x594>
    18c8:	09 2d       	mov	r16, r9
    18ca:	0e 7f       	andi	r16, 0xFE	; 254
    18cc:	c1 16       	cp	r12, r17
    18ce:	50 f4       	brcc	.+20     	; 0x18e4 <vfprintf+0x59a>
    18d0:	94 fe       	sbrs	r9, 4
    18d2:	0a c0       	rjmp	.+20     	; 0x18e8 <vfprintf+0x59e>
    18d4:	92 fc       	sbrc	r9, 2
    18d6:	08 c0       	rjmp	.+16     	; 0x18e8 <vfprintf+0x59e>
    18d8:	09 2d       	mov	r16, r9
    18da:	0e 7e       	andi	r16, 0xEE	; 238
    18dc:	05 c0       	rjmp	.+10     	; 0x18e8 <vfprintf+0x59e>
    18de:	dc 2c       	mov	r13, r12
    18e0:	09 2d       	mov	r16, r9
    18e2:	03 c0       	rjmp	.+6      	; 0x18ea <vfprintf+0x5a0>
    18e4:	dc 2c       	mov	r13, r12
    18e6:	01 c0       	rjmp	.+2      	; 0x18ea <vfprintf+0x5a0>
    18e8:	d1 2e       	mov	r13, r17
    18ea:	04 ff       	sbrs	r16, 4
    18ec:	0d c0       	rjmp	.+26     	; 0x1908 <vfprintf+0x5be>
    18ee:	fe 01       	movw	r30, r28
    18f0:	ec 0d       	add	r30, r12
    18f2:	f1 1d       	adc	r31, r1
    18f4:	80 81       	ld	r24, Z
    18f6:	80 33       	cpi	r24, 0x30	; 48
    18f8:	11 f4       	brne	.+4      	; 0x18fe <vfprintf+0x5b4>
    18fa:	09 7e       	andi	r16, 0xE9	; 233
    18fc:	09 c0       	rjmp	.+18     	; 0x1910 <vfprintf+0x5c6>
    18fe:	02 ff       	sbrs	r16, 2
    1900:	06 c0       	rjmp	.+12     	; 0x190e <vfprintf+0x5c4>
    1902:	d3 94       	inc	r13
    1904:	d3 94       	inc	r13
    1906:	04 c0       	rjmp	.+8      	; 0x1910 <vfprintf+0x5c6>
    1908:	80 2f       	mov	r24, r16
    190a:	86 78       	andi	r24, 0x86	; 134
    190c:	09 f0       	breq	.+2      	; 0x1910 <vfprintf+0x5c6>
    190e:	d3 94       	inc	r13
    1910:	03 fd       	sbrc	r16, 3
    1912:	10 c0       	rjmp	.+32     	; 0x1934 <vfprintf+0x5ea>
    1914:	00 ff       	sbrs	r16, 0
    1916:	06 c0       	rjmp	.+12     	; 0x1924 <vfprintf+0x5da>
    1918:	1c 2d       	mov	r17, r12
    191a:	d5 14       	cp	r13, r5
    191c:	78 f4       	brcc	.+30     	; 0x193c <vfprintf+0x5f2>
    191e:	15 0d       	add	r17, r5
    1920:	1d 19       	sub	r17, r13
    1922:	0c c0       	rjmp	.+24     	; 0x193c <vfprintf+0x5f2>
    1924:	d5 14       	cp	r13, r5
    1926:	50 f4       	brcc	.+20     	; 0x193c <vfprintf+0x5f2>
    1928:	b7 01       	movw	r22, r14
    192a:	80 e2       	ldi	r24, 0x20	; 32
    192c:	90 e0       	ldi	r25, 0x00	; 0
    192e:	84 d1       	rcall	.+776    	; 0x1c38 <fputc>
    1930:	d3 94       	inc	r13
    1932:	f8 cf       	rjmp	.-16     	; 0x1924 <vfprintf+0x5da>
    1934:	d5 14       	cp	r13, r5
    1936:	10 f4       	brcc	.+4      	; 0x193c <vfprintf+0x5f2>
    1938:	5d 18       	sub	r5, r13
    193a:	01 c0       	rjmp	.+2      	; 0x193e <vfprintf+0x5f4>
    193c:	51 2c       	mov	r5, r1
    193e:	04 ff       	sbrs	r16, 4
    1940:	0f c0       	rjmp	.+30     	; 0x1960 <vfprintf+0x616>
    1942:	b7 01       	movw	r22, r14
    1944:	80 e3       	ldi	r24, 0x30	; 48
    1946:	90 e0       	ldi	r25, 0x00	; 0
    1948:	77 d1       	rcall	.+750    	; 0x1c38 <fputc>
    194a:	02 ff       	sbrs	r16, 2
    194c:	16 c0       	rjmp	.+44     	; 0x197a <vfprintf+0x630>
    194e:	01 fd       	sbrc	r16, 1
    1950:	03 c0       	rjmp	.+6      	; 0x1958 <vfprintf+0x60e>
    1952:	88 e7       	ldi	r24, 0x78	; 120
    1954:	90 e0       	ldi	r25, 0x00	; 0
    1956:	02 c0       	rjmp	.+4      	; 0x195c <vfprintf+0x612>
    1958:	88 e5       	ldi	r24, 0x58	; 88
    195a:	90 e0       	ldi	r25, 0x00	; 0
    195c:	b7 01       	movw	r22, r14
    195e:	0c c0       	rjmp	.+24     	; 0x1978 <vfprintf+0x62e>
    1960:	80 2f       	mov	r24, r16
    1962:	86 78       	andi	r24, 0x86	; 134
    1964:	51 f0       	breq	.+20     	; 0x197a <vfprintf+0x630>
    1966:	01 ff       	sbrs	r16, 1
    1968:	02 c0       	rjmp	.+4      	; 0x196e <vfprintf+0x624>
    196a:	8b e2       	ldi	r24, 0x2B	; 43
    196c:	01 c0       	rjmp	.+2      	; 0x1970 <vfprintf+0x626>
    196e:	80 e2       	ldi	r24, 0x20	; 32
    1970:	07 fd       	sbrc	r16, 7
    1972:	8d e2       	ldi	r24, 0x2D	; 45
    1974:	b7 01       	movw	r22, r14
    1976:	90 e0       	ldi	r25, 0x00	; 0
    1978:	5f d1       	rcall	.+702    	; 0x1c38 <fputc>
    197a:	c1 16       	cp	r12, r17
    197c:	30 f4       	brcc	.+12     	; 0x198a <vfprintf+0x640>
    197e:	b7 01       	movw	r22, r14
    1980:	80 e3       	ldi	r24, 0x30	; 48
    1982:	90 e0       	ldi	r25, 0x00	; 0
    1984:	59 d1       	rcall	.+690    	; 0x1c38 <fputc>
    1986:	11 50       	subi	r17, 0x01	; 1
    1988:	f8 cf       	rjmp	.-16     	; 0x197a <vfprintf+0x630>
    198a:	ca 94       	dec	r12
    198c:	f3 01       	movw	r30, r6
    198e:	ec 0d       	add	r30, r12
    1990:	f1 1d       	adc	r31, r1
    1992:	80 81       	ld	r24, Z
    1994:	b7 01       	movw	r22, r14
    1996:	90 e0       	ldi	r25, 0x00	; 0
    1998:	4f d1       	rcall	.+670    	; 0x1c38 <fputc>
    199a:	c1 10       	cpse	r12, r1
    199c:	f6 cf       	rjmp	.-20     	; 0x198a <vfprintf+0x640>
    199e:	15 c0       	rjmp	.+42     	; 0x19ca <vfprintf+0x680>
    19a0:	f4 e0       	ldi	r31, 0x04	; 4
    19a2:	f5 15       	cp	r31, r5
    19a4:	50 f5       	brcc	.+84     	; 0x19fa <vfprintf+0x6b0>
    19a6:	84 e0       	ldi	r24, 0x04	; 4
    19a8:	58 1a       	sub	r5, r24
    19aa:	93 fe       	sbrs	r9, 3
    19ac:	1e c0       	rjmp	.+60     	; 0x19ea <vfprintf+0x6a0>
    19ae:	01 11       	cpse	r16, r1
    19b0:	25 c0       	rjmp	.+74     	; 0x19fc <vfprintf+0x6b2>
    19b2:	2c 85       	ldd	r18, Y+12	; 0x0c
    19b4:	23 ff       	sbrs	r18, 3
    19b6:	27 c0       	rjmp	.+78     	; 0x1a06 <vfprintf+0x6bc>
    19b8:	04 ee       	ldi	r16, 0xE4	; 228
    19ba:	10 e0       	ldi	r17, 0x00	; 0
    19bc:	39 2d       	mov	r19, r9
    19be:	30 71       	andi	r19, 0x10	; 16
    19c0:	93 2e       	mov	r9, r19
    19c2:	f8 01       	movw	r30, r16
    19c4:	84 91       	lpm	r24, Z
    19c6:	81 11       	cpse	r24, r1
    19c8:	21 c0       	rjmp	.+66     	; 0x1a0c <vfprintf+0x6c2>
    19ca:	55 20       	and	r5, r5
    19cc:	09 f4       	brne	.+2      	; 0x19d0 <vfprintf+0x686>
    19ce:	fc cc       	rjmp	.-1544   	; 0x13c8 <vfprintf+0x7e>
    19d0:	b7 01       	movw	r22, r14
    19d2:	80 e2       	ldi	r24, 0x20	; 32
    19d4:	90 e0       	ldi	r25, 0x00	; 0
    19d6:	30 d1       	rcall	.+608    	; 0x1c38 <fputc>
    19d8:	5a 94       	dec	r5
    19da:	f7 cf       	rjmp	.-18     	; 0x19ca <vfprintf+0x680>
    19dc:	f7 01       	movw	r30, r14
    19de:	86 81       	ldd	r24, Z+6	; 0x06
    19e0:	97 81       	ldd	r25, Z+7	; 0x07
    19e2:	23 c0       	rjmp	.+70     	; 0x1a2a <vfprintf+0x6e0>
    19e4:	8f ef       	ldi	r24, 0xFF	; 255
    19e6:	9f ef       	ldi	r25, 0xFF	; 255
    19e8:	20 c0       	rjmp	.+64     	; 0x1a2a <vfprintf+0x6e0>
    19ea:	b7 01       	movw	r22, r14
    19ec:	80 e2       	ldi	r24, 0x20	; 32
    19ee:	90 e0       	ldi	r25, 0x00	; 0
    19f0:	23 d1       	rcall	.+582    	; 0x1c38 <fputc>
    19f2:	5a 94       	dec	r5
    19f4:	51 10       	cpse	r5, r1
    19f6:	f9 cf       	rjmp	.-14     	; 0x19ea <vfprintf+0x6a0>
    19f8:	da cf       	rjmp	.-76     	; 0x19ae <vfprintf+0x664>
    19fa:	51 2c       	mov	r5, r1
    19fc:	b7 01       	movw	r22, r14
    19fe:	80 2f       	mov	r24, r16
    1a00:	90 e0       	ldi	r25, 0x00	; 0
    1a02:	1a d1       	rcall	.+564    	; 0x1c38 <fputc>
    1a04:	d6 cf       	rjmp	.-84     	; 0x19b2 <vfprintf+0x668>
    1a06:	08 ee       	ldi	r16, 0xE8	; 232
    1a08:	10 e0       	ldi	r17, 0x00	; 0
    1a0a:	d8 cf       	rjmp	.-80     	; 0x19bc <vfprintf+0x672>
    1a0c:	91 10       	cpse	r9, r1
    1a0e:	80 52       	subi	r24, 0x20	; 32
    1a10:	b7 01       	movw	r22, r14
    1a12:	90 e0       	ldi	r25, 0x00	; 0
    1a14:	11 d1       	rcall	.+546    	; 0x1c38 <fputc>
    1a16:	0f 5f       	subi	r16, 0xFF	; 255
    1a18:	1f 4f       	sbci	r17, 0xFF	; 255
    1a1a:	d3 cf       	rjmp	.-90     	; 0x19c2 <vfprintf+0x678>
    1a1c:	23 e0       	ldi	r18, 0x03	; 3
    1a1e:	25 15       	cp	r18, r5
    1a20:	10 f4       	brcc	.+4      	; 0x1a26 <vfprintf+0x6dc>
    1a22:	83 e0       	ldi	r24, 0x03	; 3
    1a24:	c1 cf       	rjmp	.-126    	; 0x19a8 <vfprintf+0x65e>
    1a26:	51 2c       	mov	r5, r1
    1a28:	c4 cf       	rjmp	.-120    	; 0x19b2 <vfprintf+0x668>
    1a2a:	60 96       	adiw	r28, 0x10	; 16
    1a2c:	0f b6       	in	r0, 0x3f	; 63
    1a2e:	f8 94       	cli
    1a30:	de bf       	out	0x3e, r29	; 62
    1a32:	0f be       	out	0x3f, r0	; 63
    1a34:	cd bf       	out	0x3d, r28	; 61
    1a36:	df 91       	pop	r29
    1a38:	cf 91       	pop	r28
    1a3a:	1f 91       	pop	r17
    1a3c:	0f 91       	pop	r16
    1a3e:	ff 90       	pop	r15
    1a40:	ef 90       	pop	r14
    1a42:	df 90       	pop	r13
    1a44:	cf 90       	pop	r12
    1a46:	bf 90       	pop	r11
    1a48:	af 90       	pop	r10
    1a4a:	9f 90       	pop	r9
    1a4c:	8f 90       	pop	r8
    1a4e:	7f 90       	pop	r7
    1a50:	6f 90       	pop	r6
    1a52:	5f 90       	pop	r5
    1a54:	4f 90       	pop	r4
    1a56:	3f 90       	pop	r3
    1a58:	2f 90       	pop	r2
    1a5a:	08 95       	ret

00001a5c <__ftoa_engine>:
    1a5c:	28 30       	cpi	r18, 0x08	; 8
    1a5e:	08 f0       	brcs	.+2      	; 0x1a62 <__ftoa_engine+0x6>
    1a60:	27 e0       	ldi	r18, 0x07	; 7
    1a62:	33 27       	eor	r19, r19
    1a64:	da 01       	movw	r26, r20
    1a66:	99 0f       	add	r25, r25
    1a68:	31 1d       	adc	r19, r1
    1a6a:	87 fd       	sbrc	r24, 7
    1a6c:	91 60       	ori	r25, 0x01	; 1
    1a6e:	00 96       	adiw	r24, 0x00	; 0
    1a70:	61 05       	cpc	r22, r1
    1a72:	71 05       	cpc	r23, r1
    1a74:	39 f4       	brne	.+14     	; 0x1a84 <__ftoa_engine+0x28>
    1a76:	32 60       	ori	r19, 0x02	; 2
    1a78:	2e 5f       	subi	r18, 0xFE	; 254
    1a7a:	3d 93       	st	X+, r19
    1a7c:	30 e3       	ldi	r19, 0x30	; 48
    1a7e:	2a 95       	dec	r18
    1a80:	e1 f7       	brne	.-8      	; 0x1a7a <__ftoa_engine+0x1e>
    1a82:	08 95       	ret
    1a84:	9f 3f       	cpi	r25, 0xFF	; 255
    1a86:	30 f0       	brcs	.+12     	; 0x1a94 <__ftoa_engine+0x38>
    1a88:	80 38       	cpi	r24, 0x80	; 128
    1a8a:	71 05       	cpc	r23, r1
    1a8c:	61 05       	cpc	r22, r1
    1a8e:	09 f0       	breq	.+2      	; 0x1a92 <__ftoa_engine+0x36>
    1a90:	3c 5f       	subi	r19, 0xFC	; 252
    1a92:	3c 5f       	subi	r19, 0xFC	; 252
    1a94:	3d 93       	st	X+, r19
    1a96:	91 30       	cpi	r25, 0x01	; 1
    1a98:	08 f0       	brcs	.+2      	; 0x1a9c <__ftoa_engine+0x40>
    1a9a:	80 68       	ori	r24, 0x80	; 128
    1a9c:	91 1d       	adc	r25, r1
    1a9e:	df 93       	push	r29
    1aa0:	cf 93       	push	r28
    1aa2:	1f 93       	push	r17
    1aa4:	0f 93       	push	r16
    1aa6:	ff 92       	push	r15
    1aa8:	ef 92       	push	r14
    1aaa:	19 2f       	mov	r17, r25
    1aac:	98 7f       	andi	r25, 0xF8	; 248
    1aae:	96 95       	lsr	r25
    1ab0:	e9 2f       	mov	r30, r25
    1ab2:	96 95       	lsr	r25
    1ab4:	96 95       	lsr	r25
    1ab6:	e9 0f       	add	r30, r25
    1ab8:	ff 27       	eor	r31, r31
    1aba:	ea 5b       	subi	r30, 0xBA	; 186
    1abc:	fe 4f       	sbci	r31, 0xFE	; 254
    1abe:	99 27       	eor	r25, r25
    1ac0:	33 27       	eor	r19, r19
    1ac2:	ee 24       	eor	r14, r14
    1ac4:	ff 24       	eor	r15, r15
    1ac6:	a7 01       	movw	r20, r14
    1ac8:	e7 01       	movw	r28, r14
    1aca:	05 90       	lpm	r0, Z+
    1acc:	08 94       	sec
    1ace:	07 94       	ror	r0
    1ad0:	28 f4       	brcc	.+10     	; 0x1adc <__ftoa_engine+0x80>
    1ad2:	36 0f       	add	r19, r22
    1ad4:	e7 1e       	adc	r14, r23
    1ad6:	f8 1e       	adc	r15, r24
    1ad8:	49 1f       	adc	r20, r25
    1ada:	51 1d       	adc	r21, r1
    1adc:	66 0f       	add	r22, r22
    1ade:	77 1f       	adc	r23, r23
    1ae0:	88 1f       	adc	r24, r24
    1ae2:	99 1f       	adc	r25, r25
    1ae4:	06 94       	lsr	r0
    1ae6:	a1 f7       	brne	.-24     	; 0x1ad0 <__ftoa_engine+0x74>
    1ae8:	05 90       	lpm	r0, Z+
    1aea:	07 94       	ror	r0
    1aec:	28 f4       	brcc	.+10     	; 0x1af8 <__ftoa_engine+0x9c>
    1aee:	e7 0e       	add	r14, r23
    1af0:	f8 1e       	adc	r15, r24
    1af2:	49 1f       	adc	r20, r25
    1af4:	56 1f       	adc	r21, r22
    1af6:	c1 1d       	adc	r28, r1
    1af8:	77 0f       	add	r23, r23
    1afa:	88 1f       	adc	r24, r24
    1afc:	99 1f       	adc	r25, r25
    1afe:	66 1f       	adc	r22, r22
    1b00:	06 94       	lsr	r0
    1b02:	a1 f7       	brne	.-24     	; 0x1aec <__ftoa_engine+0x90>
    1b04:	05 90       	lpm	r0, Z+
    1b06:	07 94       	ror	r0
    1b08:	28 f4       	brcc	.+10     	; 0x1b14 <__ftoa_engine+0xb8>
    1b0a:	f8 0e       	add	r15, r24
    1b0c:	49 1f       	adc	r20, r25
    1b0e:	56 1f       	adc	r21, r22
    1b10:	c7 1f       	adc	r28, r23
    1b12:	d1 1d       	adc	r29, r1
    1b14:	88 0f       	add	r24, r24
    1b16:	99 1f       	adc	r25, r25
    1b18:	66 1f       	adc	r22, r22
    1b1a:	77 1f       	adc	r23, r23
    1b1c:	06 94       	lsr	r0
    1b1e:	a1 f7       	brne	.-24     	; 0x1b08 <__ftoa_engine+0xac>
    1b20:	05 90       	lpm	r0, Z+
    1b22:	07 94       	ror	r0
    1b24:	20 f4       	brcc	.+8      	; 0x1b2e <__ftoa_engine+0xd2>
    1b26:	49 0f       	add	r20, r25
    1b28:	56 1f       	adc	r21, r22
    1b2a:	c7 1f       	adc	r28, r23
    1b2c:	d8 1f       	adc	r29, r24
    1b2e:	99 0f       	add	r25, r25
    1b30:	66 1f       	adc	r22, r22
    1b32:	77 1f       	adc	r23, r23
    1b34:	88 1f       	adc	r24, r24
    1b36:	06 94       	lsr	r0
    1b38:	a9 f7       	brne	.-22     	; 0x1b24 <__ftoa_engine+0xc8>
    1b3a:	84 91       	lpm	r24, Z
    1b3c:	10 95       	com	r17
    1b3e:	17 70       	andi	r17, 0x07	; 7
    1b40:	41 f0       	breq	.+16     	; 0x1b52 <__ftoa_engine+0xf6>
    1b42:	d6 95       	lsr	r29
    1b44:	c7 95       	ror	r28
    1b46:	57 95       	ror	r21
    1b48:	47 95       	ror	r20
    1b4a:	f7 94       	ror	r15
    1b4c:	e7 94       	ror	r14
    1b4e:	1a 95       	dec	r17
    1b50:	c1 f7       	brne	.-16     	; 0x1b42 <__ftoa_engine+0xe6>
    1b52:	ec ee       	ldi	r30, 0xEC	; 236
    1b54:	f0 e0       	ldi	r31, 0x00	; 0
    1b56:	68 94       	set
    1b58:	15 90       	lpm	r1, Z+
    1b5a:	15 91       	lpm	r17, Z+
    1b5c:	35 91       	lpm	r19, Z+
    1b5e:	65 91       	lpm	r22, Z+
    1b60:	95 91       	lpm	r25, Z+
    1b62:	05 90       	lpm	r0, Z+
    1b64:	7f e2       	ldi	r23, 0x2F	; 47
    1b66:	73 95       	inc	r23
    1b68:	e1 18       	sub	r14, r1
    1b6a:	f1 0a       	sbc	r15, r17
    1b6c:	43 0b       	sbc	r20, r19
    1b6e:	56 0b       	sbc	r21, r22
    1b70:	c9 0b       	sbc	r28, r25
    1b72:	d0 09       	sbc	r29, r0
    1b74:	c0 f7       	brcc	.-16     	; 0x1b66 <__ftoa_engine+0x10a>
    1b76:	e1 0c       	add	r14, r1
    1b78:	f1 1e       	adc	r15, r17
    1b7a:	43 1f       	adc	r20, r19
    1b7c:	56 1f       	adc	r21, r22
    1b7e:	c9 1f       	adc	r28, r25
    1b80:	d0 1d       	adc	r29, r0
    1b82:	7e f4       	brtc	.+30     	; 0x1ba2 <__ftoa_engine+0x146>
    1b84:	70 33       	cpi	r23, 0x30	; 48
    1b86:	11 f4       	brne	.+4      	; 0x1b8c <__ftoa_engine+0x130>
    1b88:	8a 95       	dec	r24
    1b8a:	e6 cf       	rjmp	.-52     	; 0x1b58 <__ftoa_engine+0xfc>
    1b8c:	e8 94       	clt
    1b8e:	01 50       	subi	r16, 0x01	; 1
    1b90:	30 f0       	brcs	.+12     	; 0x1b9e <__ftoa_engine+0x142>
    1b92:	08 0f       	add	r16, r24
    1b94:	0a f4       	brpl	.+2      	; 0x1b98 <__ftoa_engine+0x13c>
    1b96:	00 27       	eor	r16, r16
    1b98:	02 17       	cp	r16, r18
    1b9a:	08 f4       	brcc	.+2      	; 0x1b9e <__ftoa_engine+0x142>
    1b9c:	20 2f       	mov	r18, r16
    1b9e:	23 95       	inc	r18
    1ba0:	02 2f       	mov	r16, r18
    1ba2:	7a 33       	cpi	r23, 0x3A	; 58
    1ba4:	28 f0       	brcs	.+10     	; 0x1bb0 <__ftoa_engine+0x154>
    1ba6:	79 e3       	ldi	r23, 0x39	; 57
    1ba8:	7d 93       	st	X+, r23
    1baa:	2a 95       	dec	r18
    1bac:	e9 f7       	brne	.-6      	; 0x1ba8 <__ftoa_engine+0x14c>
    1bae:	10 c0       	rjmp	.+32     	; 0x1bd0 <__ftoa_engine+0x174>
    1bb0:	7d 93       	st	X+, r23
    1bb2:	2a 95       	dec	r18
    1bb4:	89 f6       	brne	.-94     	; 0x1b58 <__ftoa_engine+0xfc>
    1bb6:	06 94       	lsr	r0
    1bb8:	97 95       	ror	r25
    1bba:	67 95       	ror	r22
    1bbc:	37 95       	ror	r19
    1bbe:	17 95       	ror	r17
    1bc0:	17 94       	ror	r1
    1bc2:	e1 18       	sub	r14, r1
    1bc4:	f1 0a       	sbc	r15, r17
    1bc6:	43 0b       	sbc	r20, r19
    1bc8:	56 0b       	sbc	r21, r22
    1bca:	c9 0b       	sbc	r28, r25
    1bcc:	d0 09       	sbc	r29, r0
    1bce:	98 f0       	brcs	.+38     	; 0x1bf6 <__ftoa_engine+0x19a>
    1bd0:	23 95       	inc	r18
    1bd2:	7e 91       	ld	r23, -X
    1bd4:	73 95       	inc	r23
    1bd6:	7a 33       	cpi	r23, 0x3A	; 58
    1bd8:	08 f0       	brcs	.+2      	; 0x1bdc <__ftoa_engine+0x180>
    1bda:	70 e3       	ldi	r23, 0x30	; 48
    1bdc:	7c 93       	st	X, r23
    1bde:	20 13       	cpse	r18, r16
    1be0:	b8 f7       	brcc	.-18     	; 0x1bd0 <__ftoa_engine+0x174>
    1be2:	7e 91       	ld	r23, -X
    1be4:	70 61       	ori	r23, 0x10	; 16
    1be6:	7d 93       	st	X+, r23
    1be8:	30 f0       	brcs	.+12     	; 0x1bf6 <__ftoa_engine+0x19a>
    1bea:	83 95       	inc	r24
    1bec:	71 e3       	ldi	r23, 0x31	; 49
    1bee:	7d 93       	st	X+, r23
    1bf0:	70 e3       	ldi	r23, 0x30	; 48
    1bf2:	2a 95       	dec	r18
    1bf4:	e1 f7       	brne	.-8      	; 0x1bee <__ftoa_engine+0x192>
    1bf6:	11 24       	eor	r1, r1
    1bf8:	ef 90       	pop	r14
    1bfa:	ff 90       	pop	r15
    1bfc:	0f 91       	pop	r16
    1bfe:	1f 91       	pop	r17
    1c00:	cf 91       	pop	r28
    1c02:	df 91       	pop	r29
    1c04:	99 27       	eor	r25, r25
    1c06:	87 fd       	sbrc	r24, 7
    1c08:	90 95       	com	r25
    1c0a:	08 95       	ret

00001c0c <strnlen_P>:
    1c0c:	fc 01       	movw	r30, r24
    1c0e:	05 90       	lpm	r0, Z+
    1c10:	61 50       	subi	r22, 0x01	; 1
    1c12:	70 40       	sbci	r23, 0x00	; 0
    1c14:	01 10       	cpse	r0, r1
    1c16:	d8 f7       	brcc	.-10     	; 0x1c0e <strnlen_P+0x2>
    1c18:	80 95       	com	r24
    1c1a:	90 95       	com	r25
    1c1c:	8e 0f       	add	r24, r30
    1c1e:	9f 1f       	adc	r25, r31
    1c20:	08 95       	ret

00001c22 <strnlen>:
    1c22:	fc 01       	movw	r30, r24
    1c24:	61 50       	subi	r22, 0x01	; 1
    1c26:	70 40       	sbci	r23, 0x00	; 0
    1c28:	01 90       	ld	r0, Z+
    1c2a:	01 10       	cpse	r0, r1
    1c2c:	d8 f7       	brcc	.-10     	; 0x1c24 <strnlen+0x2>
    1c2e:	80 95       	com	r24
    1c30:	90 95       	com	r25
    1c32:	8e 0f       	add	r24, r30
    1c34:	9f 1f       	adc	r25, r31
    1c36:	08 95       	ret

00001c38 <fputc>:
    1c38:	0f 93       	push	r16
    1c3a:	1f 93       	push	r17
    1c3c:	cf 93       	push	r28
    1c3e:	df 93       	push	r29
    1c40:	fb 01       	movw	r30, r22
    1c42:	23 81       	ldd	r18, Z+3	; 0x03
    1c44:	21 fd       	sbrc	r18, 1
    1c46:	03 c0       	rjmp	.+6      	; 0x1c4e <fputc+0x16>
    1c48:	8f ef       	ldi	r24, 0xFF	; 255
    1c4a:	9f ef       	ldi	r25, 0xFF	; 255
    1c4c:	2c c0       	rjmp	.+88     	; 0x1ca6 <fputc+0x6e>
    1c4e:	22 ff       	sbrs	r18, 2
    1c50:	16 c0       	rjmp	.+44     	; 0x1c7e <fputc+0x46>
    1c52:	46 81       	ldd	r20, Z+6	; 0x06
    1c54:	57 81       	ldd	r21, Z+7	; 0x07
    1c56:	24 81       	ldd	r18, Z+4	; 0x04
    1c58:	35 81       	ldd	r19, Z+5	; 0x05
    1c5a:	42 17       	cp	r20, r18
    1c5c:	53 07       	cpc	r21, r19
    1c5e:	44 f4       	brge	.+16     	; 0x1c70 <fputc+0x38>
    1c60:	a0 81       	ld	r26, Z
    1c62:	b1 81       	ldd	r27, Z+1	; 0x01
    1c64:	9d 01       	movw	r18, r26
    1c66:	2f 5f       	subi	r18, 0xFF	; 255
    1c68:	3f 4f       	sbci	r19, 0xFF	; 255
    1c6a:	31 83       	std	Z+1, r19	; 0x01
    1c6c:	20 83       	st	Z, r18
    1c6e:	8c 93       	st	X, r24
    1c70:	26 81       	ldd	r18, Z+6	; 0x06
    1c72:	37 81       	ldd	r19, Z+7	; 0x07
    1c74:	2f 5f       	subi	r18, 0xFF	; 255
    1c76:	3f 4f       	sbci	r19, 0xFF	; 255
    1c78:	37 83       	std	Z+7, r19	; 0x07
    1c7a:	26 83       	std	Z+6, r18	; 0x06
    1c7c:	14 c0       	rjmp	.+40     	; 0x1ca6 <fputc+0x6e>
    1c7e:	8b 01       	movw	r16, r22
    1c80:	ec 01       	movw	r28, r24
    1c82:	fb 01       	movw	r30, r22
    1c84:	00 84       	ldd	r0, Z+8	; 0x08
    1c86:	f1 85       	ldd	r31, Z+9	; 0x09
    1c88:	e0 2d       	mov	r30, r0
    1c8a:	19 95       	eicall
    1c8c:	89 2b       	or	r24, r25
    1c8e:	e1 f6       	brne	.-72     	; 0x1c48 <fputc+0x10>
    1c90:	d8 01       	movw	r26, r16
    1c92:	16 96       	adiw	r26, 0x06	; 6
    1c94:	8d 91       	ld	r24, X+
    1c96:	9c 91       	ld	r25, X
    1c98:	17 97       	sbiw	r26, 0x07	; 7
    1c9a:	01 96       	adiw	r24, 0x01	; 1
    1c9c:	17 96       	adiw	r26, 0x07	; 7
    1c9e:	9c 93       	st	X, r25
    1ca0:	8e 93       	st	-X, r24
    1ca2:	16 97       	sbiw	r26, 0x06	; 6
    1ca4:	ce 01       	movw	r24, r28
    1ca6:	df 91       	pop	r29
    1ca8:	cf 91       	pop	r28
    1caa:	1f 91       	pop	r17
    1cac:	0f 91       	pop	r16
    1cae:	08 95       	ret

00001cb0 <sprintf>:
    1cb0:	0f 93       	push	r16
    1cb2:	1f 93       	push	r17
    1cb4:	cf 93       	push	r28
    1cb6:	df 93       	push	r29
    1cb8:	cd b7       	in	r28, 0x3d	; 61
    1cba:	de b7       	in	r29, 0x3e	; 62
    1cbc:	2e 97       	sbiw	r28, 0x0e	; 14
    1cbe:	0f b6       	in	r0, 0x3f	; 63
    1cc0:	f8 94       	cli
    1cc2:	de bf       	out	0x3e, r29	; 62
    1cc4:	0f be       	out	0x3f, r0	; 63
    1cc6:	cd bf       	out	0x3d, r28	; 61
    1cc8:	0e 89       	ldd	r16, Y+22	; 0x16
    1cca:	1f 89       	ldd	r17, Y+23	; 0x17
    1ccc:	86 e0       	ldi	r24, 0x06	; 6
    1cce:	8c 83       	std	Y+4, r24	; 0x04
    1cd0:	1a 83       	std	Y+2, r17	; 0x02
    1cd2:	09 83       	std	Y+1, r16	; 0x01
    1cd4:	8f ef       	ldi	r24, 0xFF	; 255
    1cd6:	9f e7       	ldi	r25, 0x7F	; 127
    1cd8:	9e 83       	std	Y+6, r25	; 0x06
    1cda:	8d 83       	std	Y+5, r24	; 0x05
    1cdc:	ae 01       	movw	r20, r28
    1cde:	46 5e       	subi	r20, 0xE6	; 230
    1ce0:	5f 4f       	sbci	r21, 0xFF	; 255
    1ce2:	68 8d       	ldd	r22, Y+24	; 0x18
    1ce4:	79 8d       	ldd	r23, Y+25	; 0x19
    1ce6:	ce 01       	movw	r24, r28
    1ce8:	01 96       	adiw	r24, 0x01	; 1
    1cea:	2f db       	rcall	.-2466   	; 0x134a <vfprintf>
    1cec:	ef 81       	ldd	r30, Y+7	; 0x07
    1cee:	f8 85       	ldd	r31, Y+8	; 0x08
    1cf0:	e0 0f       	add	r30, r16
    1cf2:	f1 1f       	adc	r31, r17
    1cf4:	10 82       	st	Z, r1
    1cf6:	2e 96       	adiw	r28, 0x0e	; 14
    1cf8:	0f b6       	in	r0, 0x3f	; 63
    1cfa:	f8 94       	cli
    1cfc:	de bf       	out	0x3e, r29	; 62
    1cfe:	0f be       	out	0x3f, r0	; 63
    1d00:	cd bf       	out	0x3d, r28	; 61
    1d02:	df 91       	pop	r29
    1d04:	cf 91       	pop	r28
    1d06:	1f 91       	pop	r17
    1d08:	0f 91       	pop	r16
    1d0a:	08 95       	ret

00001d0c <__ultoa_invert>:
    1d0c:	fa 01       	movw	r30, r20
    1d0e:	aa 27       	eor	r26, r26
    1d10:	28 30       	cpi	r18, 0x08	; 8
    1d12:	51 f1       	breq	.+84     	; 0x1d68 <__ultoa_invert+0x5c>
    1d14:	20 31       	cpi	r18, 0x10	; 16
    1d16:	81 f1       	breq	.+96     	; 0x1d78 <__ultoa_invert+0x6c>
    1d18:	e8 94       	clt
    1d1a:	6f 93       	push	r22
    1d1c:	6e 7f       	andi	r22, 0xFE	; 254
    1d1e:	6e 5f       	subi	r22, 0xFE	; 254
    1d20:	7f 4f       	sbci	r23, 0xFF	; 255
    1d22:	8f 4f       	sbci	r24, 0xFF	; 255
    1d24:	9f 4f       	sbci	r25, 0xFF	; 255
    1d26:	af 4f       	sbci	r26, 0xFF	; 255
    1d28:	b1 e0       	ldi	r27, 0x01	; 1
    1d2a:	3e d0       	rcall	.+124    	; 0x1da8 <__ultoa_invert+0x9c>
    1d2c:	b4 e0       	ldi	r27, 0x04	; 4
    1d2e:	3c d0       	rcall	.+120    	; 0x1da8 <__ultoa_invert+0x9c>
    1d30:	67 0f       	add	r22, r23
    1d32:	78 1f       	adc	r23, r24
    1d34:	89 1f       	adc	r24, r25
    1d36:	9a 1f       	adc	r25, r26
    1d38:	a1 1d       	adc	r26, r1
    1d3a:	68 0f       	add	r22, r24
    1d3c:	79 1f       	adc	r23, r25
    1d3e:	8a 1f       	adc	r24, r26
    1d40:	91 1d       	adc	r25, r1
    1d42:	a1 1d       	adc	r26, r1
    1d44:	6a 0f       	add	r22, r26
    1d46:	71 1d       	adc	r23, r1
    1d48:	81 1d       	adc	r24, r1
    1d4a:	91 1d       	adc	r25, r1
    1d4c:	a1 1d       	adc	r26, r1
    1d4e:	20 d0       	rcall	.+64     	; 0x1d90 <__ultoa_invert+0x84>
    1d50:	09 f4       	brne	.+2      	; 0x1d54 <__ultoa_invert+0x48>
    1d52:	68 94       	set
    1d54:	3f 91       	pop	r19
    1d56:	2a e0       	ldi	r18, 0x0A	; 10
    1d58:	26 9f       	mul	r18, r22
    1d5a:	11 24       	eor	r1, r1
    1d5c:	30 19       	sub	r19, r0
    1d5e:	30 5d       	subi	r19, 0xD0	; 208
    1d60:	31 93       	st	Z+, r19
    1d62:	de f6       	brtc	.-74     	; 0x1d1a <__ultoa_invert+0xe>
    1d64:	cf 01       	movw	r24, r30
    1d66:	08 95       	ret
    1d68:	46 2f       	mov	r20, r22
    1d6a:	47 70       	andi	r20, 0x07	; 7
    1d6c:	40 5d       	subi	r20, 0xD0	; 208
    1d6e:	41 93       	st	Z+, r20
    1d70:	b3 e0       	ldi	r27, 0x03	; 3
    1d72:	0f d0       	rcall	.+30     	; 0x1d92 <__ultoa_invert+0x86>
    1d74:	c9 f7       	brne	.-14     	; 0x1d68 <__ultoa_invert+0x5c>
    1d76:	f6 cf       	rjmp	.-20     	; 0x1d64 <__ultoa_invert+0x58>
    1d78:	46 2f       	mov	r20, r22
    1d7a:	4f 70       	andi	r20, 0x0F	; 15
    1d7c:	40 5d       	subi	r20, 0xD0	; 208
    1d7e:	4a 33       	cpi	r20, 0x3A	; 58
    1d80:	18 f0       	brcs	.+6      	; 0x1d88 <__ultoa_invert+0x7c>
    1d82:	49 5d       	subi	r20, 0xD9	; 217
    1d84:	31 fd       	sbrc	r19, 1
    1d86:	40 52       	subi	r20, 0x20	; 32
    1d88:	41 93       	st	Z+, r20
    1d8a:	02 d0       	rcall	.+4      	; 0x1d90 <__ultoa_invert+0x84>
    1d8c:	a9 f7       	brne	.-22     	; 0x1d78 <__ultoa_invert+0x6c>
    1d8e:	ea cf       	rjmp	.-44     	; 0x1d64 <__ultoa_invert+0x58>
    1d90:	b4 e0       	ldi	r27, 0x04	; 4
    1d92:	a6 95       	lsr	r26
    1d94:	97 95       	ror	r25
    1d96:	87 95       	ror	r24
    1d98:	77 95       	ror	r23
    1d9a:	67 95       	ror	r22
    1d9c:	ba 95       	dec	r27
    1d9e:	c9 f7       	brne	.-14     	; 0x1d92 <__ultoa_invert+0x86>
    1da0:	00 97       	sbiw	r24, 0x00	; 0
    1da2:	61 05       	cpc	r22, r1
    1da4:	71 05       	cpc	r23, r1
    1da6:	08 95       	ret
    1da8:	9b 01       	movw	r18, r22
    1daa:	ac 01       	movw	r20, r24
    1dac:	0a 2e       	mov	r0, r26
    1dae:	06 94       	lsr	r0
    1db0:	57 95       	ror	r21
    1db2:	47 95       	ror	r20
    1db4:	37 95       	ror	r19
    1db6:	27 95       	ror	r18
    1db8:	ba 95       	dec	r27
    1dba:	c9 f7       	brne	.-14     	; 0x1dae <__ultoa_invert+0xa2>
    1dbc:	62 0f       	add	r22, r18
    1dbe:	73 1f       	adc	r23, r19
    1dc0:	84 1f       	adc	r24, r20
    1dc2:	95 1f       	adc	r25, r21
    1dc4:	a0 1d       	adc	r26, r0
    1dc6:	08 95       	ret

00001dc8 <_exit>:
    1dc8:	f8 94       	cli

00001dca <__stop_program>:
    1dca:	ff cf       	rjmp	.-2      	; 0x1dca <__stop_program>
